Search.setIndex({"docnames": ["_generated/semantique.ArrayProxy", "_generated/semantique.ArrayProxy.apply_custom", "_generated/semantique.ArrayProxy.assign", "_generated/semantique.ArrayProxy.assign_space", "_generated/semantique.ArrayProxy.assign_time", "_generated/semantique.ArrayProxy.delineate", "_generated/semantique.ArrayProxy.evaluate", "_generated/semantique.ArrayProxy.extract", "_generated/semantique.ArrayProxy.fill", "_generated/semantique.ArrayProxy.filter", "_generated/semantique.ArrayProxy.filter_space", "_generated/semantique.ArrayProxy.filter_time", "_generated/semantique.ArrayProxy.groupby", "_generated/semantique.ArrayProxy.groupby_space", "_generated/semantique.ArrayProxy.groupby_time", "_generated/semantique.ArrayProxy.name", "_generated/semantique.ArrayProxy.reduce", "_generated/semantique.ArrayProxy.shift", "_generated/semantique.ArrayProxy.smooth", "_generated/semantique.ArrayProxy.trim", "_generated/semantique.CollectionProxy", "_generated/semantique.CollectionProxy.apply_custom", "_generated/semantique.CollectionProxy.assign", "_generated/semantique.CollectionProxy.assign_space", "_generated/semantique.CollectionProxy.assign_time", "_generated/semantique.CollectionProxy.compose", "_generated/semantique.CollectionProxy.concatenate", "_generated/semantique.CollectionProxy.delineate", "_generated/semantique.CollectionProxy.evaluate", "_generated/semantique.CollectionProxy.extract", "_generated/semantique.CollectionProxy.fill", "_generated/semantique.CollectionProxy.filter", "_generated/semantique.CollectionProxy.filter_space", "_generated/semantique.CollectionProxy.filter_time", "_generated/semantique.CollectionProxy.merge", "_generated/semantique.CollectionProxy.reduce", "_generated/semantique.CollectionProxy.shift", "_generated/semantique.CollectionProxy.smooth", "_generated/semantique.CollectionProxy.trim", "_generated/semantique.QueryRecipe", "_generated/semantique.QueryRecipe.execute", "_generated/semantique.appearance", "_generated/semantique.artifacts", "_generated/semantique.atmosphere", "_generated/semantique.collection", "_generated/semantique.components.space", "_generated/semantique.components.space.FEATURE", "_generated/semantique.components.space.X", "_generated/semantique.components.space.Y", "_generated/semantique.components.time", "_generated/semantique.components.time.DAY", "_generated/semantique.components.time.DAY_OF_WEEK", "_generated/semantique.components.time.DAY_OF_YEAR", "_generated/semantique.components.time.HOUR", "_generated/semantique.components.time.MINUTE", "_generated/semantique.components.time.MONTH", "_generated/semantique.components.time.QUARTER", "_generated/semantique.components.time.SEASON", "_generated/semantique.components.time.SECOND", "_generated/semantique.components.time.WEEK", "_generated/semantique.components.time.YEAR", "_generated/semantique.concept", "_generated/semantique.datacube.Datacube", "_generated/semantique.datacube.Datacube.layout", "_generated/semantique.datacube.Datacube.lookup", "_generated/semantique.datacube.Datacube.retrieve", "_generated/semantique.datacube.GeotiffArchive", "_generated/semantique.datacube.GeotiffArchive.config", "_generated/semantique.datacube.GeotiffArchive.layout", "_generated/semantique.datacube.GeotiffArchive.lookup", "_generated/semantique.datacube.GeotiffArchive.retrieve", "_generated/semantique.datacube.GeotiffArchive.src", "_generated/semantique.datacube.GeotiffArchive.tz", "_generated/semantique.datacube.Opendatacube", "_generated/semantique.datacube.Opendatacube.config", "_generated/semantique.datacube.Opendatacube.connection", "_generated/semantique.datacube.Opendatacube.layout", "_generated/semantique.datacube.Opendatacube.lookup", "_generated/semantique.datacube.Opendatacube.retrieve", "_generated/semantique.datacube.Opendatacube.tz", "_generated/semantique.dimensions.SPACE", "_generated/semantique.dimensions.TIME", "_generated/semantique.dimensions.X", "_generated/semantique.dimensions.Y", "_generated/semantique.entity", "_generated/semantique.event", "_generated/semantique.exceptions.AlignmentError", "_generated/semantique.exceptions.EmptyDataError", "_generated/semantique.exceptions.InvalidBuildingBlockError", "_generated/semantique.exceptions.InvalidIntervalError", "_generated/semantique.exceptions.InvalidValueTypeError", "_generated/semantique.exceptions.MissingDimensionError", "_generated/semantique.exceptions.MixedDimensionsError", "_generated/semantique.exceptions.MixedTimeZonesError", "_generated/semantique.exceptions.ReservedDimensionError", "_generated/semantique.exceptions.TooManyDimensionsError", "_generated/semantique.exceptions.UnknownComponentError", "_generated/semantique.exceptions.UnknownConceptError", "_generated/semantique.exceptions.UnknownDimensionError", "_generated/semantique.exceptions.UnknownLabelError", "_generated/semantique.exceptions.UnknownLayerError", "_generated/semantique.exceptions.UnknownOperatorError", "_generated/semantique.exceptions.UnknownReducerError", "_generated/semantique.exceptions.UnknownResultError", "_generated/semantique.exceptions.UnknownVerbError", "_generated/semantique.extent.SpatialExtent", "_generated/semantique.extent.SpatialExtent.crs", "_generated/semantique.extent.SpatialExtent.features", "_generated/semantique.extent.SpatialExtent.from_feature", "_generated/semantique.extent.SpatialExtent.from_featurecollection", "_generated/semantique.extent.SpatialExtent.from_geojson", "_generated/semantique.extent.SpatialExtent.from_geometry", "_generated/semantique.extent.SpatialExtent.rasterize", "_generated/semantique.extent.TemporalExtent", "_generated/semantique.extent.TemporalExtent.discretize", "_generated/semantique.extent.TemporalExtent.end", "_generated/semantique.extent.TemporalExtent.start", "_generated/semantique.extent.TemporalExtent.tz", "_generated/semantique.geometry", "_generated/semantique.interval", "_generated/semantique.label", "_generated/semantique.layer", "_generated/semantique.mapping.Mapping", "_generated/semantique.mapping.Mapping.lookup", "_generated/semantique.mapping.Mapping.translate", "_generated/semantique.mapping.Semantique", "_generated/semantique.mapping.Semantique.lookup", "_generated/semantique.mapping.Semantique.translate", "_generated/semantique.operators.ABSOLUTE", "_generated/semantique.operators.ADD", "_generated/semantique.operators.AFTER", "_generated/semantique.operators.AND", "_generated/semantique.operators.BEFORE", "_generated/semantique.operators.CEILING", "_generated/semantique.operators.COSECANT", "_generated/semantique.operators.COSINE", "_generated/semantique.operators.COTANGENT", "_generated/semantique.operators.CUBE_ROOT", "_generated/semantique.operators.DIVIDE", "_generated/semantique.operators.DURING", "_generated/semantique.operators.EQUAL", "_generated/semantique.operators.EXCLUSIVE_OR", "_generated/semantique.operators.EXPONENTIAL", "_generated/semantique.operators.FLOOR", "_generated/semantique.operators.GREATER", "_generated/semantique.operators.GREATER_EQUAL", "_generated/semantique.operators.IN", "_generated/semantique.operators.INTERSECTS", "_generated/semantique.operators.IS_MISSING", "_generated/semantique.operators.LESS", "_generated/semantique.operators.LESS_EQUAL", "_generated/semantique.operators.MULTIPLY", "_generated/semantique.operators.NATURAL_LOGARITHM", "_generated/semantique.operators.NORMALIZED_DIFFERENCE", "_generated/semantique.operators.NOT", "_generated/semantique.operators.NOT_EQUAL", "_generated/semantique.operators.NOT_IN", "_generated/semantique.operators.NOT_MISSING", "_generated/semantique.operators.OR", "_generated/semantique.operators.POWER", "_generated/semantique.operators.SECANT", "_generated/semantique.operators.SINE", "_generated/semantique.operators.SQUARE_ROOT", "_generated/semantique.operators.SUBTRACT", "_generated/semantique.operators.TANGENT", "_generated/semantique.operators.TO_DEGREES", "_generated/semantique.operators.TO_RADIANS", "_generated/semantique.processor.arrays.Array", "_generated/semantique.processor.arrays.Array.align_with", "_generated/semantique.processor.arrays.Array.apply_custom", "_generated/semantique.processor.arrays.Array.assign", "_generated/semantique.processor.arrays.Array.crs", "_generated/semantique.processor.arrays.Array.delineate", "_generated/semantique.processor.arrays.Array.drop_non_dimension_coords", "_generated/semantique.processor.arrays.Array.evaluate", "_generated/semantique.processor.arrays.Array.extract", "_generated/semantique.processor.arrays.Array.fill", "_generated/semantique.processor.arrays.Array.filter", "_generated/semantique.processor.arrays.Array.grid_points", "_generated/semantique.processor.arrays.Array.groupby", "_generated/semantique.processor.arrays.Array.is_empty", "_generated/semantique.processor.arrays.Array.name", "_generated/semantique.processor.arrays.Array.reduce", "_generated/semantique.processor.arrays.Array.regularize", "_generated/semantique.processor.arrays.Array.reproject", "_generated/semantique.processor.arrays.Array.shift", "_generated/semantique.processor.arrays.Array.smooth", "_generated/semantique.processor.arrays.Array.spatial_resolution", "_generated/semantique.processor.arrays.Array.stack_all_dims", "_generated/semantique.processor.arrays.Array.stack_spatial_dims", "_generated/semantique.processor.arrays.Array.to_csv", "_generated/semantique.processor.arrays.Array.to_dataframe", "_generated/semantique.processor.arrays.Array.to_geodataframe", "_generated/semantique.processor.arrays.Array.to_geotiff", "_generated/semantique.processor.arrays.Array.trim", "_generated/semantique.processor.arrays.Array.tz", "_generated/semantique.processor.arrays.Array.tz_convert", "_generated/semantique.processor.arrays.Array.unstack_all_dims", "_generated/semantique.processor.arrays.Array.unstack_spatial_dims", "_generated/semantique.processor.arrays.Array.value_labels", "_generated/semantique.processor.arrays.Array.value_type", "_generated/semantique.processor.arrays.Array.write_crs", "_generated/semantique.processor.arrays.Array.write_tz", "_generated/semantique.processor.arrays.Collection", "_generated/semantique.processor.arrays.Collection.apply_custom", "_generated/semantique.processor.arrays.Collection.assign", "_generated/semantique.processor.arrays.Collection.compose", "_generated/semantique.processor.arrays.Collection.concatenate", "_generated/semantique.processor.arrays.Collection.delineate", "_generated/semantique.processor.arrays.Collection.evaluate", "_generated/semantique.processor.arrays.Collection.extract", "_generated/semantique.processor.arrays.Collection.fill", "_generated/semantique.processor.arrays.Collection.filter", "_generated/semantique.processor.arrays.Collection.is_empty", "_generated/semantique.processor.arrays.Collection.merge", "_generated/semantique.processor.arrays.Collection.name", "_generated/semantique.processor.arrays.Collection.reduce", "_generated/semantique.processor.arrays.Collection.regularize", "_generated/semantique.processor.arrays.Collection.shift", "_generated/semantique.processor.arrays.Collection.smooth", "_generated/semantique.processor.arrays.Collection.sq", "_generated/semantique.processor.arrays.Collection.stack_spatial_dims", "_generated/semantique.processor.arrays.Collection.trim", "_generated/semantique.processor.arrays.Collection.unstack_spatial_dims", "_generated/semantique.processor.core.QueryProcessor", "_generated/semantique.processor.core.QueryProcessor.add_custom_operator", "_generated/semantique.processor.core.QueryProcessor.add_custom_reducer", "_generated/semantique.processor.core.QueryProcessor.add_custom_verb", "_generated/semantique.processor.core.QueryProcessor.call_handler", "_generated/semantique.processor.core.QueryProcessor.call_verb", "_generated/semantique.processor.core.QueryProcessor.crs", "_generated/semantique.processor.core.QueryProcessor.custom_operators", "_generated/semantique.processor.core.QueryProcessor.custom_reducers", "_generated/semantique.processor.core.QueryProcessor.custom_verbs", "_generated/semantique.processor.core.QueryProcessor.datacube", "_generated/semantique.processor.core.QueryProcessor.execute", "_generated/semantique.processor.core.QueryProcessor.extent", "_generated/semantique.processor.core.QueryProcessor.get_operator", "_generated/semantique.processor.core.QueryProcessor.get_reducer", "_generated/semantique.processor.core.QueryProcessor.handle_apply_custom", "_generated/semantique.processor.core.QueryProcessor.handle_assign", "_generated/semantique.processor.core.QueryProcessor.handle_collection", "_generated/semantique.processor.core.QueryProcessor.handle_compose", "_generated/semantique.processor.core.QueryProcessor.handle_concatenate", "_generated/semantique.processor.core.QueryProcessor.handle_concept", "_generated/semantique.processor.core.QueryProcessor.handle_delineate", "_generated/semantique.processor.core.QueryProcessor.handle_evaluate", "_generated/semantique.processor.core.QueryProcessor.handle_extract", "_generated/semantique.processor.core.QueryProcessor.handle_fill", "_generated/semantique.processor.core.QueryProcessor.handle_filter", "_generated/semantique.processor.core.QueryProcessor.handle_geometry", "_generated/semantique.processor.core.QueryProcessor.handle_groupby", "_generated/semantique.processor.core.QueryProcessor.handle_interval", "_generated/semantique.processor.core.QueryProcessor.handle_label", "_generated/semantique.processor.core.QueryProcessor.handle_layer", "_generated/semantique.processor.core.QueryProcessor.handle_merge", "_generated/semantique.processor.core.QueryProcessor.handle_name", "_generated/semantique.processor.core.QueryProcessor.handle_processing_chain", "_generated/semantique.processor.core.QueryProcessor.handle_reduce", "_generated/semantique.processor.core.QueryProcessor.handle_result", "_generated/semantique.processor.core.QueryProcessor.handle_self", "_generated/semantique.processor.core.QueryProcessor.handle_set", "_generated/semantique.processor.core.QueryProcessor.handle_shift", "_generated/semantique.processor.core.QueryProcessor.handle_smooth", "_generated/semantique.processor.core.QueryProcessor.handle_time_instant", "_generated/semantique.processor.core.QueryProcessor.handle_time_interval", "_generated/semantique.processor.core.QueryProcessor.handle_trim", "_generated/semantique.processor.core.QueryProcessor.handle_verb", "_generated/semantique.processor.core.QueryProcessor.mapping", "_generated/semantique.processor.core.QueryProcessor.optimize", "_generated/semantique.processor.core.QueryProcessor.parse", "_generated/semantique.processor.core.QueryProcessor.recipe", "_generated/semantique.processor.core.QueryProcessor.response", "_generated/semantique.processor.core.QueryProcessor.spatial_resolution", "_generated/semantique.processor.core.QueryProcessor.track_types", "_generated/semantique.processor.core.QueryProcessor.tz", "_generated/semantique.processor.operators.absolute_", "_generated/semantique.processor.operators.add_", "_generated/semantique.processor.operators.after_", "_generated/semantique.processor.operators.and_", "_generated/semantique.processor.operators.before_", "_generated/semantique.processor.operators.ceiling_", "_generated/semantique.processor.operators.cosecant_", "_generated/semantique.processor.operators.cosine_", "_generated/semantique.processor.operators.cotangent_", "_generated/semantique.processor.operators.cube_root_", "_generated/semantique.processor.operators.divide_", "_generated/semantique.processor.operators.during_", "_generated/semantique.processor.operators.equal_", "_generated/semantique.processor.operators.exclusive_or_", "_generated/semantique.processor.operators.exponential_", "_generated/semantique.processor.operators.floor_", "_generated/semantique.processor.operators.greater_", "_generated/semantique.processor.operators.greater_equal_", "_generated/semantique.processor.operators.in_", "_generated/semantique.processor.operators.intersects_", "_generated/semantique.processor.operators.is_missing_", "_generated/semantique.processor.operators.less_", "_generated/semantique.processor.operators.less_equal_", "_generated/semantique.processor.operators.multiply_", "_generated/semantique.processor.operators.natural_logarithm_", "_generated/semantique.processor.operators.normalized_difference_", "_generated/semantique.processor.operators.not_", "_generated/semantique.processor.operators.not_equal_", "_generated/semantique.processor.operators.not_in_", "_generated/semantique.processor.operators.not_missing_", "_generated/semantique.processor.operators.or_", "_generated/semantique.processor.operators.power_", "_generated/semantique.processor.operators.secant_", "_generated/semantique.processor.operators.sine_", "_generated/semantique.processor.operators.square_root_", "_generated/semantique.processor.operators.subtract_", "_generated/semantique.processor.operators.tangent_", "_generated/semantique.processor.operators.to_degrees_", "_generated/semantique.processor.operators.to_radians_", "_generated/semantique.processor.reducers.all_", "_generated/semantique.processor.reducers.any_", "_generated/semantique.processor.reducers.count_", "_generated/semantique.processor.reducers.first_", "_generated/semantique.processor.reducers.last_", "_generated/semantique.processor.reducers.max_", "_generated/semantique.processor.reducers.mean_", "_generated/semantique.processor.reducers.median_", "_generated/semantique.processor.reducers.min_", "_generated/semantique.processor.reducers.mode_", "_generated/semantique.processor.reducers.n_", "_generated/semantique.processor.reducers.none_", "_generated/semantique.processor.reducers.percentage_", "_generated/semantique.processor.reducers.product_", "_generated/semantique.processor.reducers.range_", "_generated/semantique.processor.reducers.standard_deviation_", "_generated/semantique.processor.reducers.sum_", "_generated/semantique.processor.reducers.variance_", "_generated/semantique.processor.types.DTYPE_MAPPING", "_generated/semantique.processor.types.TYPE_PROMOTION_MANUALS", "_generated/semantique.processor.types.TypePromoter", "_generated/semantique.processor.types.TypePromoter.check", "_generated/semantique.processor.types.TypePromoter.input_labels", "_generated/semantique.processor.types.TypePromoter.input_types", "_generated/semantique.processor.types.TypePromoter.manual", "_generated/semantique.processor.types.TypePromoter.output_labels", "_generated/semantique.processor.types.TypePromoter.output_type", "_generated/semantique.processor.types.TypePromoter.promote", "_generated/semantique.processor.types.get_value_labels", "_generated/semantique.processor.types.get_value_type", "_generated/semantique.processor.utils.allnull", "_generated/semantique.processor.utils.convert_datetime64", "_generated/semantique.processor.utils.datetime64_as_unix", "_generated/semantique.processor.utils.get_null", "_generated/semantique.processor.utils.inf_as_null", "_generated/semantique.processor.utils.null_as_zero", "_generated/semantique.processor.utils.parse_datetime_component", "_generated/semantique.processor.utils.parse_extent", "_generated/semantique.processor.values.Interval", "_generated/semantique.processor.values.Interval.lower", "_generated/semantique.processor.values.Interval.sq", "_generated/semantique.processor.values.Interval.upper", "_generated/semantique.processor.values.Interval.value_type", "_generated/semantique.reducers.ALL", "_generated/semantique.reducers.ANY", "_generated/semantique.reducers.COUNT", "_generated/semantique.reducers.FIRST", "_generated/semantique.reducers.LAST", "_generated/semantique.reducers.MAX", "_generated/semantique.reducers.MEAN", "_generated/semantique.reducers.MEDIAN", "_generated/semantique.reducers.MIN", "_generated/semantique.reducers.MODE", "_generated/semantique.reducers.N", "_generated/semantique.reducers.NONE", "_generated/semantique.reducers.PERCENTAGE", "_generated/semantique.reducers.PRODUCT", "_generated/semantique.reducers.RANGE", "_generated/semantique.reducers.STANDARD_DEVIATION", "_generated/semantique.reducers.SUM", "_generated/semantique.reducers.VARIANCE", "_generated/semantique.reflectance", "_generated/semantique.result", "_generated/semantique.self", "_generated/semantique.set", "_generated/semantique.time_instant", "_generated/semantique.time_interval", "_generated/semantique.topography", "_notebooks/datacube", "_notebooks/gallery", "_notebooks/mapping", "_notebooks/processor", "_notebooks/recipes", "_notebooks/references", "_notebooks/verbs", "changelog", "code_of_conduct", "contributing", "guide", "index", "installation", "reference", "reference_hide"], "filenames": ["_generated/semantique.ArrayProxy.rst", "_generated/semantique.ArrayProxy.apply_custom.rst", "_generated/semantique.ArrayProxy.assign.rst", "_generated/semantique.ArrayProxy.assign_space.rst", "_generated/semantique.ArrayProxy.assign_time.rst", "_generated/semantique.ArrayProxy.delineate.rst", "_generated/semantique.ArrayProxy.evaluate.rst", "_generated/semantique.ArrayProxy.extract.rst", "_generated/semantique.ArrayProxy.fill.rst", "_generated/semantique.ArrayProxy.filter.rst", "_generated/semantique.ArrayProxy.filter_space.rst", "_generated/semantique.ArrayProxy.filter_time.rst", "_generated/semantique.ArrayProxy.groupby.rst", "_generated/semantique.ArrayProxy.groupby_space.rst", "_generated/semantique.ArrayProxy.groupby_time.rst", "_generated/semantique.ArrayProxy.name.rst", "_generated/semantique.ArrayProxy.reduce.rst", "_generated/semantique.ArrayProxy.shift.rst", "_generated/semantique.ArrayProxy.smooth.rst", "_generated/semantique.ArrayProxy.trim.rst", "_generated/semantique.CollectionProxy.rst", "_generated/semantique.CollectionProxy.apply_custom.rst", "_generated/semantique.CollectionProxy.assign.rst", "_generated/semantique.CollectionProxy.assign_space.rst", "_generated/semantique.CollectionProxy.assign_time.rst", "_generated/semantique.CollectionProxy.compose.rst", "_generated/semantique.CollectionProxy.concatenate.rst", "_generated/semantique.CollectionProxy.delineate.rst", "_generated/semantique.CollectionProxy.evaluate.rst", "_generated/semantique.CollectionProxy.extract.rst", "_generated/semantique.CollectionProxy.fill.rst", "_generated/semantique.CollectionProxy.filter.rst", "_generated/semantique.CollectionProxy.filter_space.rst", "_generated/semantique.CollectionProxy.filter_time.rst", "_generated/semantique.CollectionProxy.merge.rst", "_generated/semantique.CollectionProxy.reduce.rst", "_generated/semantique.CollectionProxy.shift.rst", "_generated/semantique.CollectionProxy.smooth.rst", "_generated/semantique.CollectionProxy.trim.rst", "_generated/semantique.QueryRecipe.rst", "_generated/semantique.QueryRecipe.execute.rst", "_generated/semantique.appearance.rst", "_generated/semantique.artifacts.rst", "_generated/semantique.atmosphere.rst", "_generated/semantique.collection.rst", "_generated/semantique.components.space.rst", "_generated/semantique.components.space.FEATURE.rst", "_generated/semantique.components.space.X.rst", "_generated/semantique.components.space.Y.rst", "_generated/semantique.components.time.rst", "_generated/semantique.components.time.DAY.rst", "_generated/semantique.components.time.DAY_OF_WEEK.rst", "_generated/semantique.components.time.DAY_OF_YEAR.rst", "_generated/semantique.components.time.HOUR.rst", "_generated/semantique.components.time.MINUTE.rst", "_generated/semantique.components.time.MONTH.rst", "_generated/semantique.components.time.QUARTER.rst", "_generated/semantique.components.time.SEASON.rst", "_generated/semantique.components.time.SECOND.rst", "_generated/semantique.components.time.WEEK.rst", "_generated/semantique.components.time.YEAR.rst", "_generated/semantique.concept.rst", "_generated/semantique.datacube.Datacube.rst", "_generated/semantique.datacube.Datacube.layout.rst", "_generated/semantique.datacube.Datacube.lookup.rst", "_generated/semantique.datacube.Datacube.retrieve.rst", "_generated/semantique.datacube.GeotiffArchive.rst", "_generated/semantique.datacube.GeotiffArchive.config.rst", "_generated/semantique.datacube.GeotiffArchive.layout.rst", "_generated/semantique.datacube.GeotiffArchive.lookup.rst", "_generated/semantique.datacube.GeotiffArchive.retrieve.rst", "_generated/semantique.datacube.GeotiffArchive.src.rst", "_generated/semantique.datacube.GeotiffArchive.tz.rst", "_generated/semantique.datacube.Opendatacube.rst", "_generated/semantique.datacube.Opendatacube.config.rst", "_generated/semantique.datacube.Opendatacube.connection.rst", "_generated/semantique.datacube.Opendatacube.layout.rst", "_generated/semantique.datacube.Opendatacube.lookup.rst", "_generated/semantique.datacube.Opendatacube.retrieve.rst", "_generated/semantique.datacube.Opendatacube.tz.rst", "_generated/semantique.dimensions.SPACE.rst", "_generated/semantique.dimensions.TIME.rst", "_generated/semantique.dimensions.X.rst", "_generated/semantique.dimensions.Y.rst", "_generated/semantique.entity.rst", "_generated/semantique.event.rst", "_generated/semantique.exceptions.AlignmentError.rst", "_generated/semantique.exceptions.EmptyDataError.rst", "_generated/semantique.exceptions.InvalidBuildingBlockError.rst", "_generated/semantique.exceptions.InvalidIntervalError.rst", "_generated/semantique.exceptions.InvalidValueTypeError.rst", "_generated/semantique.exceptions.MissingDimensionError.rst", "_generated/semantique.exceptions.MixedDimensionsError.rst", "_generated/semantique.exceptions.MixedTimeZonesError.rst", "_generated/semantique.exceptions.ReservedDimensionError.rst", "_generated/semantique.exceptions.TooManyDimensionsError.rst", "_generated/semantique.exceptions.UnknownComponentError.rst", "_generated/semantique.exceptions.UnknownConceptError.rst", "_generated/semantique.exceptions.UnknownDimensionError.rst", "_generated/semantique.exceptions.UnknownLabelError.rst", "_generated/semantique.exceptions.UnknownLayerError.rst", "_generated/semantique.exceptions.UnknownOperatorError.rst", "_generated/semantique.exceptions.UnknownReducerError.rst", "_generated/semantique.exceptions.UnknownResultError.rst", "_generated/semantique.exceptions.UnknownVerbError.rst", "_generated/semantique.extent.SpatialExtent.rst", "_generated/semantique.extent.SpatialExtent.crs.rst", "_generated/semantique.extent.SpatialExtent.features.rst", "_generated/semantique.extent.SpatialExtent.from_feature.rst", "_generated/semantique.extent.SpatialExtent.from_featurecollection.rst", "_generated/semantique.extent.SpatialExtent.from_geojson.rst", "_generated/semantique.extent.SpatialExtent.from_geometry.rst", "_generated/semantique.extent.SpatialExtent.rasterize.rst", "_generated/semantique.extent.TemporalExtent.rst", "_generated/semantique.extent.TemporalExtent.discretize.rst", "_generated/semantique.extent.TemporalExtent.end.rst", "_generated/semantique.extent.TemporalExtent.start.rst", "_generated/semantique.extent.TemporalExtent.tz.rst", "_generated/semantique.geometry.rst", "_generated/semantique.interval.rst", "_generated/semantique.label.rst", "_generated/semantique.layer.rst", "_generated/semantique.mapping.Mapping.rst", "_generated/semantique.mapping.Mapping.lookup.rst", "_generated/semantique.mapping.Mapping.translate.rst", "_generated/semantique.mapping.Semantique.rst", "_generated/semantique.mapping.Semantique.lookup.rst", "_generated/semantique.mapping.Semantique.translate.rst", "_generated/semantique.operators.ABSOLUTE.rst", "_generated/semantique.operators.ADD.rst", "_generated/semantique.operators.AFTER.rst", "_generated/semantique.operators.AND.rst", "_generated/semantique.operators.BEFORE.rst", "_generated/semantique.operators.CEILING.rst", "_generated/semantique.operators.COSECANT.rst", "_generated/semantique.operators.COSINE.rst", "_generated/semantique.operators.COTANGENT.rst", "_generated/semantique.operators.CUBE_ROOT.rst", "_generated/semantique.operators.DIVIDE.rst", "_generated/semantique.operators.DURING.rst", "_generated/semantique.operators.EQUAL.rst", "_generated/semantique.operators.EXCLUSIVE_OR.rst", "_generated/semantique.operators.EXPONENTIAL.rst", "_generated/semantique.operators.FLOOR.rst", "_generated/semantique.operators.GREATER.rst", "_generated/semantique.operators.GREATER_EQUAL.rst", "_generated/semantique.operators.IN.rst", "_generated/semantique.operators.INTERSECTS.rst", "_generated/semantique.operators.IS_MISSING.rst", "_generated/semantique.operators.LESS.rst", "_generated/semantique.operators.LESS_EQUAL.rst", "_generated/semantique.operators.MULTIPLY.rst", "_generated/semantique.operators.NATURAL_LOGARITHM.rst", "_generated/semantique.operators.NORMALIZED_DIFFERENCE.rst", "_generated/semantique.operators.NOT.rst", "_generated/semantique.operators.NOT_EQUAL.rst", "_generated/semantique.operators.NOT_IN.rst", "_generated/semantique.operators.NOT_MISSING.rst", "_generated/semantique.operators.OR.rst", "_generated/semantique.operators.POWER.rst", "_generated/semantique.operators.SECANT.rst", "_generated/semantique.operators.SINE.rst", "_generated/semantique.operators.SQUARE_ROOT.rst", "_generated/semantique.operators.SUBTRACT.rst", "_generated/semantique.operators.TANGENT.rst", "_generated/semantique.operators.TO_DEGREES.rst", "_generated/semantique.operators.TO_RADIANS.rst", "_generated/semantique.processor.arrays.Array.rst", "_generated/semantique.processor.arrays.Array.align_with.rst", "_generated/semantique.processor.arrays.Array.apply_custom.rst", "_generated/semantique.processor.arrays.Array.assign.rst", "_generated/semantique.processor.arrays.Array.crs.rst", "_generated/semantique.processor.arrays.Array.delineate.rst", "_generated/semantique.processor.arrays.Array.drop_non_dimension_coords.rst", "_generated/semantique.processor.arrays.Array.evaluate.rst", "_generated/semantique.processor.arrays.Array.extract.rst", "_generated/semantique.processor.arrays.Array.fill.rst", "_generated/semantique.processor.arrays.Array.filter.rst", "_generated/semantique.processor.arrays.Array.grid_points.rst", "_generated/semantique.processor.arrays.Array.groupby.rst", "_generated/semantique.processor.arrays.Array.is_empty.rst", "_generated/semantique.processor.arrays.Array.name.rst", "_generated/semantique.processor.arrays.Array.reduce.rst", "_generated/semantique.processor.arrays.Array.regularize.rst", "_generated/semantique.processor.arrays.Array.reproject.rst", "_generated/semantique.processor.arrays.Array.shift.rst", "_generated/semantique.processor.arrays.Array.smooth.rst", "_generated/semantique.processor.arrays.Array.spatial_resolution.rst", "_generated/semantique.processor.arrays.Array.stack_all_dims.rst", "_generated/semantique.processor.arrays.Array.stack_spatial_dims.rst", "_generated/semantique.processor.arrays.Array.to_csv.rst", "_generated/semantique.processor.arrays.Array.to_dataframe.rst", "_generated/semantique.processor.arrays.Array.to_geodataframe.rst", "_generated/semantique.processor.arrays.Array.to_geotiff.rst", "_generated/semantique.processor.arrays.Array.trim.rst", "_generated/semantique.processor.arrays.Array.tz.rst", "_generated/semantique.processor.arrays.Array.tz_convert.rst", "_generated/semantique.processor.arrays.Array.unstack_all_dims.rst", "_generated/semantique.processor.arrays.Array.unstack_spatial_dims.rst", "_generated/semantique.processor.arrays.Array.value_labels.rst", "_generated/semantique.processor.arrays.Array.value_type.rst", "_generated/semantique.processor.arrays.Array.write_crs.rst", "_generated/semantique.processor.arrays.Array.write_tz.rst", "_generated/semantique.processor.arrays.Collection.rst", "_generated/semantique.processor.arrays.Collection.apply_custom.rst", "_generated/semantique.processor.arrays.Collection.assign.rst", "_generated/semantique.processor.arrays.Collection.compose.rst", "_generated/semantique.processor.arrays.Collection.concatenate.rst", "_generated/semantique.processor.arrays.Collection.delineate.rst", "_generated/semantique.processor.arrays.Collection.evaluate.rst", "_generated/semantique.processor.arrays.Collection.extract.rst", "_generated/semantique.processor.arrays.Collection.fill.rst", "_generated/semantique.processor.arrays.Collection.filter.rst", "_generated/semantique.processor.arrays.Collection.is_empty.rst", "_generated/semantique.processor.arrays.Collection.merge.rst", "_generated/semantique.processor.arrays.Collection.name.rst", "_generated/semantique.processor.arrays.Collection.reduce.rst", "_generated/semantique.processor.arrays.Collection.regularize.rst", "_generated/semantique.processor.arrays.Collection.shift.rst", "_generated/semantique.processor.arrays.Collection.smooth.rst", "_generated/semantique.processor.arrays.Collection.sq.rst", "_generated/semantique.processor.arrays.Collection.stack_spatial_dims.rst", "_generated/semantique.processor.arrays.Collection.trim.rst", "_generated/semantique.processor.arrays.Collection.unstack_spatial_dims.rst", "_generated/semantique.processor.core.QueryProcessor.rst", "_generated/semantique.processor.core.QueryProcessor.add_custom_operator.rst", "_generated/semantique.processor.core.QueryProcessor.add_custom_reducer.rst", "_generated/semantique.processor.core.QueryProcessor.add_custom_verb.rst", "_generated/semantique.processor.core.QueryProcessor.call_handler.rst", "_generated/semantique.processor.core.QueryProcessor.call_verb.rst", "_generated/semantique.processor.core.QueryProcessor.crs.rst", "_generated/semantique.processor.core.QueryProcessor.custom_operators.rst", "_generated/semantique.processor.core.QueryProcessor.custom_reducers.rst", "_generated/semantique.processor.core.QueryProcessor.custom_verbs.rst", "_generated/semantique.processor.core.QueryProcessor.datacube.rst", "_generated/semantique.processor.core.QueryProcessor.execute.rst", "_generated/semantique.processor.core.QueryProcessor.extent.rst", "_generated/semantique.processor.core.QueryProcessor.get_operator.rst", "_generated/semantique.processor.core.QueryProcessor.get_reducer.rst", "_generated/semantique.processor.core.QueryProcessor.handle_apply_custom.rst", "_generated/semantique.processor.core.QueryProcessor.handle_assign.rst", "_generated/semantique.processor.core.QueryProcessor.handle_collection.rst", "_generated/semantique.processor.core.QueryProcessor.handle_compose.rst", "_generated/semantique.processor.core.QueryProcessor.handle_concatenate.rst", "_generated/semantique.processor.core.QueryProcessor.handle_concept.rst", "_generated/semantique.processor.core.QueryProcessor.handle_delineate.rst", "_generated/semantique.processor.core.QueryProcessor.handle_evaluate.rst", "_generated/semantique.processor.core.QueryProcessor.handle_extract.rst", "_generated/semantique.processor.core.QueryProcessor.handle_fill.rst", "_generated/semantique.processor.core.QueryProcessor.handle_filter.rst", "_generated/semantique.processor.core.QueryProcessor.handle_geometry.rst", "_generated/semantique.processor.core.QueryProcessor.handle_groupby.rst", "_generated/semantique.processor.core.QueryProcessor.handle_interval.rst", "_generated/semantique.processor.core.QueryProcessor.handle_label.rst", "_generated/semantique.processor.core.QueryProcessor.handle_layer.rst", "_generated/semantique.processor.core.QueryProcessor.handle_merge.rst", "_generated/semantique.processor.core.QueryProcessor.handle_name.rst", "_generated/semantique.processor.core.QueryProcessor.handle_processing_chain.rst", "_generated/semantique.processor.core.QueryProcessor.handle_reduce.rst", "_generated/semantique.processor.core.QueryProcessor.handle_result.rst", "_generated/semantique.processor.core.QueryProcessor.handle_self.rst", "_generated/semantique.processor.core.QueryProcessor.handle_set.rst", "_generated/semantique.processor.core.QueryProcessor.handle_shift.rst", "_generated/semantique.processor.core.QueryProcessor.handle_smooth.rst", "_generated/semantique.processor.core.QueryProcessor.handle_time_instant.rst", "_generated/semantique.processor.core.QueryProcessor.handle_time_interval.rst", "_generated/semantique.processor.core.QueryProcessor.handle_trim.rst", "_generated/semantique.processor.core.QueryProcessor.handle_verb.rst", "_generated/semantique.processor.core.QueryProcessor.mapping.rst", "_generated/semantique.processor.core.QueryProcessor.optimize.rst", "_generated/semantique.processor.core.QueryProcessor.parse.rst", "_generated/semantique.processor.core.QueryProcessor.recipe.rst", "_generated/semantique.processor.core.QueryProcessor.response.rst", "_generated/semantique.processor.core.QueryProcessor.spatial_resolution.rst", "_generated/semantique.processor.core.QueryProcessor.track_types.rst", "_generated/semantique.processor.core.QueryProcessor.tz.rst", "_generated/semantique.processor.operators.absolute_.rst", "_generated/semantique.processor.operators.add_.rst", "_generated/semantique.processor.operators.after_.rst", "_generated/semantique.processor.operators.and_.rst", "_generated/semantique.processor.operators.before_.rst", "_generated/semantique.processor.operators.ceiling_.rst", "_generated/semantique.processor.operators.cosecant_.rst", "_generated/semantique.processor.operators.cosine_.rst", "_generated/semantique.processor.operators.cotangent_.rst", "_generated/semantique.processor.operators.cube_root_.rst", "_generated/semantique.processor.operators.divide_.rst", "_generated/semantique.processor.operators.during_.rst", "_generated/semantique.processor.operators.equal_.rst", "_generated/semantique.processor.operators.exclusive_or_.rst", "_generated/semantique.processor.operators.exponential_.rst", "_generated/semantique.processor.operators.floor_.rst", "_generated/semantique.processor.operators.greater_.rst", "_generated/semantique.processor.operators.greater_equal_.rst", "_generated/semantique.processor.operators.in_.rst", "_generated/semantique.processor.operators.intersects_.rst", "_generated/semantique.processor.operators.is_missing_.rst", "_generated/semantique.processor.operators.less_.rst", "_generated/semantique.processor.operators.less_equal_.rst", "_generated/semantique.processor.operators.multiply_.rst", "_generated/semantique.processor.operators.natural_logarithm_.rst", "_generated/semantique.processor.operators.normalized_difference_.rst", "_generated/semantique.processor.operators.not_.rst", "_generated/semantique.processor.operators.not_equal_.rst", "_generated/semantique.processor.operators.not_in_.rst", "_generated/semantique.processor.operators.not_missing_.rst", "_generated/semantique.processor.operators.or_.rst", "_generated/semantique.processor.operators.power_.rst", "_generated/semantique.processor.operators.secant_.rst", "_generated/semantique.processor.operators.sine_.rst", "_generated/semantique.processor.operators.square_root_.rst", "_generated/semantique.processor.operators.subtract_.rst", "_generated/semantique.processor.operators.tangent_.rst", "_generated/semantique.processor.operators.to_degrees_.rst", "_generated/semantique.processor.operators.to_radians_.rst", "_generated/semantique.processor.reducers.all_.rst", "_generated/semantique.processor.reducers.any_.rst", "_generated/semantique.processor.reducers.count_.rst", "_generated/semantique.processor.reducers.first_.rst", "_generated/semantique.processor.reducers.last_.rst", "_generated/semantique.processor.reducers.max_.rst", "_generated/semantique.processor.reducers.mean_.rst", "_generated/semantique.processor.reducers.median_.rst", "_generated/semantique.processor.reducers.min_.rst", "_generated/semantique.processor.reducers.mode_.rst", "_generated/semantique.processor.reducers.n_.rst", "_generated/semantique.processor.reducers.none_.rst", "_generated/semantique.processor.reducers.percentage_.rst", "_generated/semantique.processor.reducers.product_.rst", "_generated/semantique.processor.reducers.range_.rst", "_generated/semantique.processor.reducers.standard_deviation_.rst", "_generated/semantique.processor.reducers.sum_.rst", "_generated/semantique.processor.reducers.variance_.rst", "_generated/semantique.processor.types.DTYPE_MAPPING.rst", "_generated/semantique.processor.types.TYPE_PROMOTION_MANUALS.rst", "_generated/semantique.processor.types.TypePromoter.rst", "_generated/semantique.processor.types.TypePromoter.check.rst", "_generated/semantique.processor.types.TypePromoter.input_labels.rst", "_generated/semantique.processor.types.TypePromoter.input_types.rst", "_generated/semantique.processor.types.TypePromoter.manual.rst", "_generated/semantique.processor.types.TypePromoter.output_labels.rst", "_generated/semantique.processor.types.TypePromoter.output_type.rst", "_generated/semantique.processor.types.TypePromoter.promote.rst", "_generated/semantique.processor.types.get_value_labels.rst", "_generated/semantique.processor.types.get_value_type.rst", "_generated/semantique.processor.utils.allnull.rst", "_generated/semantique.processor.utils.convert_datetime64.rst", "_generated/semantique.processor.utils.datetime64_as_unix.rst", "_generated/semantique.processor.utils.get_null.rst", "_generated/semantique.processor.utils.inf_as_null.rst", "_generated/semantique.processor.utils.null_as_zero.rst", "_generated/semantique.processor.utils.parse_datetime_component.rst", "_generated/semantique.processor.utils.parse_extent.rst", "_generated/semantique.processor.values.Interval.rst", "_generated/semantique.processor.values.Interval.lower.rst", "_generated/semantique.processor.values.Interval.sq.rst", "_generated/semantique.processor.values.Interval.upper.rst", "_generated/semantique.processor.values.Interval.value_type.rst", "_generated/semantique.reducers.ALL.rst", "_generated/semantique.reducers.ANY.rst", "_generated/semantique.reducers.COUNT.rst", "_generated/semantique.reducers.FIRST.rst", "_generated/semantique.reducers.LAST.rst", "_generated/semantique.reducers.MAX.rst", "_generated/semantique.reducers.MEAN.rst", "_generated/semantique.reducers.MEDIAN.rst", "_generated/semantique.reducers.MIN.rst", "_generated/semantique.reducers.MODE.rst", "_generated/semantique.reducers.N.rst", "_generated/semantique.reducers.NONE.rst", "_generated/semantique.reducers.PERCENTAGE.rst", "_generated/semantique.reducers.PRODUCT.rst", "_generated/semantique.reducers.RANGE.rst", "_generated/semantique.reducers.STANDARD_DEVIATION.rst", "_generated/semantique.reducers.SUM.rst", "_generated/semantique.reducers.VARIANCE.rst", "_generated/semantique.reflectance.rst", "_generated/semantique.result.rst", "_generated/semantique.self.rst", "_generated/semantique.set.rst", "_generated/semantique.time_instant.rst", "_generated/semantique.time_interval.rst", "_generated/semantique.topography.rst", "_notebooks/datacube.nblink", "_notebooks/gallery.nblink", "_notebooks/mapping.nblink", "_notebooks/processor.nblink", "_notebooks/recipes.nblink", "_notebooks/references.nblink", "_notebooks/verbs.nblink", "changelog.rst", "code_of_conduct.rst", "contributing.rst", "guide.rst", "index.rst", "installation.rst", "reference.rst", "reference_hide.rst"], "titles": ["semantique.ArrayProxy", "semantique.ArrayProxy.apply_custom", "semantique.ArrayProxy.assign", "semantique.ArrayProxy.assign_space", "semantique.ArrayProxy.assign_time", "semantique.ArrayProxy.delineate", "semantique.ArrayProxy.evaluate", "semantique.ArrayProxy.extract", "semantique.ArrayProxy.fill", "semantique.ArrayProxy.filter", "semantique.ArrayProxy.filter_space", "semantique.ArrayProxy.filter_time", "semantique.ArrayProxy.groupby", "semantique.ArrayProxy.groupby_space", "semantique.ArrayProxy.groupby_time", "semantique.ArrayProxy.name", "semantique.ArrayProxy.reduce", "semantique.ArrayProxy.shift", "semantique.ArrayProxy.smooth", "semantique.ArrayProxy.trim", "semantique.CollectionProxy", "semantique.CollectionProxy.apply_custom", "semantique.CollectionProxy.assign", "semantique.CollectionProxy.assign_space", "semantique.CollectionProxy.assign_time", "semantique.CollectionProxy.compose", "semantique.CollectionProxy.concatenate", "semantique.CollectionProxy.delineate", "semantique.CollectionProxy.evaluate", "semantique.CollectionProxy.extract", "semantique.CollectionProxy.fill", "semantique.CollectionProxy.filter", "semantique.CollectionProxy.filter_space", "semantique.CollectionProxy.filter_time", "semantique.CollectionProxy.merge", "semantique.CollectionProxy.reduce", "semantique.CollectionProxy.shift", "semantique.CollectionProxy.smooth", "semantique.CollectionProxy.trim", "semantique.QueryRecipe", "semantique.QueryRecipe.execute", "semantique.appearance", "semantique.artifacts", "semantique.atmosphere", "semantique.collection", "semantique.components.space", "semantique.components.space.FEATURE", "semantique.components.space.X", "semantique.components.space.Y", "semantique.components.time", "semantique.components.time.DAY", "semantique.components.time.DAY_OF_WEEK", "semantique.components.time.DAY_OF_YEAR", "semantique.components.time.HOUR", "semantique.components.time.MINUTE", "semantique.components.time.MONTH", "semantique.components.time.QUARTER", "semantique.components.time.SEASON", "semantique.components.time.SECOND", "semantique.components.time.WEEK", "semantique.components.time.YEAR", "semantique.concept", "semantique.datacube.Datacube", "semantique.datacube.Datacube.layout", "semantique.datacube.Datacube.lookup", "semantique.datacube.Datacube.retrieve", "semantique.datacube.GeotiffArchive", "semantique.datacube.GeotiffArchive.config", "semantique.datacube.GeotiffArchive.layout", "semantique.datacube.GeotiffArchive.lookup", "semantique.datacube.GeotiffArchive.retrieve", "semantique.datacube.GeotiffArchive.src", "semantique.datacube.GeotiffArchive.tz", "semantique.datacube.Opendatacube", "semantique.datacube.Opendatacube.config", "semantique.datacube.Opendatacube.connection", "semantique.datacube.Opendatacube.layout", "semantique.datacube.Opendatacube.lookup", "semantique.datacube.Opendatacube.retrieve", "semantique.datacube.Opendatacube.tz", "semantique.dimensions.SPACE", "semantique.dimensions.TIME", "semantique.dimensions.X", "semantique.dimensions.Y", "semantique.entity", "semantique.event", "semantique.exceptions.AlignmentError", "semantique.exceptions.EmptyDataError", "semantique.exceptions.InvalidBuildingBlockError", "semantique.exceptions.InvalidIntervalError", "semantique.exceptions.InvalidValueTypeError", "semantique.exceptions.MissingDimensionError", "semantique.exceptions.MixedDimensionsError", "semantique.exceptions.MixedTimeZonesError", "semantique.exceptions.ReservedDimensionError", "semantique.exceptions.TooManyDimensionsError", "semantique.exceptions.UnknownComponentError", "semantique.exceptions.UnknownConceptError", "semantique.exceptions.UnknownDimensionError", "semantique.exceptions.UnknownLabelError", "semantique.exceptions.UnknownLayerError", "semantique.exceptions.UnknownOperatorError", "semantique.exceptions.UnknownReducerError", "semantique.exceptions.UnknownResultError", "semantique.exceptions.UnknownVerbError", "semantique.extent.SpatialExtent", "semantique.extent.SpatialExtent.crs", "semantique.extent.SpatialExtent.features", "semantique.extent.SpatialExtent.from_feature", "semantique.extent.SpatialExtent.from_featurecollection", "semantique.extent.SpatialExtent.from_geojson", "semantique.extent.SpatialExtent.from_geometry", "semantique.extent.SpatialExtent.rasterize", "semantique.extent.TemporalExtent", "semantique.extent.TemporalExtent.discretize", "semantique.extent.TemporalExtent.end", "semantique.extent.TemporalExtent.start", "semantique.extent.TemporalExtent.tz", "semantique.geometry", "semantique.interval", "semantique.label", "semantique.layer", "semantique.mapping.Mapping", "semantique.mapping.Mapping.lookup", "semantique.mapping.Mapping.translate", "semantique.mapping.Semantique", "semantique.mapping.Semantique.lookup", "semantique.mapping.Semantique.translate", "semantique.operators.ABSOLUTE", "semantique.operators.ADD", "semantique.operators.AFTER", "semantique.operators.AND", "semantique.operators.BEFORE", "semantique.operators.CEILING", "semantique.operators.COSECANT", "semantique.operators.COSINE", "semantique.operators.COTANGENT", "semantique.operators.CUBE_ROOT", "semantique.operators.DIVIDE", "semantique.operators.DURING", "semantique.operators.EQUAL", "semantique.operators.EXCLUSIVE_OR", "semantique.operators.EXPONENTIAL", "semantique.operators.FLOOR", "semantique.operators.GREATER", "semantique.operators.GREATER_EQUAL", "semantique.operators.IN", "semantique.operators.INTERSECTS", "semantique.operators.IS_MISSING", "semantique.operators.LESS", "semantique.operators.LESS_EQUAL", "semantique.operators.MULTIPLY", "semantique.operators.NATURAL_LOGARITHM", "semantique.operators.NORMALIZED_DIFFERENCE", "semantique.operators.NOT", "semantique.operators.NOT_EQUAL", "semantique.operators.NOT_IN", "semantique.operators.NOT_MISSING", "semantique.operators.OR", "semantique.operators.POWER", "semantique.operators.SECANT", "semantique.operators.SINE", "semantique.operators.SQUARE_ROOT", "semantique.operators.SUBTRACT", "semantique.operators.TANGENT", "semantique.operators.TO_DEGREES", "semantique.operators.TO_RADIANS", "semantique.processor.arrays.Array", "semantique.processor.arrays.Array.align_with", "semantique.processor.arrays.Array.apply_custom", "semantique.processor.arrays.Array.assign", "semantique.processor.arrays.Array.crs", "semantique.processor.arrays.Array.delineate", "semantique.processor.arrays.Array.drop_non_dimension_coords", "semantique.processor.arrays.Array.evaluate", "semantique.processor.arrays.Array.extract", "semantique.processor.arrays.Array.fill", "semantique.processor.arrays.Array.filter", "semantique.processor.arrays.Array.grid_points", "semantique.processor.arrays.Array.groupby", "semantique.processor.arrays.Array.is_empty", "semantique.processor.arrays.Array.name", "semantique.processor.arrays.Array.reduce", "semantique.processor.arrays.Array.regularize", "semantique.processor.arrays.Array.reproject", "semantique.processor.arrays.Array.shift", "semantique.processor.arrays.Array.smooth", "semantique.processor.arrays.Array.spatial_resolution", "semantique.processor.arrays.Array.stack_all_dims", "semantique.processor.arrays.Array.stack_spatial_dims", "semantique.processor.arrays.Array.to_csv", "semantique.processor.arrays.Array.to_dataframe", "semantique.processor.arrays.Array.to_geodataframe", "semantique.processor.arrays.Array.to_geotiff", "semantique.processor.arrays.Array.trim", "semantique.processor.arrays.Array.tz", "semantique.processor.arrays.Array.tz_convert", "semantique.processor.arrays.Array.unstack_all_dims", "semantique.processor.arrays.Array.unstack_spatial_dims", "semantique.processor.arrays.Array.value_labels", "semantique.processor.arrays.Array.value_type", "semantique.processor.arrays.Array.write_crs", "semantique.processor.arrays.Array.write_tz", "semantique.processor.arrays.Collection", "semantique.processor.arrays.Collection.apply_custom", "semantique.processor.arrays.Collection.assign", "semantique.processor.arrays.Collection.compose", "semantique.processor.arrays.Collection.concatenate", "semantique.processor.arrays.Collection.delineate", "semantique.processor.arrays.Collection.evaluate", "semantique.processor.arrays.Collection.extract", "semantique.processor.arrays.Collection.fill", "semantique.processor.arrays.Collection.filter", "semantique.processor.arrays.Collection.is_empty", "semantique.processor.arrays.Collection.merge", "semantique.processor.arrays.Collection.name", "semantique.processor.arrays.Collection.reduce", "semantique.processor.arrays.Collection.regularize", "semantique.processor.arrays.Collection.shift", "semantique.processor.arrays.Collection.smooth", "semantique.processor.arrays.Collection.sq", "semantique.processor.arrays.Collection.stack_spatial_dims", "semantique.processor.arrays.Collection.trim", "semantique.processor.arrays.Collection.unstack_spatial_dims", "semantique.processor.core.QueryProcessor", "semantique.processor.core.QueryProcessor.add_custom_operator", "semantique.processor.core.QueryProcessor.add_custom_reducer", "semantique.processor.core.QueryProcessor.add_custom_verb", "semantique.processor.core.QueryProcessor.call_handler", "semantique.processor.core.QueryProcessor.call_verb", "semantique.processor.core.QueryProcessor.crs", "semantique.processor.core.QueryProcessor.custom_operators", "semantique.processor.core.QueryProcessor.custom_reducers", "semantique.processor.core.QueryProcessor.custom_verbs", "semantique.processor.core.QueryProcessor.datacube", "semantique.processor.core.QueryProcessor.execute", "semantique.processor.core.QueryProcessor.extent", "semantique.processor.core.QueryProcessor.get_operator", "semantique.processor.core.QueryProcessor.get_reducer", "semantique.processor.core.QueryProcessor.handle_apply_custom", "semantique.processor.core.QueryProcessor.handle_assign", "semantique.processor.core.QueryProcessor.handle_collection", "semantique.processor.core.QueryProcessor.handle_compose", "semantique.processor.core.QueryProcessor.handle_concatenate", "semantique.processor.core.QueryProcessor.handle_concept", "semantique.processor.core.QueryProcessor.handle_delineate", "semantique.processor.core.QueryProcessor.handle_evaluate", "semantique.processor.core.QueryProcessor.handle_extract", "semantique.processor.core.QueryProcessor.handle_fill", "semantique.processor.core.QueryProcessor.handle_filter", "semantique.processor.core.QueryProcessor.handle_geometry", "semantique.processor.core.QueryProcessor.handle_groupby", "semantique.processor.core.QueryProcessor.handle_interval", "semantique.processor.core.QueryProcessor.handle_label", "semantique.processor.core.QueryProcessor.handle_layer", "semantique.processor.core.QueryProcessor.handle_merge", "semantique.processor.core.QueryProcessor.handle_name", "semantique.processor.core.QueryProcessor.handle_processing_chain", "semantique.processor.core.QueryProcessor.handle_reduce", "semantique.processor.core.QueryProcessor.handle_result", "semantique.processor.core.QueryProcessor.handle_self", "semantique.processor.core.QueryProcessor.handle_set", "semantique.processor.core.QueryProcessor.handle_shift", "semantique.processor.core.QueryProcessor.handle_smooth", "semantique.processor.core.QueryProcessor.handle_time_instant", "semantique.processor.core.QueryProcessor.handle_time_interval", "semantique.processor.core.QueryProcessor.handle_trim", "semantique.processor.core.QueryProcessor.handle_verb", "semantique.processor.core.QueryProcessor.mapping", "semantique.processor.core.QueryProcessor.optimize", "semantique.processor.core.QueryProcessor.parse", "semantique.processor.core.QueryProcessor.recipe", "semantique.processor.core.QueryProcessor.response", "semantique.processor.core.QueryProcessor.spatial_resolution", "semantique.processor.core.QueryProcessor.track_types", "semantique.processor.core.QueryProcessor.tz", "semantique.processor.operators.absolute_", "semantique.processor.operators.add_", "semantique.processor.operators.after_", "semantique.processor.operators.and_", "semantique.processor.operators.before_", "semantique.processor.operators.ceiling_", "semantique.processor.operators.cosecant_", "semantique.processor.operators.cosine_", "semantique.processor.operators.cotangent_", "semantique.processor.operators.cube_root_", "semantique.processor.operators.divide_", "semantique.processor.operators.during_", "semantique.processor.operators.equal_", "semantique.processor.operators.exclusive_or_", "semantique.processor.operators.exponential_", "semantique.processor.operators.floor_", "semantique.processor.operators.greater_", "semantique.processor.operators.greater_equal_", "semantique.processor.operators.in_", "semantique.processor.operators.intersects_", "semantique.processor.operators.is_missing_", "semantique.processor.operators.less_", "semantique.processor.operators.less_equal_", "semantique.processor.operators.multiply_", "semantique.processor.operators.natural_logarithm_", "semantique.processor.operators.normalized_difference_", "semantique.processor.operators.not_", "semantique.processor.operators.not_equal_", "semantique.processor.operators.not_in_", "semantique.processor.operators.not_missing_", "semantique.processor.operators.or_", "semantique.processor.operators.power_", "semantique.processor.operators.secant_", "semantique.processor.operators.sine_", "semantique.processor.operators.square_root_", "semantique.processor.operators.subtract_", "semantique.processor.operators.tangent_", "semantique.processor.operators.to_degrees_", "semantique.processor.operators.to_radians_", "semantique.processor.reducers.all_", "semantique.processor.reducers.any_", "semantique.processor.reducers.count_", "semantique.processor.reducers.first_", "semantique.processor.reducers.last_", "semantique.processor.reducers.max_", "semantique.processor.reducers.mean_", "semantique.processor.reducers.median_", "semantique.processor.reducers.min_", "semantique.processor.reducers.mode_", "semantique.processor.reducers.n_", "semantique.processor.reducers.none_", "semantique.processor.reducers.percentage_", "semantique.processor.reducers.product_", "semantique.processor.reducers.range_", "semantique.processor.reducers.standard_deviation_", "semantique.processor.reducers.sum_", "semantique.processor.reducers.variance_", "semantique.processor.types.DTYPE_MAPPING", "semantique.processor.types.TYPE_PROMOTION_MANUALS", "semantique.processor.types.TypePromoter", "semantique.processor.types.TypePromoter.check", "semantique.processor.types.TypePromoter.input_labels", "semantique.processor.types.TypePromoter.input_types", "semantique.processor.types.TypePromoter.manual", "semantique.processor.types.TypePromoter.output_labels", "semantique.processor.types.TypePromoter.output_type", "semantique.processor.types.TypePromoter.promote", "semantique.processor.types.get_value_labels", "semantique.processor.types.get_value_type", "semantique.processor.utils.allnull", "semantique.processor.utils.convert_datetime64", "semantique.processor.utils.datetime64_as_unix", "semantique.processor.utils.get_null", "semantique.processor.utils.inf_as_null", "semantique.processor.utils.null_as_zero", "semantique.processor.utils.parse_datetime_component", "semantique.processor.utils.parse_extent", "semantique.processor.values.Interval", "semantique.processor.values.Interval.lower", "semantique.processor.values.Interval.sq", "semantique.processor.values.Interval.upper", "semantique.processor.values.Interval.value_type", "semantique.reducers.ALL", "semantique.reducers.ANY", "semantique.reducers.COUNT", "semantique.reducers.FIRST", "semantique.reducers.LAST", "semantique.reducers.MAX", "semantique.reducers.MEAN", "semantique.reducers.MEDIAN", "semantique.reducers.MIN", "semantique.reducers.MODE", "semantique.reducers.N", "semantique.reducers.NONE", "semantique.reducers.PERCENTAGE", "semantique.reducers.PRODUCT", "semantique.reducers.RANGE", "semantique.reducers.STANDARD_DEVIATION", "semantique.reducers.SUM", "semantique.reducers.VARIANCE", "semantique.reflectance", "semantique.result", "semantique.self", "semantique.set", "semantique.time_instant", "semantique.time_interval", "semantique.topography", "Representing an EO data cube", "Gallery", "Constructing a mapping", "Internal query processing", "Writing and executing query recipes", "References", "Verbs", "Changelog", "Contributor Covenant Code of Conduct", "Contributing", "User Guide", "Semantic querying in Earth observation data cubes", "Installation", "API Reference", "&lt;no title&gt;"], "terms": {"class": [0, 20, 39, 45, 49, 62, 66, 73, 105, 113, 114, 122, 125, 167, 196, 202, 203, 224, 270, 335, 346, 352, 353, 383, 385, 386, 387, 391, 396], "obj": [0, 20, 105, 108, 109, 110, 111, 337, 342, 346, 351, 386], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 61, 62, 64, 65, 66, 69, 70, 73, 77, 78, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 376, 377, 378, 379, 380, 381, 382, 383, 387, 394, 395], "proxi": [0, 2, 6, 9, 12, 20], "object": [0, 5, 20, 64, 69, 73, 75, 77, 105, 108, 109, 111, 112, 113, 114, 117, 118, 119, 120, 167, 170, 172, 174, 182, 184, 186, 192, 193, 201, 214, 220, 229, 253, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 342, 343, 344, 346, 351, 352, 353, 355, 378, 379, 380, 381, 383, 384, 385, 386, 387, 389], "an": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 34, 39, 51, 62, 65, 66, 70, 73, 78, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 118, 119, 120, 121, 122, 124, 125, 127, 134, 135, 136, 160, 161, 164, 165, 166, 167, 168, 170, 174, 177, 179, 181, 182, 185, 186, 194, 207, 220, 224, 235, 237, 238, 269, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 329, 333, 334, 335, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 355, 377, 380, 381, 384, 385, 386, 388, 391, 392, 393, 394], "arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 61, 65, 66, 70, 73, 78, 84, 85, 86, 87, 90, 91, 92, 94, 95, 98, 99, 112, 114, 118, 120, 124, 127, 224, 235, 241, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 343, 344, 345, 347, 348, 349, 350, 351, 352, 355, 380, 383, 385, 386, 387, 388], "thi": [0, 1, 3, 4, 6, 10, 11, 13, 14, 20, 40, 61, 66, 73, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 113, 114, 118, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 184, 186, 192, 193, 201, 202, 220, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 344, 352, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396], "serv": [0, 20, 201, 202, 383, 385, 387], "placehold": [0, 20, 201, 202, 269, 386], "multi": [0, 20, 118, 167, 188, 189, 197, 352, 386, 387, 388, 389], "dimension": [0, 13, 14, 16, 20, 90, 112, 114, 167, 176, 179, 182, 352, 383, 386, 387, 388, 389], "all": [0, 12, 16, 19, 20, 26, 40, 61, 66, 73, 84, 85, 86, 87, 90, 91, 92, 124, 127, 168, 179, 182, 188, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 235, 253, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 325, 326, 327, 334, 345, 349, 350, 352, 355, 383, 385, 386, 387, 388, 389, 391, 392, 393, 395], "specif": [0, 3, 4, 7, 10, 11, 13, 14, 20, 73, 88, 91, 94, 96, 98, 125, 170, 175, 201, 202, 224, 228, 278, 280, 287, 295, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 336, 383, 385, 386, 387, 388, 389, 392, 394, 396], "action": [0, 20, 235, 334, 386, 387, 388, 389, 391], "i": [0, 2, 3, 4, 6, 8, 10, 11, 13, 14, 18, 20, 25, 34, 39, 51, 61, 62, 66, 73, 84, 85, 86, 88, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 112, 113, 114, 119, 122, 123, 124, 125, 126, 127, 134, 135, 136, 139, 140, 141, 144, 145, 146, 148, 149, 150, 154, 155, 156, 157, 160, 161, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 177, 179, 180, 182, 185, 186, 192, 193, 194, 201, 202, 206, 220, 224, 253, 259, 270, 277, 278, 279, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 316, 324, 333, 334, 335, 336, 346, 348, 352, 353, 355, 359, 381, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396], "e": [0, 3, 4, 6, 7, 12, 13, 14, 16, 17, 20, 34, 86, 112, 114, 118, 170, 173, 175, 176, 177, 185, 290, 296, 300, 324, 333, 334, 335, 336, 344, 348, 352, 383, 385, 386, 387, 388, 389, 391, 392], "verb": [0, 1, 3, 4, 10, 11, 13, 14, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 86, 90, 91, 92, 94, 95, 104, 169, 170, 172, 174, 175, 176, 177, 179, 181, 182, 185, 186, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 222, 224, 227, 229, 231, 232, 233, 239, 240, 242, 243, 245, 246, 247, 248, 249, 251, 255, 256, 258, 262, 263, 266, 267, 296, 385, 387, 388], "can": [0, 2, 6, 8, 9, 12, 13, 14, 16, 18, 20, 34, 41, 42, 43, 44, 61, 66, 73, 84, 85, 90, 94, 105, 112, 113, 114, 118, 119, 120, 121, 167, 168, 170, 174, 177, 179, 184, 192, 193, 196, 201, 202, 270, 277, 279, 286, 288, 289, 292, 293, 296, 297, 298, 299, 301, 303, 306, 307, 311, 333, 335, 346, 352, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395], "call": [0, 20, 167, 220, 228, 334, 335, 355, 383, 386, 387, 388, 389], "method": [0, 8, 20, 30, 39, 45, 49, 62, 65, 66, 73, 105, 113, 122, 124, 125, 167, 176, 203, 211, 220, 224, 335, 336, 353, 355, 383, 385, 386, 387, 389], "howev": [0, 20, 289, 306, 383, 385, 386, 387, 388, 389, 392], "iself": [0, 20], "doe": [0, 20, 26, 64, 69, 77, 87, 88, 90, 91, 96, 98, 170, 175, 207, 274, 336, 343, 383, 385, 387, 388, 389, 392], "contain": [0, 20, 25, 39, 40, 66, 71, 87, 88, 91, 96, 98, 118, 119, 120, 122, 124, 125, 127, 175, 179, 186, 190, 191, 192, 235, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 329, 333, 336, 343, 344, 347, 379, 380, 381, 383, 385, 386, 387, 388, 389, 392, 393, 396], "ani": [0, 2, 18, 20, 25, 26, 66, 73, 87, 94, 99, 110, 112, 114, 170, 184, 192, 193, 196, 201, 202, 207, 253, 270, 295, 333, 334, 346, 352, 383, 385, 386, 387, 388, 389, 391, 392, 394], "data": [0, 8, 20, 41, 42, 43, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 87, 91, 100, 121, 122, 124, 125, 127, 167, 176, 186, 190, 191, 192, 199, 254, 269, 333, 343, 344, 376, 382, 384, 385, 389, 393], "ar": [0, 1, 2, 5, 8, 9, 16, 18, 19, 20, 34, 56, 57, 61, 66, 73, 84, 85, 87, 90, 92, 106, 112, 118, 124, 127, 131, 158, 168, 171, 173, 176, 179, 182, 183, 194, 195, 207, 213, 214, 220, 269, 270, 278, 279, 280, 282, 283, 284, 287, 289, 295, 296, 306, 308, 309, 312, 313, 314, 315, 316, 318, 319, 324, 325, 326, 327, 333, 334, 335, 336, 343, 345, 347, 351, 352, 355, 358, 369, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 396], "appli": [0, 1, 6, 8, 16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 118, 169, 170, 172, 174, 175, 176, 177, 179, 181, 182, 185, 186, 194, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 222, 224, 229, 235, 276, 281, 282, 283, 284, 285, 290, 291, 296, 300, 302, 305, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 380, 384, 385, 386, 387, 388, 391], "instead": [0, 20, 167, 179, 193, 269, 333, 344, 383, 385, 386, 387, 388, 389, 392], "textual": [0, 20, 41, 42, 43, 44, 61, 84, 85, 121, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 376, 377, 378, 382, 383, 385, 386, 387, 389, 393], "recip": [0, 1, 6, 20, 39, 40, 88, 90, 103, 104, 125, 214, 224, 235, 259, 270, 377, 383, 384, 385, 386, 388, 389], "construct": [0, 20, 39, 62, 66, 73, 122, 125, 383, 387, 388, 389, 391, 392, 393], "which": [0, 2, 6, 8, 9, 12, 19, 20, 40, 61, 65, 66, 70, 73, 78, 84, 85, 86, 87, 90, 91, 92, 95, 97, 100, 106, 112, 124, 127, 168, 169, 170, 171, 174, 176, 177, 179, 182, 186, 194, 195, 214, 220, 224, 230, 236, 270, 273, 275, 277, 278, 279, 280, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 311, 333, 334, 343, 344, 345, 352, 355, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394], "execut": [0, 1, 6, 20, 90, 104, 214, 224, 233, 272, 384, 388, 389, 396], "onli": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 19, 20, 61, 66, 73, 84, 85, 90, 92, 95, 114, 124, 127, 170, 176, 194, 269, 336, 352, 383, 385, 386, 387, 388, 389, 393, 395], "stage": [0, 20, 388, 389], "queri": [0, 1, 6, 20, 39, 40, 41, 42, 43, 44, 61, 84, 85, 88, 90, 97, 99, 100, 101, 102, 103, 104, 118, 119, 120, 121, 125, 214, 224, 230, 233, 234, 235, 236, 259, 268, 269, 270, 271, 272, 273, 275, 352, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 388, 389, 396], "process": [0, 20, 40, 61, 84, 85, 86, 90, 95, 97, 100, 124, 125, 127, 224, 228, 230, 234, 236, 257, 268, 269, 270, 271, 273, 275, 352, 383, 385, 387, 388, 389, 396], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 34, 39, 40, 41, 42, 43, 44, 61, 62, 64, 65, 66, 69, 70, 73, 77, 78, 84, 85, 105, 108, 109, 110, 111, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 184, 185, 186, 190, 192, 193, 194, 196, 201, 202, 203, 206, 207, 214, 224, 225, 226, 227, 228, 229, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 389, 392], "dict": [0, 20, 39, 40, 62, 63, 66, 67, 68, 73, 74, 76, 88, 105, 108, 109, 110, 111, 113, 118, 119, 120, 122, 125, 199, 224, 228, 229, 231, 232, 233, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 272, 333, 334, 335, 337, 339, 340, 343, 379, 380, 381, 385], "refer": [0, 16, 18, 20, 34, 41, 42, 43, 44, 61, 64, 65, 66, 69, 70, 73, 77, 78, 84, 85, 106, 112, 114, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 184, 192, 193, 196, 201, 202, 230, 235, 241, 244, 254, 259, 260, 270, 295, 334, 346, 352, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 382, 383, 384, 385, 386, 387, 389, 392], "solv": [0, 20, 41, 42, 43, 44, 61, 84, 85, 121, 235, 376, 377, 378, 382, 387, 388, 389], "processor": [0, 6, 20, 40, 41, 42, 43, 44, 61, 84, 85, 88, 101, 102, 118, 119, 120, 121, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389], "normal": [0, 20, 153, 301, 389], "hand": [0, 6, 10, 11, 20, 174, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 388, 389], "obtain": [0, 20, 237, 238, 335, 336, 343, 387, 388, 394], "one": [0, 6, 13, 14, 20, 25, 66, 73, 91, 95, 96, 98, 99, 114, 158, 168, 176, 190, 191, 192, 206, 207, 214, 306, 316, 333, 344, 359, 383, 385, 386, 387, 388, 389, 392], "dedic": [0, 20, 383, 386, 387, 388, 389], "function": [0, 1, 8, 16, 18, 20, 34, 40, 65, 88, 90, 91, 92, 94, 95, 101, 102, 104, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 174, 176, 182, 186, 193, 214, 224, 225, 226, 227, 231, 232, 237, 238, 270, 290, 300, 334, 335, 343, 344, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 383, 385, 387, 388, 389, 392, 393], "exist": [0, 20, 26, 91, 207, 269, 344, 377, 383, 386, 387, 388], "collectionproxi": [0, 3, 4, 12, 13, 14, 44], "instanc": [0, 20, 40, 62, 66, 73, 114, 122, 124, 125, 127, 196, 202, 224, 234, 235, 268, 269, 270, 346, 352, 383, 385, 386, 387, 391], "__init__": [0, 20, 39, 45, 49, 62, 66, 73, 105, 113, 122, 125, 167, 203, 224, 335, 353], "kwarg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 105, 108, 109, 110, 111, 113, 118, 169, 170, 172, 174, 175, 176, 177, 179, 181, 182, 184, 185, 186, 194, 196, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 218, 219, 222, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 346, 380, 381, 386], "user": [1, 6, 21, 104, 169, 204, 214, 224, 225, 226, 227, 231, 232, 233, 383, 385, 389, 392, 394, 396], "defin": [1, 2, 5, 6, 13, 14, 17, 18, 21, 56, 57, 97, 104, 114, 123, 126, 169, 179, 185, 186, 204, 214, 224, 225, 226, 227, 231, 232, 233, 235, 253, 270, 290, 301, 334, 352, 384, 385, 386, 387, 388, 389, 392], "The": [1, 9, 18, 19, 25, 34, 39, 40, 41, 42, 43, 51, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 76, 77, 78, 84, 85, 95, 119, 120, 121, 123, 124, 126, 127, 167, 168, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 202, 203, 206, 207, 214, 224, 228, 234, 236, 237, 238, 253, 268, 270, 271, 278, 280, 281, 287, 290, 291, 295, 296, 300, 301, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 376, 379, 381, 382, 386, 387, 388, 389, 391, 392, 393, 394, 396], "implement": [1, 169, 270, 383, 385, 386, 387, 388, 389, 392, 394], "need": [1, 66, 73, 383, 385, 386, 387, 388, 389, 393], "provid": [1, 6, 9, 90, 93, 101, 102, 104, 113, 169, 214, 220, 228, 270, 352, 355, 383, 385, 386, 387, 388, 389, 391, 392, 393, 395], "through": [1, 18, 40, 170, 220, 355, 383, 385, 386, 387, 388, 389, 391, 394], "custom_verb": [1, 224, 386], "argument": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 66, 73, 92, 105, 108, 109, 110, 111, 113, 118, 124, 127, 169, 170, 174, 176, 182, 184, 186, 196, 214, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 346, 380, 381, 386, 387, 388, 389], "when": [1, 6, 8, 66, 73, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 124, 127, 168, 174, 176, 193, 214, 224, 269, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 383, 385, 386, 387, 388, 389, 391, 392], "us": [1, 3, 4, 5, 6, 8, 10, 11, 13, 14, 18, 40, 66, 73, 86, 90, 92, 94, 99, 102, 104, 112, 114, 118, 120, 124, 125, 127, 167, 170, 173, 174, 176, 179, 186, 192, 193, 224, 253, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 343, 346, 352, 380, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396], "you": [1, 90, 383, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396], "know": [1, 383, 386, 387, 388, 389, 392], "what": [1, 66, 73, 207, 333, 334, 344, 383, 385, 386, 387, 388, 391], "do": [1, 66, 73, 112, 193, 346, 383, 384, 385, 386, 387, 388, 389, 392], "str": [1, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 34, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 71, 73, 80, 81, 82, 83, 84, 85, 114, 120, 121, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 175, 176, 181, 182, 185, 186, 190, 193, 194, 196, 200, 202, 207, 214, 225, 226, 227, 228, 229, 237, 238, 270, 335, 341, 346, 351, 352, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 382], "name": [1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 26, 34, 39, 40, 61, 66, 73, 80, 81, 82, 83, 84, 85, 94, 104, 114, 122, 124, 125, 127, 173, 175, 176, 179, 182, 185, 186, 188, 194, 196, 201, 202, 207, 214, 224, 225, 226, 227, 229, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 251, 255, 256, 258, 262, 263, 266, 270, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 343, 346, 351, 352, 377, 383, 385, 386, 387, 388], "addit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 40, 66, 73, 105, 108, 109, 110, 111, 113, 118, 124, 127, 169, 174, 176, 182, 184, 186, 196, 214, 224, 270, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 344, 346, 380, 381, 383, 384, 386, 387, 389], "keyword": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 66, 73, 105, 108, 109, 110, 111, 113, 118, 124, 127, 169, 174, 176, 182, 184, 186, 196, 214, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 346, 380, 381, 386, 387, 389], "pass": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 118, 169, 174, 176, 182, 184, 186, 196, 214, 346, 380, 381, 392], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 61, 65, 70, 78, 84, 85, 112, 114, 118, 119, 120, 121, 124, 127, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 228, 229, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 361, 362, 363, 366, 367, 368, 372, 376, 377, 378, 379, 380, 381, 382, 383, 385, 386, 389], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 41, 43, 44, 61, 84, 85, 86, 87, 88, 90, 96, 98, 118, 119, 120, 121, 168, 269, 270, 334, 335, 336, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 391, 392], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 41, 43, 44, 61, 84, 85, 118, 119, 120, 121, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 392], "sq": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 41, 43, 44, 61, 84, 85, 118, 119, 120, 121, 167, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389], "entiti": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 44, 61, 384, 385, 386, 387, 388, 389], "water": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 44, 61, 84, 301, 383, 385, 386, 387, 388, 389], "mycustomverb": 1, "y": [2, 5, 6, 18, 22, 28, 80, 96, 112, 129, 130, 131, 132, 138, 139, 140, 141, 144, 145, 146, 147, 149, 150, 151, 153, 155, 156, 158, 163, 170, 174, 186, 187, 189, 198, 205, 209, 270, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 352, 383, 384, 385, 386, 387, 389], "none": [2, 3, 4, 5, 6, 7, 13, 14, 16, 19, 22, 23, 24, 27, 28, 29, 35, 38, 39, 61, 62, 66, 73, 84, 85, 112, 114, 122, 124, 125, 127, 170, 173, 174, 175, 182, 192, 193, 194, 205, 209, 210, 216, 222, 224, 270, 326, 334, 335, 343, 344, 348, 352, 383, 385, 386, 387, 389], "new": [2, 7, 26, 94, 170, 175, 207, 225, 226, 227, 386, 387, 388, 392, 393], "valu": [2, 3, 4, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 25, 34, 39, 40, 66, 73, 86, 87, 88, 90, 99, 112, 114, 119, 120, 122, 124, 125, 127, 128, 168, 169, 170, 172, 174, 176, 177, 179, 181, 182, 185, 186, 190, 191, 192, 193, 194, 199, 200, 206, 207, 214, 215, 224, 252, 253, 261, 270, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 347, 348, 349, 350, 351, 352, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 379, 383, 384, 385, 387, 388], "pixel": [2, 3, 4, 5, 6, 9, 12, 17, 18, 25, 34, 86, 90, 124, 127, 168, 170, 174, 177, 179, 185, 186, 192, 214, 277, 279, 286, 288, 289, 292, 293, 297, 298, 299, 301, 303, 306, 307, 311, 384, 385, 386, 387, 389], "each": [2, 5, 6, 12, 16, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 66, 73, 86, 90, 112, 114, 124, 127, 167, 174, 177, 185, 207, 214, 269, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 333, 334, 343, 352, 383, 384, 385, 386, 387, 388, 389], "non": [2, 173, 201, 202, 318, 319, 325, 327, 384, 385, 389], "miss": [2, 19, 66, 73, 88, 148, 168, 170, 194, 289, 296, 306, 316, 318, 319, 325, 326, 327, 336, 352, 389], "observ": [2, 87, 148, 157, 296, 305, 325, 368, 385, 387, 388, 389], "input": [2, 6, 8, 9, 12, 15, 86, 90, 91, 168, 169, 170, 172, 173, 174, 176, 177, 179, 181, 182, 183, 184, 186, 188, 189, 191, 192, 196, 197, 198, 201, 202, 214, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 345, 347, 348, 349, 350, 383, 385, 386, 388, 389], "without": [2, 16, 18, 34, 170, 173, 388, 389, 391, 392, 394], "comput": [2, 128, 133, 134, 135, 136, 137, 142, 143, 152, 153, 160, 161, 162, 164, 165, 166, 170, 276, 281, 282, 283, 284, 285, 290, 291, 300, 301, 308, 309, 310, 312, 333, 344, 384, 385, 386, 389], "option": [2, 3, 4, 6, 7, 10, 11, 13, 14, 66, 73, 112, 114, 170, 173, 174, 175, 192, 193, 207, 224, 270, 335, 352, 386, 387, 388, 389], "subset": [2, 12, 65, 70, 78, 269, 383, 386, 389], "mai": [2, 6, 12, 56, 57, 90, 95, 113, 122, 125, 168, 170, 174, 179, 224, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 295, 297, 298, 299, 301, 303, 306, 307, 311, 333, 336, 344, 383, 384, 385, 386, 387, 388, 389, 391, 392, 394], "have": [2, 12, 34, 64, 65, 69, 70, 77, 78, 90, 92, 93, 95, 113, 114, 122, 124, 125, 127, 168, 170, 179, 193, 206, 207, 214, 334, 335, 343, 344, 346, 352, 383, 385, 386, 387, 388, 389, 391, 392, 393], "constant": [2, 6, 170, 174, 277, 279, 286, 288, 289, 292, 293, 294, 297, 298, 299, 301, 303, 304, 306, 307, 311, 386, 389], "mean": [2, 6, 19, 66, 73, 119, 167, 170, 174, 194, 224, 277, 279, 286, 288, 289, 292, 293, 296, 297, 298, 299, 301, 303, 306, 307, 311, 316, 318, 319, 321, 325, 326, 327, 333, 334, 343, 352, 353, 381, 383, 384, 385, 386, 387, 389, 394], "same": [2, 6, 9, 12, 34, 65, 70, 78, 86, 90, 92, 103, 124, 125, 127, 168, 170, 174, 177, 179, 207, 214, 224, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 342, 384, 385, 386, 387, 388, 389, 392], "also": [2, 6, 13, 14, 90, 168, 170, 174, 186, 224, 270, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 295, 297, 298, 299, 301, 303, 306, 307, 311, 383, 385, 386, 387, 388, 389, 391, 392, 393], "anoth": [2, 6, 168, 170, 174, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 295, 297, 298, 299, 301, 303, 306, 307, 311, 377, 386, 388, 389], "align": [2, 6, 9, 12, 86, 168, 170, 174, 177, 179, 277, 279, 286, 288, 289, 292, 293, 297, 298, 299, 301, 303, 306, 307, 311, 386, 391], "shape": [2, 6, 9, 12, 86, 168, 170, 174, 177, 179, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 389], "binari": [2, 5, 9, 25, 66, 73, 90, 170, 172, 177, 206, 207, 277, 278, 279, 280, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 315, 316, 317, 318, 319, 320, 323, 324, 325, 326, 327, 331, 333, 334, 335, 336, 344, 385, 386, 387, 389], "true": [2, 5, 9, 25, 66, 73, 131, 141, 154, 158, 169, 170, 172, 174, 176, 177, 179, 182, 186, 193, 204, 205, 206, 207, 208, 209, 211, 212, 214, 216, 219, 224, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 352, 358, 359, 360, 369, 370, 383, 384, 385, 386, 387, 389], "cloud": [2, 9, 193, 383, 385, 388, 389], "self": [2, 9, 12, 124, 127, 220, 260, 355, 384, 385, 388], "extract": [2, 3, 4, 10, 11, 12, 13, 14, 96, 98, 247, 384, 385], "time": [2, 5, 7, 8, 12, 16, 17, 18, 19, 39, 40, 73, 93, 113, 114, 168, 195, 264, 265, 270, 275, 278, 280, 287, 296, 347, 348, 352, 380, 381, 383, 385, 386, 387, 388, 389, 391, 392], "year": [2, 4, 7, 11, 12, 14, 52, 56, 96, 175, 389], "compon": [3, 4, 7, 10, 11, 13, 14, 23, 24, 29, 96, 175, 210, 269, 270, 351, 383, 384, 385, 386, 387], "assign": [3, 4, 5, 9, 25, 112, 114, 168, 177, 181, 240, 334, 383, 386, 387, 388], "spatial": [3, 10, 13, 17, 18, 19, 40, 65, 66, 70, 73, 78, 80, 82, 83, 91, 94, 96, 105, 106, 107, 112, 118, 124, 127, 147, 171, 172, 178, 183, 184, 185, 186, 187, 189, 192, 193, 194, 198, 201, 207, 217, 221, 223, 224, 230, 250, 269, 270, 273, 295, 344, 352, 383, 384, 385, 387, 389], "coordin": [3, 4, 7, 10, 11, 12, 13, 14, 19, 34, 46, 47, 48, 66, 72, 73, 79, 98, 106, 112, 114, 168, 170, 171, 173, 174, 175, 177, 183, 184, 192, 193, 194, 195, 196, 201, 202, 207, 230, 270, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 295, 296, 297, 298, 299, 301, 303, 306, 307, 311, 344, 352, 383, 385, 386, 387, 388], "shortcut": [3, 4, 10, 11, 13, 14, 389], "first": [3, 4, 10, 11, 13, 14, 25, 51, 112, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 318, 334, 383, 385, 386, 387, 388, 389, 392, 395], "dimens": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 26, 27, 29, 30, 34, 35, 36, 37, 38, 45, 49, 65, 66, 70, 73, 78, 86, 91, 92, 94, 95, 96, 98, 124, 127, 168, 170, 172, 173, 174, 175, 176, 177, 179, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 197, 198, 201, 202, 207, 210, 211, 216, 217, 218, 219, 221, 222, 223, 224, 277, 279, 286, 288, 289, 292, 293, 296, 297, 298, 299, 301, 303, 306, 307, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 351, 352, 383, 384, 386, 387, 388], "featur": [3, 10, 13, 105, 108, 112, 118, 384, 386, 387, 389, 392], "indic": [3, 10, 13, 301, 343, 383, 385, 386, 389], "g": [3, 4, 6, 7, 12, 13, 14, 16, 17, 86, 114, 118, 173, 175, 185, 333, 334, 335, 344, 352, 383, 385, 386, 387, 388, 389, 392], "tempor": [4, 5, 7, 11, 14, 40, 65, 66, 70, 72, 73, 78, 79, 81, 87, 93, 94, 96, 113, 114, 124, 127, 172, 175, 195, 196, 202, 207, 224, 236, 270, 278, 280, 287, 344, 351, 352, 380, 383, 384, 385, 389], "month": [4, 7, 11, 14, 175, 384, 385, 389], "dai": [4, 7, 14, 51, 52, 73, 175, 389], "spatio": [5, 65, 70, 78, 87, 124, 127, 172, 224, 236, 270, 344, 352, 383, 384, 385, 386, 389], "find": [5, 384, 386, 387, 389], "set": [5, 67, 74, 90, 119, 146, 156, 225, 226, 227, 261, 269, 294, 304, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 353, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 381, 384, 385, 386, 388, 389, 391, 392], "connect": [5, 73, 383, 385, 387, 389], "space": [5, 8, 17, 39, 40, 176, 270, 296, 383, 384, 385, 386, 387, 389, 391, 392, 394], "integ": [5, 17, 112, 185, 281, 291, 343, 386, 389], "index": [5, 41, 42, 43, 46, 51, 61, 64, 65, 69, 70, 77, 78, 84, 85, 120, 121, 123, 124, 126, 127, 188, 189, 197, 301, 376, 382, 383, 385, 386, 387, 388, 389, 394], "start": [5, 17, 93, 113, 124, 127, 185, 280, 352, 384, 385, 386, 387, 388, 389, 392], "from": [5, 10, 11, 16, 18, 19, 34, 66, 70, 73, 75, 78, 90, 91, 96, 98, 108, 109, 110, 111, 114, 163, 168, 173, 194, 196, 202, 206, 270, 311, 333, 335, 343, 344, 346, 352, 383, 385, 386, 387, 389, 391, 392, 395], "1": [5, 10, 17, 18, 25, 56, 57, 112, 193, 334, 383, 384, 385, 386, 387, 388, 389], "For": [5, 8, 112, 124, 127, 269, 270, 296, 334, 335, 336, 348, 352, 385, 386, 387, 388, 389, 391, 392], "x": [5, 17, 18, 80, 112, 118, 120, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 186, 187, 189, 198, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 343, 344, 345, 347, 348, 349, 350, 352, 380, 383, 384, 385, 386, 387, 389], "direct": [5, 112, 201, 202, 270, 352, 387, 389], "queen": [5, 389], "neighborhood": [5, 389], "while": [5, 17, 185, 335, 386, 387, 389], "rook": 5, "oper": [6, 10, 11, 28, 90, 101, 124, 127, 174, 201, 202, 209, 224, 225, 227, 231, 237, 334, 335, 336, 339, 342, 385, 387, 388, 389], "express": [6, 10, 11, 86, 90, 93, 106, 112, 171, 174, 195, 224, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 333, 334, 335, 352, 386, 388, 391, 394], "univari": [6, 174, 334, 335, 386], "singl": [6, 16, 18, 34, 61, 84, 85, 113, 114, 124, 127, 176, 188, 189, 197, 214, 270, 296, 335, 380, 383, 386, 387, 388, 391], "bivari": [6, 86, 334, 335, 386, 388], "arithmet": [6, 389], "add": [6, 94, 225, 226, 227, 277, 334, 385, 386, 387, 388, 389, 392], "multipli": [6, 299, 334, 386, 388, 389], "condit": [6, 9, 170, 385, 389, 394], "equal": [6, 10, 11, 12, 119, 145, 150, 155, 179, 183, 207, 214, 278, 280, 287, 288, 290, 293, 295, 298, 300, 303, 334, 353, 381, 385, 389], "greater": [6, 145, 292, 293, 334, 385, 386, 389], "In": [6, 86, 167, 168, 170, 174, 269, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 295, 296, 297, 298, 299, 301, 303, 306, 307, 311, 333, 383, 384, 385, 386, 387, 388, 389, 392], "case": [6, 13, 14, 86, 168, 170, 174, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 295, 297, 298, 299, 301, 303, 306, 307, 311, 351, 386, 387, 388, 389, 392], "second": [6, 25, 86, 112, 174, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 334, 347, 383, 385, 386, 387, 388, 389], "operand": [6, 10, 11, 174, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 334, 335, 336, 337, 338, 386, 389], "2": [6, 25, 56, 57, 112, 186, 219, 290, 300, 334, 383, 384, 385, 386, 387, 388, 389, 394], "two": [6, 10, 11, 65, 70, 78, 93, 112, 124, 127, 168, 176, 193, 224, 335, 352, 383, 386, 387], "should": [6, 8, 9, 13, 14, 16, 17, 18, 26, 34, 40, 65, 66, 70, 73, 78, 94, 95, 105, 112, 113, 119, 124, 127, 168, 169, 170, 172, 173, 174, 176, 177, 179, 182, 185, 186, 193, 201, 202, 206, 207, 214, 224, 230, 236, 270, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 346, 352, 353, 381, 383, 385, 386, 387, 388, 389, 392, 393], "either": [6, 10, 11, 141, 214, 289, 386, 389, 394], "built": [6, 16, 18, 34, 214, 224, 334, 335, 383, 384, 385, 386, 389], "right": [6, 10, 11, 17, 18, 174, 185, 186, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 388, 389, 391], "side": [6, 10, 11, 113, 119, 174, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 353, 381, 387, 388, 389], "ignor": [6, 170, 172, 174, 175, 177, 179, 181, 185, 193, 206, 207, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 318, 319, 325, 326, 327, 389], "veget": [6, 44, 301, 383, 385, 386, 387, 388, 389], "label": [7, 99, 173, 175, 179, 199, 253, 337, 340, 343, 383, 384, 385, 386, 387, 388, 389, 392], "nodata": [8, 9, 25, 168, 176, 177, 186, 348, 386], "interpol": [8, 176, 389], "valid": [8, 66, 73, 87, 157, 176, 186, 207, 270, 305, 383, 386, 389], "fit": [8, 387, 388, 389], "along": [8, 10, 11, 13, 14, 16, 17, 18, 26, 98, 112, 168, 176, 185, 186, 207, 270, 345, 352, 386, 388], "given": [8, 15, 16, 17, 18, 61, 65, 66, 70, 73, 78, 84, 85, 86, 105, 112, 113, 114, 118, 119, 124, 127, 175, 176, 182, 184, 185, 186, 192, 193, 194, 196, 201, 202, 224, 237, 238, 269, 270, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 344, 345, 346, 352, 353, 381, 383, 385, 386, 387, 389], "specifi": [8, 66, 73, 182, 186, 278, 280, 287, 295, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 383, 386, 387, 388, 389, 391], "stack": [8, 80, 176, 188, 189, 221, 352, 389], "2d": [8, 176, 389], "regular": [8, 19, 66, 73, 112, 114, 193, 194, 352, 386, 389, 396], "1d": 8, "One": [8, 105, 176, 386], "nearest": [8, 66, 73, 176, 389], "linear": [8, 176, 389], "cubic": [8, 66, 73, 176, 389], "track_typ": [8, 90, 169, 170, 172, 174, 176, 177, 182, 186, 204, 205, 206, 207, 208, 209, 211, 212, 214, 216, 219, 224, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 386], "bool": [8, 66, 73, 169, 170, 172, 174, 176, 177, 179, 180, 182, 186, 193, 201, 202, 206, 207, 213, 214, 224, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 384], "type": [8, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 88, 90, 106, 107, 115, 116, 117, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 174, 176, 177, 178, 180, 182, 186, 187, 193, 195, 199, 200, 206, 207, 213, 214, 220, 224, 228, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 383, 384, 385, 387, 388, 389, 392], "": [8, 169, 170, 174, 176, 336, 384, 386, 389, 391], "check": [8, 169, 170, 172, 176, 177, 206, 207, 214, 270, 335, 384, 386, 392], "output": [8, 10, 11, 169, 170, 172, 174, 176, 182, 186, 214, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 340, 341, 342, 383, 385, 386, 387, 388, 389], "promot": [8, 169, 170, 172, 174, 176, 182, 186, 214, 224, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 339, 386, 394], "whenev": [8, 169, 176, 224, 334, 335, 384, 386, 388, 389], "applic": [8, 169, 176, 336, 387, 388, 392, 394], "base": [9, 62, 122, 174, 182, 186, 214, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 383, 385, 386, 388, 389, 392], "evalu": [9, 10, 11, 86, 90, 224, 229, 231, 235, 246, 253, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 334, 335, 378, 383, 384, 385, 386, 387], "correspond": [9, 12, 34, 86, 88, 112, 114, 237, 238, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 383, 385, 386, 389], "preserv": [9, 19, 194, 201, 202, 289, 306, 386, 389], "other": [9, 94, 168, 207, 214, 220, 348, 355, 383, 385, 386, 387, 388, 389, 391, 392], "filter": [10, 11, 32, 33, 86, 90, 118, 249, 296, 380, 384, 385, 388], "relat": [10, 11, 124, 127, 278, 280, 287, 295, 385, 386, 387, 389], "final": [10, 11, 386, 389], "posit": [10, 11, 17, 112, 168, 185, 389, 391], "consist": [10, 11, 269, 384, 386, 387, 388, 389], "respect": [10, 11, 90, 94, 384, 386, 387, 389, 391], "three": [10, 11, 193, 383, 386, 389], "intersect": [10, 87, 112, 295, 334, 389], "geometri": [10, 111, 192, 250, 295, 334, 344, 386, 389], "gpd": [10, 40, 118, 383, 384, 385, 386, 387, 388, 389], "read_fil": [10, 40, 118, 383, 384, 385, 386, 387, 389], "foo": [10, 15, 386, 389, 392], "gpkg": 10, "after": [11, 278, 334, 386, 387, 388, 389, 392], "time_inst": [11, 264, 278, 280, 389], "2021": [11, 380, 381, 390, 394], "12": [11, 40, 380, 381, 383, 384, 385, 386, 387, 388, 389, 392], "31": [11, 40, 380, 381, 383, 384, 385, 386, 387, 389], "2020": [11, 40, 383, 384, 385, 386, 387, 389], "grouper": [12, 13, 14, 91, 92, 95, 179], "group": [12, 13, 14, 86, 91, 92, 95, 179, 388, 396], "split": [12, 86, 387, 392], "distinct": [12, 40, 86, 344, 383, 385, 386, 388, 389], "compris": [12, 107, 389], "share": [12, 385, 389, 392], "similar": 12, "particular": [12, 389], "togeth": [12, 66, 73, 105, 179, 270, 386, 387, 388, 389], "altern": [12, 108, 109, 110, 111, 179, 386, 389, 392], "collect": [12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 92, 179, 228, 229, 239, 240, 241, 245, 246, 247, 248, 249, 251, 256, 257, 258, 259, 260, 262, 263, 266, 267, 384, 385, 386], "Then": [12, 179, 384, 386, 387, 389], "usual": [13, 14, 385, 386, 387, 388, 389], "result": [13, 14, 17, 39, 40, 103, 185, 235, 259, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 334, 335, 384, 386, 387, 389], "groupbi": [13, 14, 86, 91, 92, 95, 251, 384], "list": [13, 14, 112, 173, 187, 203, 261, 270, 273, 294, 304, 337, 338, 344, 352, 383, 384, 386, 387, 388, 389, 392], "multipl": [13, 14, 20, 25, 26, 34, 44, 114, 118, 203, 214, 269, 296, 324, 344, 352, 383, 384, 385, 386, 387, 388], "give": [15, 383, 387, 389, 391, 392], "column": [16, 17, 185, 190, 191, 192, 389], "summari": [16, 392], "statist": [16, 333, 344, 386, 387], "boolean": [16, 386, 389], "see": [16, 18, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 73, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 204, 205, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 270, 335, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 383, 385, 386, 387, 388, 389, 391, 393, 394], "here": [16, 18, 34, 167, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 383, 385, 386, 388, 389, 393, 394], "overview": [16, 18, 34, 383, 387, 389], "chosen": [16, 18, 34, 176], "thei": [16, 18, 34, 112, 118, 179, 343, 384, 385, 386, 387, 388, 389, 391, 392, 393], "underscor": [16, 18, 34], "end": [16, 18, 34, 93, 113, 278, 352, 386, 388, 389, 392], "reduct": [16, 182, 386, 389], "If": [16, 18, 19, 25, 39, 61, 62, 64, 66, 69, 73, 77, 84, 85, 112, 113, 114, 118, 122, 123, 124, 125, 126, 127, 168, 170, 172, 175, 176, 177, 179, 182, 185, 186, 192, 193, 194, 206, 207, 214, 228, 237, 238, 253, 259, 270, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 335, 336, 343, 344, 352, 383, 386, 387, 388, 389, 392, 393, 395], "count": [16, 39, 40, 317, 334, 335, 386, 387, 388, 389], "step": [17, 36, 183, 185, 218, 385, 387, 388, 389], "number": [17, 50, 55, 59, 95, 112, 186, 270, 290, 300, 317, 325, 334, 335, 347, 348, 352, 360, 368, 386, 389, 392], "int": [17, 18, 112, 119, 185, 186, 253, 270, 333, 344, 345, 352, 353, 354, 356, 384, 386, 387], "amount": [17, 185, 389], "A": [17, 41, 42, 43, 44, 61, 84, 85, 118, 121, 185, 270, 333, 344, 352, 376, 377, 378, 380, 382, 383, 385, 386, 387, 388, 389, 391, 392], "neg": [17, 112, 185, 270, 352, 387, 389], "left": [17, 18, 185, 186, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 388, 389], "follow": [17, 185, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 383, 385, 386, 389, 391, 392], "order": [17, 168, 185, 214, 385, 386, 387, 389], "cr": [17, 40, 112, 184, 185, 187, 192, 193, 201, 270, 352, 383, 384, 385, 386, 387, 389], "top": [17, 185, 389], "move": [17, 18, 185, 385, 386, 388, 389], "down": [17, 185, 389], "coord": [17, 288, 294, 295, 296, 303, 304, 305, 319, 324, 325, 334, 344, 386, 389], "reduc": [18, 34, 37, 39, 40, 90, 98, 102, 186, 214, 219, 224, 226, 232, 238, 258, 334, 335, 336, 384, 385, 387, 388], "size": [18, 37, 112, 186, 219, 270, 352, 389, 391], "window": [18, 186, 389], "k": [18, 186, 389], "extent": [18, 40, 65, 70, 78, 87, 93, 124, 127, 186, 224, 269, 270, 352, 383, 384, 385, 389], "roll": [18, 186], "being": [18, 25, 84, 85, 94, 186, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 384, 385, 386, 387, 389], "alwai": [18, 95, 183, 186, 193, 289, 306, 334, 335, 383, 385, 386, 387, 388, 389, 392], "center": [18, 186, 389], "its": [18, 86, 89, 119, 179, 186, 207, 334, 335, 352, 353, 381, 383, 385, 386, 387, 388, 389, 392, 393], "over": [18, 91, 182, 186, 383, 384, 385, 386], "both": [18, 112, 113, 119, 131, 141, 186, 270, 279, 289, 336, 352, 353, 381, 387, 389, 393], "form": [18, 105, 186, 352, 385, 388, 389, 392], "squar": [18, 162, 186, 310, 386, 389], "middl": [18, 186, 389], "remov": [19, 66, 73, 168, 194, 296, 352, 386, 389, 391, 392], "edg": [19, 66, 73, 176, 194, 352, 386, 389], "arrayproxi": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 61, 84, 85, 121, 376, 377, 378, 382], "creat": [25, 112, 114, 206, 383, 384, 385, 386, 387, 389, 393, 395], "categor": [25, 122, 125, 206, 333, 343, 344, 383, 385, 386, 387, 388, 389], "composit": [25, 206, 388, 389], "et": [25, 112, 389], "cetera": [25, 112, 389], "more": [25, 86, 91, 95, 105, 168, 172, 193, 333, 344, 383, 385, 386, 387, 388, 389, 396], "than": [25, 86, 89, 95, 99, 119, 120, 144, 145, 149, 150, 168, 186, 193, 201, 202, 278, 280, 292, 293, 297, 298, 316, 326, 333, 353, 381, 383, 384, 385, 386, 387, 388, 389], "those": [25, 168, 170, 385, 388, 389, 391, 392, 396], "priorit": 25, "get": [25, 112, 114, 385, 386, 388, 389, 392], "ic": [25, 26, 34, 383], "To": [26, 170, 207, 383, 385, 386, 387, 388, 389, 392], "member": [26, 146, 156, 207, 294, 304, 379, 385, 386, 389, 391, 392], "concept": [26, 84, 85, 97, 122, 123, 124, 125, 126, 127, 244, 270, 384, 385, 386, 387, 389, 394], "per": [34, 190, 191, 192, 214, 384, 387, 389], "like": [39, 88, 105, 113, 383, 384, 385, 386, 387, 388, 391], "store": [39, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 201, 202, 203, 334, 343, 344, 383, 384, 385, 386, 389], "instruct": [39, 235, 269, 386, 387, 388, 389], "dictionari": [39, 40, 108, 109, 110, 111, 122, 123, 124, 125, 126, 127, 334, 335, 343, 383, 385, 386, 387, 388], "kei": [39, 40, 88, 122, 125, 228, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 383, 385, 386, 387], "empti": [39, 62, 66, 73, 122, 125, 180, 213, 385, 387], "map": [39, 40, 61, 66, 73, 84, 85, 97, 224, 270, 333, 352, 383, 386, 388, 389], "seri": [39, 40, 387, 389, 391], "datacub": [40, 124, 127, 224, 270, 383, 384, 385, 386, 387, 388, 389], "config": [40, 66, 73, 124, 127, 270], "initi": [40, 93, 105, 108, 109, 110, 111, 112, 113, 118, 127, 184, 192, 193, 201, 270, 352, 380, 381, 383, 385, 386, 387, 389, 390], "core": [40, 127, 386, 387, 389], "queryprocessor": [40, 127, 386], "It": [40, 66, 90, 220, 235, 270, 278, 280, 287, 290, 295, 300, 301, 333, 335, 344, 355, 383, 385, 386, 387, 388, 389], "run": [40, 383, 386], "phase": [40, 269, 386], "pars": [40, 351, 352, 385, 388], "optim": [40, 193, 383], "against": [40, 61, 84, 85, 97, 100, 224, 234, 268, 270, 387, 388], "spatialext": [40, 118, 270, 352, 383, 384, 385, 386, 387, 389], "temporalext": [40, 270, 352, 380, 381, 383, 384, 385, 386, 387, 389], "configur": [40, 62, 66, 67, 73, 74, 122, 125, 270, 384, 386, 387, 388, 389, 393], "forward": [40, 105, 108, 109, 110, 111, 113, 127, 229, 270, 386, 387, 389], "xarrai": [40, 65, 70, 78, 112, 114, 124, 127, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 194, 196, 197, 198, 201, 202, 203, 206, 207, 214, 220, 224, 228, 229, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 342, 345, 347, 348, 349, 350, 351, 352, 355, 383, 384, 385, 386, 387, 389], "dataarrai": [40, 65, 70, 78, 112, 114, 124, 127, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 188, 189, 194, 196, 197, 198, 201, 202, 203, 206, 207, 214, 220, 224, 228, 229, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 342, 345, 347, 348, 349, 350, 351, 352, 355, 383, 384, 385, 386, 387, 389], "respons": [40, 235, 384, 387, 388], "geopanda": [40, 105, 107, 108, 109, 110, 111, 118, 178, 192, 250, 344, 383, 384, 385, 386, 387, 388, 389], "pd": [40, 384, 386, 389], "dc": [40, 383, 384, 385, 386, 387, 388, 389], "geotiffarch": [40, 384, 385, 386, 387, 388, 389], "file": [40, 63, 66, 68, 73, 76, 118, 190, 193, 383, 384, 385, 386, 387, 388, 389, 392, 394, 395], "layout": [40, 41, 42, 43, 62, 64, 65, 66, 69, 70, 73, 77, 78, 121, 376, 382, 383, 384, 385, 386, 387, 388, 389], "json": [40, 118, 119, 120, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389], "src": [40, 66, 383, 384, 385, 386, 387, 388, 389], "layer": [40, 41, 42, 43, 64, 65, 66, 69, 70, 71, 73, 77, 78, 100, 254, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 294, 295, 297, 298, 299, 301, 303, 304, 306, 307, 311, 334, 376, 382, 383, 384, 385, 386, 387, 389], "zip": [40, 66, 71, 383, 384, 385, 386, 387, 388, 389], "footprint": [40, 383, 384, 385, 386, 387, 389], "geojson": [40, 108, 109, 110, 111, 118, 383, 384, 385, 386, 387, 389], "2019": [40, 383, 384, 385, 386, 387, 389], "01": [40, 347, 381, 383, 384, 385, 386, 387, 389], "3035": [40, 383, 384, 385, 386, 387, 389], "tz": [40, 66, 73, 114, 196, 202, 270, 346, 352, 384, 386, 387, 389], "utc": [40, 66, 73, 383, 384, 386, 387, 389], "spatial_resolut": [40, 270, 352, 383, 384, 385, 386, 387, 389], "1800": [40, 389], "describ": [41, 42, 43, 62, 66, 73, 333, 343, 344, 376, 382, 383, 385, 386, 387, 388, 389], "within": [41, 42, 43, 84, 85, 87, 112, 114, 296, 353, 376, 382, 383, 385, 386, 387, 389, 391, 394, 396], "categori": [41, 42, 43, 84, 85, 343, 376, 382, 383, 385, 387, 388, 389, 396], "eo": [41, 42, 43, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 76, 77, 78, 79, 87, 91, 100, 121, 122, 125, 376, 382, 384, 385, 386, 388, 389], "cube": [41, 42, 43, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 87, 91, 100, 121, 122, 125, 137, 285, 376, 382, 384, 385, 386, 388, 389, 393], "bright": [41, 121, 383], "color": [43, 383, 384, 385, 386, 387, 388, 389, 391], "element": [44, 179, 203, 213, 344, 345, 383, 387, 388, 389], "attribut": [45, 49, 62, 66, 73, 105, 113, 167, 201, 202, 203, 224, 335, 353, 383, 385, 386, 387, 389], "tupl": [46, 47, 48, 295, 344, 352, 386, 389], "timestamp": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 113, 115, 116, 296, 329, 344, 346, 380, 381, 384, 386, 387, 389], "week": 51, "consid": [51, 168, 385, 388, 389, 391], "mondai": 51, "0": [51, 112, 325, 334, 350, 383, 384, 385, 386, 387, 389, 394], "There": [56, 57, 383, 386, 387, 388, 389, 392], "four": [56, 57, 386, 388], "januari": [56, 57, 384, 389], "februari": [56, 57, 384, 389], "march": [56, 57, 384, 389], "april": [56, 57, 384, 389], "june": [56, 57, 384, 389], "3": [56, 57, 193, 383, 384, 385, 386, 387, 388, 389], "juli": [56, 57, 384, 389], "august": [56, 57, 384, 389], "septemb": [56, 57, 384, 389], "4": [56, 57, 383, 384, 385, 386, 387, 388, 389], "octob": [56, 57, 384, 389], "novemb": [56, 57, 384, 389, 390], "decemb": [56, 57, 384, 389], "properti": [61, 63, 67, 68, 71, 72, 74, 75, 76, 79, 84, 85, 97, 106, 107, 115, 116, 117, 124, 127, 171, 178, 180, 187, 195, 199, 200, 213, 220, 230, 231, 232, 233, 234, 235, 236, 268, 269, 271, 272, 273, 274, 275, 333, 337, 338, 339, 340, 341, 342, 351, 354, 355, 356, 357, 383, 385, 386, 388], "semant": [61, 84, 85, 97, 122, 123, 124, 125, 126, 127, 224, 235, 244, 269, 270, 272, 385, 386, 387, 389], "referenc": [61, 64, 69, 77, 84, 85, 96, 97, 98, 99, 100, 103, 104, 123, 124, 126, 127, 259, 270, 384, 385, 386, 387], "translat": [61, 84, 85, 385, 386, 387, 389, 391], "combin": [61, 84, 85, 124, 127, 168, 270, 336, 385, 386, 387, 388, 393], "metadata": [64, 69, 77, 173, 383, 387], "rais": [64, 69, 77, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 113, 123, 126, 159, 168, 170, 172, 175, 176, 177, 179, 182, 185, 186, 193, 194, 206, 207, 214, 228, 237, 238, 253, 259, 307, 336, 389], "except": [64, 69, 77, 113, 123, 126, 168, 170, 172, 175, 176, 177, 179, 182, 185, 186, 193, 194, 206, 207, 214, 228, 237, 238, 253, 259, 336, 386, 389, 394], "unknownlayererror": [64, 69, 77], "abstract": [65, 124, 383, 385], "parse_ext": [65, 70, 78, 124, 127, 224, 270, 383, 385, 386], "geotiff": [66, 193, 383, 386, 387], "simpl": [66, 387, 389], "assum": [66, 113, 134, 135, 136, 160, 161, 164, 165, 166, 282, 283, 284, 308, 309, 312, 313, 314, 383, 389, 394], "bundl": 66, "archiv": [66, 71, 383, 387], "meant": [66, 278, 280, 287, 295, 383, 385, 388, 389, 392, 393, 396], "demonstr": [66, 383, 387, 391], "purpos": [66, 383, 387, 389, 392, 393], "path": [66, 71, 190, 193, 387], "timezon": [66, 72, 73, 79, 113, 114, 117, 196, 202, 270, 278, 280, 287, 346, 352, 383], "databas": [66, 73, 114, 196, 202, 270, 346, 352, 386], "inherit": [66, 73, 114, 167, 196, 202, 270, 346, 352, 383, 385], "datetim": [66, 72, 73, 79, 114, 117, 195, 196, 202, 270, 275, 278, 280, 287, 288, 292, 293, 294, 296, 297, 298, 303, 304, 305, 318, 319, 320, 323, 324, 325, 329, 333, 334, 344, 346, 348, 351, 352, 386, 389], "tzinfo": [66, 72, 73, 79, 114, 117, 195, 196, 202, 270, 275, 346, 352], "tune": [66, 73, 383, 387, 389], "retriev": [66, 67, 73, 74, 87, 91, 124, 127, 352, 383, 385, 386, 387], "trim": [66, 73, 266, 352, 386], "maintain": [66, 73, 352, 386, 392], "default": [66, 73, 383, 386, 389], "value_type_map": [66, 73], "how": [66, 73, 269, 327, 383, 384, 385, 386, 387, 388, 389, 392], "encod": [66, 73, 385, 386], "nomin": [66, 73, 207, 288, 294, 296, 303, 304, 305, 318, 319, 324, 325, 333, 334, 344, 386, 389], "ordin": [66, 73, 119, 207, 288, 292, 293, 294, 296, 297, 298, 303, 304, 305, 318, 319, 320, 323, 324, 325, 333, 334, 344, 353, 383, 385, 386, 387, 389], "continu": [66, 73, 207, 276, 277, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 344, 353, 385, 386, 389, 391], "discret": [66, 73, 207, 276, 277, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 344, 353, 386, 387, 389], "resampl": [66, 73], "differ": [66, 73, 92, 93, 113, 153, 168, 184, 196, 296, 301, 329, 333, 344, 346, 352, 372, 380, 381, 383, 384, 385, 386, 387, 388, 389, 391, 392, 396], "resolut": [66, 73, 112, 114, 183, 187, 270, 273, 352, 386, 387, 389], "techniqu": [66, 73], "separ": [66, 73, 197, 198, 269, 384, 386, 387, 388, 389], "possibl": [66, 73, 86, 357, 385, 386, 387, 388, 389], "averag": [66, 73, 383, 384, 386, 389], "bilinear": [66, 73, 176, 389], "cubic_splin": [66, 73], "lanczo": [66, 73], "mode": [66, 73, 334, 384, 386, 389], "gauss": [66, 73], "max": [66, 73, 334, 383, 384, 387, 389], "min": [66, 73, 334, 383, 389], "med": [66, 73], "q1": [66, 73], "q3": [66, 73], "interfac": [73, 75, 383, 385], "backend": 73, "manual": [73, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 386], "detail": [73, 383, 386, 387, 389, 393], "allow": [73, 75, 90, 92, 95, 125, 220, 355, 383, 385, 386, 387, 388, 389, 391], "read": [73, 75, 105, 113, 270, 386, 387, 389], "group_by_solar_dai": 73, "level": [73, 333, 344, 383, 384, 385, 386, 387, 388, 391], "solar": 73, "keep": [73, 173, 224, 274, 386, 389], "scene": 73, "reserv": [80, 81, 82, 83, 94, 182, 186, 207, 386, 389], "flood": [85, 388], "cannot": [86, 168, 228, 237, 238, 389], "occur": [86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 296, 324, 367, 386, 388, 389], "involv": [86, 334, 335, 386, 389, 391, 392], "ha": [86, 90, 95, 112, 168, 170, 172, 174, 177, 193, 207, 253, 270, 277, 279, 286, 288, 289, 292, 293, 297, 298, 299, 301, 303, 306, 307, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 352, 383, 384, 385, 386, 387, 388, 389], "some": [86, 207, 269, 351, 383, 385, 386, 387, 388, 389, 393], "common": [86, 167, 168, 301, 386, 388, 391, 392], "happen": [87, 386, 387], "erron": [87, 296, 388], "invalid": [88, 386, 389], "build": [88, 125, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 385, 386, 387, 388, 389, 392, 393], "block": [88, 99, 125, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 385, 386, 387, 388, 389, 392], "handler": [88, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267], "interv": [89, 93, 113, 139, 252, 265, 278, 280, 287, 381, 384, 386, 387, 389], "upper": [89, 115, 119, 353, 381, 387, 389, 392], "bound": [89, 93, 112, 113, 114, 115, 116, 119, 278, 280, 287, 295, 353, 354, 356, 381, 386, 387, 389], "smaller": [89, 119, 353, 381, 389], "lower": [89, 116, 119, 353, 381, 387, 389], "These": [90, 94, 112, 114, 182, 186, 193, 269, 270, 352, 385, 386, 387, 388, 389, 392], "choos": [90, 389], "wide": 90, "rang": [90, 334, 383, 384, 387, 389], "sensibli": 90, "certain": [90, 269, 384, 386, 388], "concaten": [90, 91, 94, 243, 384], "requir": [90, 91, 92, 95, 270, 383, 385, 386, 387, 389, 393, 394], "compos": [90, 242, 384], "disabl": [90, 386, 391], "track": [90, 224, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332], "fals": [90, 186, 201, 202, 219, 316, 384, 385, 386, 387, 389], "present": [91, 100, 103, 168, 175, 176, 179, 182, 185, 186, 194, 259, 389, 392], "includ": [91, 92, 95, 105, 112, 113, 118, 182, 184, 186, 192, 193, 201, 270, 351, 352, 380, 381, 384, 385, 386, 387, 389, 391, 392], "often": [91, 384], "least": [91, 158, 206, 306, 316, 329, 359, 383, 386, 389, 392], "exactli": [92, 168, 389], "zone": [93, 195, 270, 275, 352, 386, 387], "instant": [93, 113, 114, 264, 278, 280, 352, 380, 381, 389], "put": [95, 383, 385], "limit": [95, 186, 219, 383, 385, 386, 388, 389, 394], "document": [95, 173, 383, 387, 392, 393, 394, 396], "clearli": [95, 389], "mention": [95, 385, 389], "unexist": [96, 97, 98, 100, 103], "want": [96, 98, 386, 388, 389, 392, 393], "try": [96, 98, 335, 386, 392], "rather": [99, 120, 201, 202, 316, 326, 385, 389], "itself": [99, 112, 120, 192, 193, 201, 202, 269, 378, 386, 387, 388, 389, 395], "attach": [99, 113], "undefin": [101, 102, 104], "becaus": [101, 102, 104, 296], "nor": [101, 102, 172, 383, 387], "ad": [101, 102, 168, 225, 226, 227, 351, 387, 388, 392], "custom": [101, 102, 104, 169, 384, 385, 389, 396], "did": [104, 385], "represent": [105, 113, 167, 203, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 380, 381, 383, 387], "boundari": [105, 113, 386], "geodatafram": [105, 107, 108, 109, 110, 111, 118, 192, 250, 344, 386, 387, 389], "themselv": [105, 112, 113, 179, 184, 192, 193, 201, 270, 352, 383, 387, 388, 389], "system": [106, 112, 171, 184, 192, 193, 201, 230, 270, 295, 352, 383, 385, 386, 387, 389, 393], "pyproj": [106, 112, 171, 184, 192, 193, 201, 230, 270, 352], "classmethod": [108, 109, 110, 111, 270, 386], "format": [108, 109, 110, 111, 112, 113, 118, 270, 352, 380, 381, 383, 385, 386, 387, 389, 392], "accord": [108, 109, 110, 111, 388, 389], "standard": [108, 109, 110, 111, 330, 373, 383, 385, 389], "featurecollect": 109, "from_featur": [109, 110, 111], "rectangular": [112, 386, 387], "grid": [112, 114, 178], "cover": [112, 114, 386, 388, 389], "box": [112, 278, 280, 287, 295, 386, 389], "cell": [112, 114, 270, 352, 386], "locat": [112, 296, 383, 384, 385, 387, 389], "depend": [112, 383, 385, 387, 388, 389, 392, 393, 395], "where": [112, 168, 270, 296, 352, 383, 384, 385, 386, 388, 389], "axi": [112, 270, 345, 352, 383, 385, 386, 387, 389], "float": [112, 119, 253, 270, 333, 344, 352, 353, 354, 356, 384, 386], "unit": [112, 187, 270, 352, 383, 385, 386, 387, 389], "ax": [112, 270, 352, 384, 387], "most": [112, 270, 324, 329, 352, 367, 384, 386, 387, 388, 389], "crss": [112, 270, 352], "henc": [112, 270, 352, 383, 385, 386, 387, 388, 389], "understood": [112, 118, 119, 120, 184, 192, 193, 201, 270, 352, 379, 380, 381], "well": [112, 113, 184, 192, 193, 201, 270, 351, 352, 380, 381, 383, 385, 386, 387, 389, 391, 392], "epsg": [112, 184, 192, 193, 201, 270, 352, 383, 385, 386, 387, 389], "code": [112, 184, 192, 193, 201, 270, 352, 383, 386, 387, 388, 393, 394], "wkt": [112, 184, 192, 193, 201, 270, 352], "string": [112, 184, 192, 193, 201, 270, 343, 352], "panda": [113, 114, 115, 116, 191, 346, 352, 380, 381, 384, 386, 387, 389], "text": [113, 380, 381, 388, 389], "close": [113, 119, 353, 381, 387, 389, 392], "mixedtimezoneserror": 113, "inform": [113, 201, 202, 383, 385, 387, 388, 391], "entir": [114, 383, 385, 387], "numpi": [114, 333, 344, 345, 346, 347, 348, 349, 350, 384, 386, 387, 389], "datetime64": [114, 346, 347, 383, 385, 386, 387, 389], "belong": [114, 119, 253, 353, 381, 386, 387, 388, 389, 392], "tseri": [114, 352], "offset": [114, 352, 389], "dateoffset": [114, 352], "alia": [114, 352], "d": [114, 352, 386], "daili": [114, 352], "frequenc": [114, 352], "alias": [114, 352], "5d": [114, 352], "repres": [117, 118, 119, 120, 192, 329, 333, 352, 353, 379, 380, 381, 384, 385, 386, 389, 391], "vector": [118, 250], "point": [118, 178, 192, 295, 386, 387, 388, 389], "line": [118, 388, 389, 392], "polygon": [118, 389], "union": [118, 385, 389], "linestr": 118, "serializ": [118, 119, 120, 379, 380, 381], "parcel": [118, 389], "b": [119, 333, 353, 381, 386, 389, 392], "numer": [119, 120, 329, 383, 385, 387, 389], "fall": [119, 287, 381, 383, 387, 388], "insid": [119, 186, 201, 202, 287, 381, 383, 385, 386, 388, 393], "By": [119, 353, 381, 383, 386, 389, 392, 393], "definit": [119, 353, 377, 381, 384, 385, 388], "21": [119, 379, 383, 384, 385, 386, 389], "24": [119, 379, 383, 384, 385, 386, 389], "charact": [120, 181, 199, 343, 386, 387, 392], "interest": [120, 296, 389, 396], "high": [120, 383, 389], "appear": [121, 383, 385, 386, 388, 389, 391], "rule": [122, 123, 124, 125, 126, 127, 384, 385, 387, 388, 389, 392], "them": [122, 125, 168, 224, 235, 324, 351, 383, 384, 385, 386, 387, 388, 389, 392, 393], "nest": [122, 125, 383, 385, 387, 388], "structur": [122, 125, 167, 387, 388, 392, 394], "formal": [122, 125, 383, 385, 387, 388], "unknownconcepterror": [123, 126], "eval_obj": [124, 127], "logic": [124, 127, 385, 392], "chain": [124, 125, 127, 257, 385, 386, 387, 388, 389], "quantifi": [124, 127, 385, 387], "between": [124, 127, 153, 183, 301, 329, 333, 344, 346, 372, 385, 386, 389], "formul": [125, 385, 386, 387, 388, 389], "absolute_": 128, "add_": 129, "test": [130, 131, 132, 139, 140, 141, 144, 145, 146, 147, 148, 149, 150, 154, 155, 156, 157, 158, 278, 279, 280, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 302, 303, 304, 305, 306, 315, 316, 326, 345, 358, 359, 369, 389, 392, 393], "come": [130, 132, 278, 280, 387, 389, 392], "after_": 130, "and_": [131, 386], "before_": 132, "ceiling_": 133, "angl": [134, 135, 136, 160, 161, 164, 165, 166, 282, 283, 284, 308, 309, 312, 313, 314, 389], "radian": [134, 135, 136, 160, 161, 164, 165, 166, 282, 283, 284, 308, 309, 312, 313, 314, 389], "cosecant_": 134, "cosine_": 135, "cotangent_": 136, "root": [137, 162, 285, 310, 389], "cube_root_": 137, "divide_": 138, "during_": 139, "equal_": 140, "exclusive_or_": 141, "exponential_": [142, 300], "floor_": 143, "greater_": 144, "greater_equal_": 145, "in_": 146, "intersects_": 147, "is_missing_": 148, "less_": 149, "less": [150, 186, 297, 298, 334, 384, 388, 389, 392], "less_equal_": 150, "multiply_": 151, "natur": [152, 300, 383, 389, 391], "logarithm": [152, 300, 389], "natural_logarithm_": [152, 290], "normalized_difference_": 153, "not_": 154, "not_equal_": 155, "not_in_": 156, "not_missing_": 157, "or_": 158, "yth": [159, 307], "power_": 159, "secant_": 160, "sine_": 161, "square_root_": 162, "subtract_": 163, "tangent_": 164, "degre": [165, 166, 313, 314, 383, 385, 386, 387, 389], "to_degrees_": 165, "to_radians_": 166, "xarray_obj": 167, "intern": [167, 203, 270, 352, 385, 387, 388, 389, 396], "model": [167, 220, 355, 383, 385, 386, 387, 389], "accessor": [167, 220, 351, 355, 386], "recommend": [167, 386], "develop": [167, 383, 386, 394, 396], "practic": [167, 296, 383, 385, 386, 387, 389], "prefix": [167, 220, 355, 386], "content": [167, 190, 193], "aling": 168, "done": [168, 388, 389, 392, 395], "sever": [168, 296, 383, 386, 387, 388, 389, 393, 395], "wai": [168, 385, 386, 387, 388, 389, 391, 395], "simpli": [168, 385, 386, 389], "re": [168, 351, 384, 387, 388, 389], "match": [168, 389], "duplic": [168, 389], "alignmenterror": 168, "callabl": [169, 174, 182, 186, 225, 226, 227, 237, 238, 386], "pipe": [169, 386], "unless": [170, 389, 394], "state": [170, 385, 387, 389], "everi": [170, 385, 388], "latter": [170, 174, 277, 278, 279, 280, 286, 287, 288, 289, 292, 293, 295, 297, 298, 299, 301, 303, 306, 307, 311, 386, 387, 389], "invalidvaluetypeerror": [170, 172, 176, 177, 193, 206, 207, 214, 336, 386], "delini": 172, "toomanydimensionserror": [172, 193], "besid": [172, 383, 385, 386], "missingdimensionerror": [172, 179, 207], "neither": 172, "drop": [173, 177, 389], "auxiliari": 173, "storag": [173, 383], "unknowndimensionerror": [175, 176, 179, 182, 185, 186, 194], "unknowncomponenterror": 175, "extrapol": [176, 389], "version": [176, 193, 269, 386, 389, 391, 392, 394], "neighbour": [176, 389], "bicub": [176, 389], "interpolate_na": 176, "funtion": 176, "rioxarrai": [176, 184], "raster_arrai": 176, "rasterarrai": 176, "support": [176, 193, 224, 237, 238, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 346, 383, 385, 386, 387, 388, 389, 394], "kept": [177, 389], "otherwis": [177, 389, 391], "geoseri": 178, "labels_as_nam": 179, "zero": [179, 385, 389], "mixeddimensionserror": 179, "don": [179, 385, 386, 387, 389, 392], "t": [179, 385, 386, 387, 389, 392], "sting": 181, "dim": [182, 186, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 386], "make": [183, 344, 384, 385, 386, 387, 388, 389, 391, 392, 393], "sure": [183, 392], "subsequ": [183, 386, 389], "target": [184, 196, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 383], "xrasterbas": 184, "fill": [186, 219, 248, 296, 385, 386, 387, 388], "minimum": [186, 323, 324, 329, 366, 372, 389], "exclud": [186, 385], "__all__": 188, "write": [190, 193, 385, 388, 394], "csv": [190, 386], "disk": [190, 193, 386], "written": [190, 193, 385, 387, 391, 392], "convert": [191, 192, 196, 270, 313, 314, 346, 347, 349, 350, 386, 389], "datafram": [191, 386], "frame": [191, 192], "output_cr": [192, 193], "geospati": 192, "centroid": 192, "cloud_optim": 193, "compress": [193, 387], "cog": 193, "gdal": [193, 387, 389], "driver": 193, "lzw": 193, "export": [193, 385], "unstack": [193, 197, 198, 223, 386], "current": [193, 269, 344, 386, 387, 389], "rasterio": 193, "convert_datetime64": 196, "back": [197, 389], "inplac": [201, 202], "spatial_ref": [201, 383, 385, 386, 387, 389], "guarante": [201, 202], "dure": [201, 202, 235, 269, 270, 287, 334, 335, 352, 384, 386, 388, 389, 391], "kind": [201, 202, 333, 344, 386, 388, 391, 394, 396], "mere": [201, 202, 220, 355, 386], "modifi": [201, 202], "temporal_ref": [202, 383, 385, 386, 387, 389], "list_obj": 203, "vtype": 207, "reserveddimensionerror": 207, "ensur": [220, 355, 383, 386], "compat": [220, 355, 386], "behaviour": [220, 355, 386, 387, 389, 392], "custom_oper": [224, 386], "custom_reduc": [224, 386], "worker": [224, 335, 386], "take": [224, 270, 335, 385, 386, 388, 389, 391, 392, 393], "care": [224, 270, 335, 383, 385, 386, 389], "queryrecip": [224, 270, 271, 384, 385, 386, 387, 388, 389], "overwritten": 224, "necessari": 224, "throw": [224, 386, 389], "error": [224, 386, 389, 392], "identifi": [228, 385], "invalidbuildingblockerror": 228, "found": [228, 237, 238, 383, 394], "param": [229, 387], "activ": [229, 253, 378, 384, 385, 386, 392, 395], "updat": [235, 269, 342, 386, 389, 392], "unknownoperatorerror": [237, 386], "unknownreducererror": [238, 386], "apply_custom": [239, 386], "delin": 245, "unknownlabelerror": 253, "merg": [255, 385, 388, 392], "processing_chain": [257, 387], "unknownresulterror": 259, "shift": 262, "smooth": 263, "time_interv": [265, 278, 280, 287, 389], "scan": [269, 386], "influenc": [269, 386], "tweak": [269, 386], "behav": [269, 386], "dispers": [269, 386], "sub": [269, 383, 385, 386], "area": [269, 296, 383, 385, 386, 387, 388, 389], "might": [269, 334, 335, 386, 387, 388, 389, 392], "load": [269, 383, 384, 385, 386, 387, 388, 389], "full": [269, 383, 384, 386, 389], "afterward": [269, 385, 386], "yet": [269, 270, 386], "further": [270, 385, 386, 387], "raster": [270, 386, 387], "util": [270, 383, 385, 386], "ideal": [270, 386], "interrel": [270, 386], "actual": [270, 383, 386, 389, 392], "Such": [270, 383, 385, 386, 387, 388, 389], "absolut": [276, 334, 389], "later": [278, 387], "expect": [278, 280, 287, 295, 383, 386, 387, 389, 392], "befor": [280, 334, 352, 383, 386, 388, 389, 392], "earlier": 280, "ceil": [281, 334, 389], "smallest": [281, 324, 389], "cosec": [282, 334, 389], "cosin": [283, 334, 389], "cotang": [284, 334, 389], "divid": [286, 334, 389], "That": [289, 306, 316, 318, 319, 325, 326, 327, 385, 386, 387, 388, 389], "null": [289, 296, 306, 316, 318, 319, 325, 326, 327, 345, 349, 350], "matter": [289, 306], "exponenti": [290, 334, 389], "power": [290, 307, 334, 389], "euler": [290, 300], "approxim": [290, 300, 385, 388], "718": [290, 300], "invers": [290, 300], "floor": [291, 334, 386, 389], "largest": [291, 389], "remain": [294, 304, 389], "among": [294, 304, 389], "reason": [296, 386, 391], "span": 296, "orbit": 296, "made": [296, 384, 385, 387, 389], "wa": [296, 384, 385, 386, 387, 389, 391, 392], "mark": [296, 389, 392], "calcul": [301, 321, 327, 328, 330, 331, 332, 364, 365, 370, 371, 373, 374, 375, 384, 386, 389], "remot": 301, "sens": [301, 384, 385], "ndvi": 301, "ndwi": 301, "secant": [308, 334, 389], "sine": [309, 334, 389], "subtract": [311, 334, 389], "tangent": [312, 334, 389], "last": [319, 334, 389], "maximum": [320, 329, 363, 372], "median": [322, 334, 384, 389], "modal": 324, "percentag": [327, 334, 384, 385, 389], "much": [327, 387, 388], "percent": [327, 384], "product": [328, 334, 383, 389], "recent": 329, "nanosecond": 329, "deviat": [330, 373, 389], "sum": [331, 334, 386, 388, 389], "varianc": [332, 334, 389], "m": [333, 386, 392], "o": [333, 386], "u": [333, 385, 386, 388, 389, 391, 392], "f": [333, 384, 386, 387, 392, 395], "veri": [333, 344, 383, 385, 386, 387, 392], "technic": [333, 344, 386, 396], "orient": [333, 344, 386, 391, 396], "dtype": [333, 344, 383, 385, 386, 387, 389], "etc": [333, 344, 386, 389], "gener": [333, 344, 383, 386, 388, 394, 396], "__preserve_labels__": [334, 386], "assign_at": 334, "cube_root": [334, 389], "exclusive_or": [334, 389], "greater_equ": [334, 389], "is_miss": [334, 389], "less_equ": [334, 389], "n": [334, 383, 385, 386, 387, 389], "natural_logarithm": [334, 389], "normalized_differ": [334, 389], "not_equ": [334, 385, 389], "not_in": [334, 384, 389], "not_miss": [334, 389], "square_root": [334, 389], "standard_devi": [334, 389], "to_degre": [334, 389], "to_radian": [334, 389], "chang": [334, 335, 386, 389, 392], "comparison": [334, 335, 386, 389], "accept": [334, 383, 385, 386, 389, 391, 392], "extra": [334, 386], "ye": [335, 386], "determin": [335, 336, 344, 386, 389, 391], "type_promotion_manu": [335, 386], "search": [335, 394], "any_": [336, 359], "sum_": [336, 374], "quantit": [336, 344, 386], "valueerror": 336, "mainli": [343, 383, 385, 389, 396], "pair": [343, 383, 385, 389], "five": [344, 388], "main": [344, 386, 388, 389, 392], "qualit": [344, 386], "could": [344, 386, 388, 389, 391], "whether": 345, "perform": [345, 383, 386, 387, 389], "tz_from": 346, "tz_to": 346, "nativ": [346, 385, 387, 388, 389], "anymor": [346, 389], "therefor": [346, 383, 386, 387], "tz_convert": 346, "unix": [347, 384], "sinc": [347, 383, 385, 386, 387, 388, 389], "1970": 347, "appropri": [348, 391], "nan": [348, 384, 386, 389], "nat": 348, "infinit": 349, "treat": [351, 352, 386, 387, 389], "value_typ": [351, 383, 385, 386, 387, 389], "value_label": [351, 383, 386, 389], "organ": [351, 383, 387], "spatial_ext": [352, 386], "temporal_ext": [352, 386], "temporal_resolut": 352, "templat": [352, 386, 392], "thu": [352, 383, 385, 386, 389], "all_": 358, "count_": [360, 386], "first_": 361, "last_": 362, "max_": 363, "mean_": 364, "median_": 365, "min_": 366, "mode_": 367, "n_": 368, "none_": 369, "percentage_": 370, "product_": 371, "range_": 372, "standard_deviation_": 373, "variance_": 375, "s2_band01": 376, "water_count": [377, 384, 386, 388], "finit": [379, 389], "22": [379, 383, 384, 385, 386, 387, 389], "23": [379, 383, 384, 385, 386, 389], "elev": 382, "explor": [383, 384, 385, 386, 387, 388, 389, 393], "notebook": [383, 384, 385, 386, 387, 388, 389, 393], "interact": [383, 384, 385, 386, 387, 388, 389, 391, 393], "possibli": 383, "digit": 383, "surfac": [383, 385, 388], "imag": [383, 385, 387, 388], "domain": [383, 385, 387, 388], "framework": [383, 385, 394], "manag": 383, "softwar": [383, 387, 394], "expert": [383, 385, 387, 388], "semantiqu": [383, 384, 386, 387, 388, 389, 392, 394, 395, 396], "packag": [383, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395], "mani": [383, 384, 385, 386, 387, 388, 389, 392], "approach": [383, 385], "we": [383, 384, 385, 386, 387, 388, 389, 391, 392, 394], "flexibl": [383, 385, 386], "own": [383, 385, 386, 387, 389, 393], "seen": [383, 385, 386], "blueprint": [383, 385], "note": [383, 385, 386, 387, 389], "never": [383, 386, 387, 389, 392], "access": [383, 385, 393, 394], "look": [383, 384, 385, 386, 387, 388], "interoper": 383, "repositori": [383, 392, 395], "descript": [383, 385, 388, 389], "spectral": 383, "band": [383, 384], "uniqu": 383, "about": [383, 385, 386, 387, 388, 391, 392], "python": [383, 385, 387, 389, 392, 394], "blue": [383, 384, 387], "reflect": [383, 384, 386, 388], "hasattr": [383, 385], "expos": [383, 385], "abl": [383, 385, 386, 389, 392], "exact": [383, 385, 389], "api": [383, 385, 386], "independ": [383, 385, 387, 388, 389], "5": [383, 384, 385, 386, 387, 388, 389], "deploi": 383, "open": [383, 384, 385, 386, 387, 388, 389, 391, 392, 394], "terminologi": [383, 387, 388], "measur": 383, "below": [383, 385, 386, 388, 389, 392, 393], "precis": 383, "id": 383, "additionali": 383, "our": [383, 384, 385, 387, 388, 389], "environ": [383, 391, 393, 395], "show": [383, 384, 385, 386, 387, 388, 389, 392], "snippet": [383, 388, 389], "odc_obj": 383, "somedir": 383, "r": [383, 384, 385, 386, 387, 388, 389], "small": [383, 387, 388, 389], "noth": [383, 387, 388, 389], "recogn": 383, "Be": 383, "awar": [383, 389], "memori": 383, "filepath": 383, "filenam": [383, 386], "now": [383, 385, 386, 387, 388], "demo": [383, 385, 393], "6": [383, 384, 385, 386, 387, 388, 389], "7": [383, 384, 385, 386, 387, 388, 389], "isinst": [383, 385], "request": [383, 386, 391], "8": [383, 384, 385, 386, 387, 388, 389], "9": [383, 384, 385, 386, 387, 388, 389], "10": [383, 384, 385, 386, 387, 388, 389, 392], "colortyp": [383, 385, 386, 389], "11": [383, 384, 385, 386, 387, 388, 389], "lt": [383, 385, 386, 387, 389], "x27": [383, 385, 386, 387, 389], "563": [383, 385, 387], "576": [383, 385, 387], "gt": [383, 385, 386, 387, 389], "29": [383, 385, 386, 389], "27": [383, 384, 385, 386, 389], "float64": [383, 385, 386, 387, 389], "53e": [383, 385, 387], "06": [383, 385, 386, 387, 389], "536e": [383, 385, 387], "697e": [383, 385, 387], "691e": [383, 385, 387], "int64": [383, 385, 386, 387, 389], "15t10": [383, 385, 386, 387, 389], "17": [383, 384, 385, 386, 387, 389], "33": [383, 384, 385, 386, 387, 389], "408715": [383, 384, 385, 386, 387, 389], "spatial_feat": [383, 385, 386, 387, 389], "area_or_point": [383, 385, 386, 389], "scale_factor": [383, 385, 386, 389], "add_offset": [383, 385, 386, 389], "_fillvalu": [383, 385, 386, 389], "7976931348623157e": [383, 385, 386, 389], "308": [383, 385, 386, 389], "svhnir": [383, 386, 389], "svlnir": [383, 386, 389], "avhnir": [383, 386, 389], "avlnir": [383, 386, 389], "3y": [383, 385, 386, 389], "563x": [383, 385, 387], "57629": 383, "0arrai": [383, 385, 386, 387, 389], "float644": [383, 385, 386, 387, 389], "06axi": [383, 385, 386, 387, 389], "xlong_nam": [383, 385, 386, 387, 389], "projectionstandard_nam": [383, 385, 386, 387, 389], "projection_x_coordinateunit": [383, 385, 386, 387, 389], "metreresolut": [383, 385, 386, 387, 389], "10value_typ": [383, 385, 387], "continuousarrai": [383, 385, 386, 387, 389], "4530115": [383, 385, 387], "4530125": [383, 385, 387], "4530135": [383, 385, 387], "4535845": [383, 385, 387], "4535855": [383, 385, 387], "4535865": [383, 385, 387], "float642": [383, 385, 386, 387, 389], "ylong_nam": [383, 385, 386, 387, 389], "projection_y_coordinateunit": [383, 385, 386, 387, 389], "2696625": [383, 385, 387], "2696615": [383, 385, 387], "2696605": [383, 385, 387], "2691025": [383, 385, 387], "2691015": [383, 385, 387], "2691005": [383, 385, 387], "int640crs_wkt": [383, 385, 386, 387, 389], "projc": [383, 385, 386, 387, 389], "quot": [383, 385, 386, 387, 389], "etrs89": [383, 385, 386, 387, 389], "extend": [383, 385, 386, 387, 389, 392, 393], "laea": [383, 385, 386, 387, 389], "europ": [383, 385, 386, 387, 389], "geogc": [383, 385, 386, 387, 389], "datum": [383, 385, 386, 387, 389], "european_terrestrial_reference_system_1989": [383, 385, 386, 387, 389], "spheroid": [383, 385, 386, 387, 389], "gr": [383, 385, 386, 387, 389], "1980": [383, 385, 386, 387, 389], "6378137": [383, 385, 386, 387, 389], "298": [383, 385, 386, 387, 389], "257222101": [383, 385, 386, 387, 389], "author": [383, 385, 386, 387, 389], "7019": [383, 385, 386, 387, 389], "6258": [383, 385, 386, 387, 389], "primem": [383, 385, 386, 387, 389], "greenwich": [383, 385, 386, 387, 389], "8901": [383, 385, 386, 387, 389], "0174532925199433": [383, 385, 386, 387, 389], "9122": [383, 385, 386, 387, 389], "4258": [383, 385, 386, 387, 389], "project": [383, 385, 386, 387, 389, 392, 394], "lambert_azimuthal_equal_area": [383, 385, 386, 387, 389], "latitude_of_cent": [383, 385, 386, 387, 389], "52": [383, 385, 386, 387, 389], "longitude_of_cent": [383, 385, 386, 387, 389], "false_east": [383, 385, 386, 387, 389], "4321000": [383, 385, 386, 387, 389], "false_north": [383, 385, 386, 387, 389], "3210000": [383, 385, 386, 387, 389], "metr": [383, 385, 386, 387, 389], "9001": [383, 385, 386, 387, 389], "north": [383, 385, 386, 387, 389], "east": [383, 385, 386, 387, 389], "semi_major_axi": [383, 385, 386, 387, 389], "0semi_minor_axi": [383, 385, 386, 387, 389], "6356752": [383, 385, 386, 387, 389], "314140356inverse_flatten": [383, 385, 386, 387, 389], "257222101reference_ellipsoid_nam": [383, 385, 386, 387, 389], "1980longitude_of_prime_meridian": [383, 385, 386, 387, 389], "0prime_meridian_nam": [383, 385, 386, 387, 389], "greenwichgeographic_crs_nam": [383, 385, 386, 387, 389], "etrs89horizontal_datum_nam": [383, 385, 386, 387, 389], "european": [383, 385, 386, 387, 389], "terrestri": [383, 385, 386, 387, 389], "1989projected_crs_nam": [383, 385, 386, 387, 389], "europegrid_mapping_nam": [383, 385, 386, 387, 389], "lambert_azimuthal_equal_arealatitude_of_projection_origin": [383, 385, 386, 387, 389], "0longitude_of_projection_origin": [383, 385, 386, 387, 389], "0false_east": [383, 385, 386, 387, 389], "0false_north": [383, 385, 386, 387, 389], "0spatial_ref": [383, 385, 386, 387, 389], "geotransform": [383, 385, 386, 387, 389], "4530110": [383, 385, 387], "2696630": [383, 385, 387], "datetimearrai": [383, 385, 386, 387, 389], "408715000": [383, 385, 386, 387, 389], "09": [383, 384, 385, 386, 387, 389], "05t10": [383, 385, 386, 387, 389], "43": [383, 384, 385, 386, 387, 389], "167942000": [383, 385, 386, 387, 389], "19t10": [383, 385, 386, 387, 389], "34": [383, 384, 385, 386, 387, 388, 389], "610661000": [383, 385, 386, 387, 389], "int640zon": [383, 385, 386, 387, 389], "utcarrai": [383, 385, 386, 387, 389], "float641": [383, 385, 386, 387, 389], "0value_typ": [383, 385, 386, 387, 389], "nominalvalue_label": [383, 385, 386, 387, 389], "feature_1": [383, 385, 386, 387, 389], "xpandasindexpandasindex": [383, 385, 386, 387, 389], "4530145": [383, 385, 387], "4530155": [383, 385, 387], "4530165": [383, 385, 387], "4530175": [383, 385, 387], "4530185": [383, 385, 387], "4530195": [383, 385, 387], "4530205": [383, 385, 387], "4535775": [383, 385, 387], "4535785": [383, 385, 387], "4535795": [383, 385, 387], "4535805": [383, 385, 387], "4535815": [383, 385, 387], "4535825": [383, 385, 387], "4535835": [383, 385, 387], "length": [383, 385, 387], "ypandasindexpandasindex": [383, 385, 386, 387, 389], "2696595": [383, 385, 387], "2696585": [383, 385, 387], "2696575": [383, 385, 387], "2696565": [383, 385, 387], "2696555": [383, 385, 387], "2696545": [383, 385, 387], "2696535": [383, 385, 387], "2691095": [383, 385, 387], "2691085": [383, 385, 387], "2691075": [383, 385, 387], "2691065": [383, 385, 387], "2691055": [383, 385, 387], "2691045": [383, 385, 387], "2691035": [383, 385, 387], "timepandasindexpandasindex": [383, 385, 386, 387, 389], "datetimeindex": [383, 385, 386, 387, 389], "15": [383, 384, 385, 386, 387, 388, 389], "05": [383, 384, 385, 386, 387, 389], "167942": [383, 384, 385, 386, 387, 389], "19": [383, 384, 385, 386, 387, 389], "610661": [383, 384, 385, 386, 387, 389], "freq": [383, 385, 386, 387, 389], "areascale_factor": [383, 385, 386, 389], "0add_offset": [383, 385, 386, 389], "0_fillvalu": [383, 385, 386, 389], "308value_typ": [383, 385, 386, 389], "ordinalvalue_label": [383, 389], "wv": [383, 386, 389], "shv": [383, 386, 389], "shrbrhnir": [383, 386, 389], "shrbrlnir": [383, 386, 389], "hrbcr": [383, 386, 389], "wr": [383, 386, 389], "pb": [383, 386, 389], "gh": [383, 386, 389], "13": [383, 384, 385, 386, 387, 388, 389], "vbbb": [383, 386, 389], "14": [383, 384, 385, 386, 387, 388, 389], "bbb": [383, 386, 389], "sbb": [383, 386, 389], "16": [383, 384, 385, 386, 387, 389, 390], "abb": [383, 386, 389], "dbb": [383, 386, 389], "18": [383, 384, 385, 386, 387, 389], "wbborshb": [383, 386, 389], "nirpbb": [383, 386, 389], "20": [383, 384, 385, 386, 389], "ba": [383, 386, 389], "dpwash": [383, 386, 389], "slwash": [383, 386, 389], "twash": [383, 386, 389], "saslwa": [383, 386, 389], "tnclv": [383, 386, 389], "28": [383, 385, 386, 389], "tnclwa_bb": [383, 386, 389], "sn": [383, 386, 389], "30": [383, 385, 386, 387, 389], "shsn": [383, 386, 389], "sh": [383, 386, 389], "32": [383, 386, 389], "flame": [383, 386, 389], "strong": 383, "nir": [383, 386], "darkgreen": 383, "low": 383, "forestgreen": 383, "limegreen": 383, "mediumseagreen": 383, "weak": 383, "springgreen": 383, "shadow": [383, 385], "palegreen": 383, "shrub": 383, "rangeland": 383, "darkgoldenrod": 383, "goldenrod": 383, "herbac": 383, "gold": 383, "khaki": 383, "pit": 383, "bog": 383, "oliv": 383, "greenhous": 383, "yellowgreen": 383, "barren": 383, "land": [383, 387, 388], "up": [383, 386, 388, 389], "darkr": 383, "firebrick": 383, "red": [383, 386], "tomato": 383, "dark": 383, "salmon": 383, "lightsalmon": 383, "Near": 383, "infrar": 383, "peak": 383, "coral": 383, "burn": 383, "yellow": 383, "deep": [383, 385, 386], "dodgerblu": 383, "shallow": [383, 385], "deepskyblu": [383, 385], "turbid": [383, 385], "lightskyblu": 383, "salti": [383, 385], "lightblu": 383, "lightgrei": [383, 385], "smoke": 383, "plume": 383, "dimgrei": 383, "thin": 383, "aquamarin": 383, "paleturquois": 383, "snow": [383, 385, 389], "mistyros": 383, "slategrei": 383, "plum": 383, "unknown": 383, "black": 383, "legend": [383, 385, 387], "tick": [383, 384, 385, 387], "plot": [383, 384, 385, 387], "col": [383, 385], "cbar_kwarg": [383, 384, 385, 387], "facetgrid": [383, 385], "0x7fece228ca50": 383, "xr": [384, 386, 387, 389], "matplotlib": [384, 386, 387], "pyplot": [384, 386, 387], "plt": [384, 386, 387], "np": [384, 386, 387, 389], "copi": [384, 386, 389, 394], "context": [384, 386, 389, 396], "were": [384, 387, 391], "water_count_tim": 384, "vegetation_count_tim": 384, "water_count_spac": [384, 386], "vegetation_count_spac": 384, "ax1": [384, 387], "ax2": [384, 387], "subplot": [384, 387], "figsiz": [384, 387], "nanmin": [384, 387], "nanmax": [384, 387], "cm": [384, 387], "cmap": [384, 387], "set_titl": [384, 387], "vegetation_count": [384, 388], "green": [384, 387], "tight_layout": [384, 387], "draw": [384, 387, 389], "water_count_df": 384, "to_datafram": [384, 386], "vegetation_count_df": 384, "join": 384, "6045": 384, "44804": [384, 387], "243234": 384, "78607": [384, 387], "89174": 384, "red_band": 384, "s2_band04": [384, 386], "green_band": 384, "s2_band03": 384, "blue_band": 384, "s2_band02": [384, 388], "imshow": 384, "rgb": 384, "robust": 384, "land_cov": [384, 389], "builtup": [384, 385], "0066cc": 384, "00cc00": 384, "cc0000": 384, "cloud_cov": 384, "snow_cov": 384, "cloud_free_imag": 384, "astyp": 384, "overlap": [384, 386, 387], "to_cr": 384, "4326": 384, "trust": [384, 387, 389], "new_context": [384, 386, 389], "deepcopi": [384, 386, 389], "avg_water_count_per_parcel": 384, "df": 384, "northern": [384, 389], "939145": 384, "southern": [384, 389], "175439": 384, "water_count_per_season": 384, "autumn": 384, "sel": 384, "winter": 384, "conceptu": [384, 388], "even": [384, 386, 387, 392], "easili": [384, 385, 387], "achiev": 384, "let": [384, 386, 387, 388, 389], "imaginari": 384, "wet": 384, "dry": 384, "newmap": 384, "wet_season": 384, "period": [384, 391], "dry_season": 384, "newcontext": 384, "vegetation_count_per_season": 384, "25": [384, 385, 386, 389], "26": [384, 385, 386, 389], "date": [384, 387, 389], "assign_tim": [384, 389], "isfinit": 384, "ontologi": [385, 386, 387, 388, 394], "As": [385, 387, 389, 396], "scratch": 385, "infer": [385, 387], "probabl": [385, 387], "emphas": 385, "accur": 385, "exploit": 385, "analyz": 385, "pattern": [385, 391], "around": [385, 387, 391, 392], "larg": [385, 387], "decid": 385, "knowledg": [385, 387], "driven": 385, "hybrid": 385, "interpret": 385, "predict": 385, "machin": 385, "learn": [385, 391, 392], "classifi": 385, "depth": [385, 387, 388], "fix": [385, 389, 392], "directli": [385, 386, 387, 388, 389, 392, 395], "lake": [385, 388], "blueish": [385, 388], "textur": 385, "flat": [385, 388], "whole": [385, 389], "avail": [385, 389, 391], "complex": [385, 387], "heavili": 385, "simplifi": [385, 386, 388], "idea": [385, 386, 392, 394], "work": [385, 389, 392], "iter": [385, 386], "focu": 385, "sole": [385, 388], "Its": [385, 386], "still": [385, 387, 393], "relationship": 385, "meet": 385, "said": [385, 389], "enrich": 385, "abov": [385, 387, 388, 389], "furthermor": [385, 388], "topographi": [385, 388], "slope": 385, "auto": [385, 388, 396], "complet": [385, 387, 388, 389], "friendli": [385, 389, 392], "river": 385, "sai": 385, "twice": [385, 388, 389], "intuit": [385, 387, 389], "Or": 385, "basic": [385, 387, 388, 389], "plain": 385, "again": [385, 386, 387, 388, 389], "oversimplifi": 385, "natural_area": 385, "part": [385, 387, 389], "80": [385, 389], "ruleset": 385, "moment": [385, 387, 395], "sound": [385, 392], "slighlti": 385, "overwhelm": 385, "season": [385, 389], "harvest_season": 385, "timespan": 385, "vegetation_during_harvest": 385, "go": [385, 389], "simpler": 385, "resourc": [385, 393], "atmospher": [385, 388], "w": [385, 386, 387, 389], "dump": [385, 387, 388], "indent": [385, 387, 388, 392], "worri": [385, 386], "your": [385, 386, 389, 393], "binaryxarrai": [385, 386, 389], "5760": 385, "is_wat": 385, "0x7f5a66999090": 385, "task": [386, 387], "explain": [386, 388, 389], "1500": 386, "parser": 386, "workflow": [386, 392], "reproject": 386, "orgin": 386, "disconnect": [386, 389], "expand": 386, "due": 386, "696e": [386, 389], "695e": 386, "693e": 386, "692e": [386, 389], "531e": 386, "532e": [386, 389], "534e": 386, "535e": [386, 389], "long_nam": [386, 389], "2y": [386, 389], "4x": 386, "41": [386, 389], "31value_typ": 386, "01t00": 386, "00": 386, "000000000": 386, "31t00": 386, "metrevalue_typ": 386, "continuousresolut": 386, "1500arrai": 386, "2696250": 386, "2694750": 386, "2693250": 386, "2691750": 386, "4530750": 386, "4532250": 386, "4533750": 386, "4535250": 386, "4530000": 386, "2697000": 386, "indexlong_nam": 386, "index_fillvalu": 386, "nanvalue_typ": 386, "39": [386, 387, 389], "blue_map": [386, 387], "green_map": [386, 387], "blue_curv": [386, 387], "green_curv": [386, 387], "blue_stat": [386, 387], "green_stat": [386, 387], "reach": 386, "call_handl": 386, "handle_concept": 386, "handle_reduc": 386, "40": [386, 389], "1500value_typ": 386, "so": [386, 387, 388, 392], "xarray_object": 386, "convers": [386, 389], "wrangl": [386, 388], "And": [386, 387, 389], "preserve_label": 386, "thrown": 386, "detect": 386, "print": [386, 387, 388], "unsupport": 386, "attr": 386, "just": [386, 387, 388, 389, 391], "dtype_map": 386, "typepromot": 386, "next": [386, 388, 389], "section": [386, 389], "35": [386, 389], "36": [386, 389], "37": [386, 387, 389], "38": [386, 389], "why": [386, 388, 389, 391], "strict": 386, "out": [386, 389], "cours": [386, 388], "decreas": [386, 388], "No": [386, 391, 392, 393], "easi": [386, 388], "tell": [386, 392], "must": 386, "realli": [386, 392], "trivial": [386, 388, 389], "def": [386, 387], "make_tru": 386, "newobj": 386, "ones_lik": 386, "del": 386, "new_recip": 386, "val": 386, "ones": 386, "42": [386, 389], "unknownverberror": 386, "44": [386, 389], "45": [386, 389], "compar": [386, 389], "etcetera": [386, 388], "taken": [386, 389], "modul": [386, 389, 394], "plan": 386, "good": [386, 388], "apply_ufunc": 386, "shown": [386, 388], "forget": [386, 392], "receiv": 386, "bar": [386, 389, 392], "100": [386, 389], "modulu": 386, "46": [386, 389], "__preserve_label": 386, "lambda": 386, "mod": 386, "align_with": 386, "replac": 386, "47": [386, 389], "s2_band08": 386, "48": [386, 389], "49": [386, 389], "50": [386, 389, 392], "51": [386, 389], "434": 386, "530": 386, "553": 386, "856": 386, "499": 386, "725": 386, "291": 386, "378": 386, "427": 386, "2690": 386, "310": 386, "644": 386, "231": 386, "317": 386, "656": 386, "211": 386, "273": 386, "195": [386, 389], "255": 386, "245": 386, "61": [386, 389], "367": 386, "229": 386, "210": 386, "188": [386, 389], "288": 386, "77": [386, 389], "709": 386, "136": [386, 389], "172": [386, 389], "314": 386, "161": [386, 389], "737": 386, "101": [386, 389], "752": 386, "340": 386, "409": 386, "247": 386, "344": 386, "724": 386, "1085": 386, "64": [386, 389], "387": 386, "1549": 386, "556": 386, "369": 386, "aggreg": [386, 387, 389], "slice": [386, 389], "variabl": [386, 392], "sum_of_squar": 386, "53": [386, 389], "54": [386, 389], "55": [386, 389], "56": [386, 389], "57": [386, 389], "1983427e": 386, "08": 386, "3802670e": 386, "07": 386, "9970504e": 386, "offer": [386, 387, 389, 393], "58": [386, 389], "59": [386, 389], "to_geodatafram": 386, "000": 386, "to_csv": 386, "to_geotiff": 386, "debug": 386, "help": [386, 389, 392], "intermedi": 386, "60": [386, 389], "sy": 386, "logger": 386, "getlogg": 386, "setlevel": 386, "addhandl": 386, "filehandl": 386, "txt": 386, "real": [387, 388], "world": [387, 388], "stabl": 387, "event": [387, 388, 391], "desir": 387, "conveni": [387, 388], "commonli": [387, 388], "analyt": 387, "word": [387, 389], "increasingli": 387, "galleri": [387, 393], "shareabl": 387, "peopl": [387, 391], "constructr": 387, "term": [387, 388, 391], "distribut": [387, 394], "alongsid": 387, "opendatacub": 387, "primivit": 387, "intend": [387, 389], "paramat": 387, "odc": 387, "session": 387, "With": [387, 388], "multip": 387, "zell": 387, "am": 387, "salzbug": 387, "austria": 387, "geodf": 387, "iso8601": [387, 389], "31t14": [387, 389], "long": [387, 388, 389], "understand": [387, 389], "meter": 387, "geograph": 387, "readi": 387, "hoorai": 387, "quit": 387, "bit": 387, "patient": 387, "backbon": 387, "analysi": 387, "discretexarrai": [387, 389], "5761": 387, "48e": 387, "04": 387, "861e": 387, "04arrai": 387, "dimensionless": [387, 389], "123411": 387, "234e": 387, "05arrai": 387, "additon": 387, "themat": 387, "visual": 387, "lot": 387, "impress": 387, "make_plot": 387, "titl": 387, "rememb": [388, 389], "At": [388, 389, 395], "piec": [388, 389], "someth": [388, 389, 392], "hierarchi": 388, "lowest": 388, "ref": [388, 392], "forest": 388, "phenonemon": 388, "bodi": [388, 391], "place": 388, "fire": 388, "produc": [388, 389], "intens": 388, "radiat": 388, "artifact": 388, "jupyt": 388, "although": 388, "advanc": [388, 389, 391, 393, 396], "free": [388, 391, 392], "too": 388, "complic": [388, 393], "broken": 388, "summed_count": 388, "previous": 388, "introduc": 388, "slightli": 388, "constantli": 388, "lead": [388, 389, 391], "But": 388, "would": [388, 389], "longer": 388, "readabl": 388, "onc": [388, 389, 393], "came": 388, "improv": [388, 392], "speed": 388, "Of": 388, "talk": 388, "someon": [388, 392], "easier": [388, 389], "impli": [388, 389, 394], "feel": [388, 392], "singular": 388, "autocomplet": 389, "NOT": 389, "simplest": 389, "x_": 389, "usag": 389, "leq": 389, "geq": 389, "neq": 389, "trigonometr": 389, "sun": 389, "zenith": 389, "frac": 389, "co": 389, "sin": 389, "tan": 389, "not_wat": 389, "533e": 389, "694e": 389, "3x": 389, "1800value_typ": 389, "4531500": 389, "4533300": 389, "4535100": 389, "2695500": 389, "2693700": 389, "2691900": 389, "4530600": 389, "2696400": 389, "y_": 389, "subdivid": 389, "algebra": 389, "th": 389, "hold": 389, "doesn": 389, "membership": 389, "special": 389, "anywher": 389, "notin": 389, "329": 389, "live": 389, "design": 389, "deal": 389, "earliest": 389, "latest": 389, "earli": 389, "late": 389, "in_parcel": 389, "home": 389, "luuk": 389, "miniconda3": 389, "env": [389, 392, 395], "lib": 389, "python3": 389, "site": 389, "py": 389, "407": 389, "runtimewarn": 389, "encount": 389, "cast": [389, 391], "multiarrai": 389, "copyto": 389, "fill_valu": 389, "unsaf": 389, "necessarili": 389, "origin": [389, 392], "vice": 389, "versa": 389, "secondli": 389, "clear": 389, "yourself": 389, "equival": 389, "datetimexarrai": 389, "32019": 389, "610661arrai": 389, "standard_nam": 389, "projection_x_coordin": 389, "continuousxarrai": 389, "06arrai": 389, "coordsxarrai": 389, "hour": 389, "2020arrai": 389, "especi": [389, 392], "feat": [389, 392], "unchang": 389, "62": 389, "not_cloud": 389, "63": 389, "65": 389, "66": 389, "67": 389, "68": 389, "69": 389, "70": 389, "71": 389, "72": 389, "73": 389, "74": 389, "75": 389, "3nan": 389, "handi": 389, "filter_tim": 389, "explicitli": 389, "filter_spac": 389, "76": 389, "78": 389, "79": 389, "true_veget": 389, "81": 389, "82": 389, "83": 389, "84": 389, "85": 389, "99": 389, "86": 389, "87": 389, "88": 389, "89": 389, "90": 389, "91": 389, "92": 389, "93": 389, "94": 389, "95": 389, "96": 389, "97": 389, "98": 389, "312": 389, "assign_spac": 389, "sophist": 389, "102": 389, "103": 389, "999": 389, "104": 389, "105": 389, "106": 389, "eq": 389, "107": 389, "108": 389, "109": 389, "110": 389, "111": 389, "112": 389, "113": 389, "stat": 389, "114": 389, "115": 389, "lag": 389, "past": 389, "futur": 389, "west": 389, "south": 389, "corner": 389, "preceed": 389, "succeed": 389, "116": 389, "117": 389, "118": 389, "119": 389, "120": 389, "neighbourhood": 389, "enough": 389, "effect": 389, "toward": [389, 391], "surround": 389, "121": 389, "122": 389, "time_smooth": 389, "space_smooth": 389, "123": 389, "124": 389, "125": 389, "126": 389, "nanarrai": 389, "treatment": 389, "127": 389, "128": 389, "129": 389, "130": 389, "131": 389, "2nan": 389, "132": 389, "time_trim": 389, "133": 389, "134": 389, "criterion": 389, "135": 389, "137": 389, "138": 389, "139": 389, "ordinalxarrai": 389, "straight": 389, "polynomi": 389, "figur": 389, "140": 389, "141": 389, "142": 389, "143": 389, "144": 389, "145": 389, "146": 389, "147": 389, "148": 389, "149": 389, "nanxarrai": 389, "discrete_fillvalu": 389, "j": 389, "150": 389, "151": 389, "152": 389, "153": 389, "154": 389, "155": 389, "156": 389, "157": 389, "158": 389, "159": 389, "1y": 389, "167942value_typ": 389, "160": 389, "groupby_tim": 389, "groupby_spac": 389, "162": 389, "163": 389, "164": 389, "z": 389, "z_": 389, "165": 389, "166": 389, "multigroup": 389, "167": 389, "168": 389, "408715value_typ": 389, "169": 389, "170": 389, "610661value_typ": 389, "shorter": 389, "statement": 389, "171": 389, "pecular": 389, "summar": 389, "c_": 389, "rel": 389, "becom": 389, "gamma": 389, "delta": 389, "c": 389, "gamma_": 389, "delta_": 389, "epsilon": 389, "173": 389, "174": 389, "175": 389, "3time": 389, "conceptpandasindexpandasindex": 389, "176": 389, "177": 389, "178": 389, "179": 389, "primarili": 389, "third": 389, "180": 389, "181": 389, "182": 389, "183": 389, "184": 389, "185": 389, "any_concept": 389, "186": 389, "187": 389, "ident": [389, 391], "unrestrict": 389, "seper": 389, "189": 389, "avg_count": 389, "190": 389, "191": 389, "int642019": 389, "2020value_typ": 389, "yearpandasindexpandasindex": 389, "192": 389, "193": 389, "count_per_feat": 389, "194": 389, "196": 389, "2time": 389, "4532800": 389, "2695600": 389, "featpandasindexpandasindex": 389, "affect": [389, 391], "particularli": 389, "197": 389, "198": 389, "v": 389, "199": 389, "200": 389, "releas": [390, 392], "leader": 391, "particip": [391, 392], "commun": [391, 392], "harass": 391, "experi": 391, "everyon": [391, 392], "regardless": 391, "ag": 391, "visibl": 391, "invis": 391, "ethnic": 391, "sex": 391, "characterist": 391, "gender": 391, "educ": 391, "socio": 391, "econom": 391, "statu": 391, "nation": 391, "person": 391, "race": 391, "religion": 391, "sexual": 391, "act": 391, "contribut": 391, "welcom": [391, 392], "divers": 391, "inclus": 391, "healthi": 391, "behavior": [391, 392], "empathi": 391, "Being": 391, "opinion": 391, "viewpoint": 391, "gracefulli": 391, "feedback": [391, 392], "apolog": 391, "mistak": 391, "focus": 391, "best": [391, 392], "individu": 391, "overal": 391, "unaccept": [391, 392], "languag": [391, 394], "imageri": 391, "attent": 391, "troll": 391, "insult": 391, "derogatori": 391, "comment": [391, 392], "polit": 391, "attack": 391, "public": 391, "privat": 391, "publish": [391, 394], "physic": 391, "email": 391, "address": 391, "explicit": 391, "permiss": [391, 394], "inappropri": 391, "profession": 391, "clarifi": 391, "fair": 391, "deem": 391, "threaten": 391, "offens": 391, "harm": 391, "edit": 391, "reject": 391, "commit": 391, "wiki": 391, "issu": 391, "moder": 391, "decis": 391, "offici": 391, "mail": 391, "post": 391, "via": 391, "social": 391, "media": 391, "account": 391, "appoint": 391, "onlin": [391, 393], "offlin": 391, "abus": 391, "report": [391, 392], "luca": 391, "vanderm": 391, "sbg": 391, "ac": 391, "complaint": 391, "review": [391, 392], "investig": 391, "promptli": 391, "fairli": 391, "oblig": 391, "privaci": 391, "secur": 391, "incid": 391, "impact": 391, "consequ": 391, "violat": 391, "unprofession": 391, "unwelcom": 391, "clariti": 391, "explan": [391, 393], "apologi": 391, "unsolicit": 391, "avoid": 391, "extern": 391, "channel": 391, "seriou": 391, "sustain": 391, "sort": 391, "aggress": 391, "disparag": 391, "adapt": [391, 392], "http": [391, 392, 394, 395], "www": [391, 392, 394], "org": [391, 392, 394], "code_of_conduct": 391, "html": 391, "inspir": 391, "mozilla": 391, "ladder": 391, "answer": [391, 392], "question": [391, 392], "faq": 391, "thank": 392, "greatli": 392, "appreci": 392, "guidelin": 392, "mostli": 392, "judgment": 392, "propos": 392, "govern": [392, 394], "conduct": 392, "uphold": 392, "pleas": 392, "outlin": 392, "qualiti": 392, "bug": 392, "alreadi": 392, "broader": 392, "discusss": 392, "who": 392, "q": 392, "tag": 392, "cool": 392, "desper": 392, "beg": 392, "fork": 392, "enter": 392, "directori": 392, "git": [392, 395], "com": [392, 395], "zgi": [392, 395], "cd": [392, 395], "checkout": 392, "my_new_branch": 392, "conda": [392, 395], "disturb": 392, "yml": [392, 395], "googl": 392, "style": 392, "guid": 392, "messag": 392, "conventionalcommit": 392, "short": 392, "prefer": [392, 395], "tens": 392, "automat": 392, "artist": 392, "emoji": 392, "gift": 392, "wrench": 392, "program": 392, "art": 392, "refactor": 392, "renam": 392, "doc": 392, "book": 392, "log": 392, "test_tub": 392, "cicd": 392, "ci": 392, "robot": 392, "dep": 392, "coupl": 392, "prepar": 392, "bookmark": 392, "happi": 392, "chunk": 393, "suit": 393, "under": [393, 394], "render": 393, "static": 393, "binder": 393, "click": 393, "badg": 393, "instal": 393, "setup": 393, "web": 393, "browser": 393, "tini": 393, "few": 393, "minut": 393, "plu": 393, "behind": 394, "academ": 394, "paper": 394, "throughout": 394, "familiar": 394, "underli": 394, "austrian": 394, "research": 394, "agenc": 394, "ffg": 394, "programm": 394, "asap": 394, "sen2cub": 394, "semantix": 394, "sim": 394, "depart": 394, "geoinformat": 394, "z_gi": 394, "licens": 394, "apach": 394, "complianc": 394, "law": 394, "agre": 394, "AS": 394, "basi": 394, "warranti": 394, "OR": 394, "OF": 394, "page": 394, "pip": 395, "github": 395, "clone": 395, "concis": 396}, "objects": {"semantique": [[0, 0, 1, "", "ArrayProxy"], [20, 0, 1, "", "CollectionProxy"], [39, 0, 1, "", "QueryRecipe"], [41, 2, 1, "", "appearance"], [42, 2, 1, "", "artifacts"], [43, 2, 1, "", "atmosphere"], [44, 2, 1, "", "collection"], [61, 2, 1, "", "concept"], [84, 2, 1, "", "entity"], [85, 2, 1, "", "event"], [118, 2, 1, "", "geometry"], [119, 2, 1, "", "interval"], [120, 2, 1, "", "label"], [121, 2, 1, "", "layer"], [376, 2, 1, "", "reflectance"], [377, 2, 1, "", "result"], [378, 2, 1, "", "self"], [379, 2, 1, "", "set"], [380, 2, 1, "", "time_instant"], [381, 2, 1, "", "time_interval"], [382, 2, 1, "", "topography"]], "semantique.ArrayProxy": [[0, 1, 1, "", "__init__"], [1, 1, 1, "", "apply_custom"], [2, 1, 1, "", "assign"], [3, 1, 1, "", "assign_space"], [4, 1, 1, "", "assign_time"], [5, 1, 1, "", "delineate"], [6, 1, 1, "", "evaluate"], [7, 1, 1, "", "extract"], [8, 1, 1, "", "fill"], [9, 1, 1, "", "filter"], [10, 1, 1, "", "filter_space"], [11, 1, 1, "", "filter_time"], [12, 1, 1, "", "groupby"], [13, 1, 1, "", "groupby_space"], [14, 1, 1, "", "groupby_time"], [15, 1, 1, "", "name"], [16, 1, 1, "", "reduce"], [17, 1, 1, "", "shift"], [18, 1, 1, "", "smooth"], [19, 1, 1, "", "trim"]], "semantique.CollectionProxy": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "apply_custom"], [22, 1, 1, "", "assign"], [23, 1, 1, "", "assign_space"], [24, 1, 1, "", "assign_time"], [25, 1, 1, "", "compose"], [26, 1, 1, "", "concatenate"], [27, 1, 1, "", "delineate"], [28, 1, 1, "", "evaluate"], [29, 1, 1, "", "extract"], [30, 1, 1, "", "fill"], [31, 1, 1, "", "filter"], [32, 1, 1, "", "filter_space"], [33, 1, 1, "", "filter_time"], [34, 1, 1, "", "merge"], [35, 1, 1, "", "reduce"], [36, 1, 1, "", "shift"], [37, 1, 1, "", "smooth"], [38, 1, 1, "", "trim"]], "semantique.QueryRecipe": [[39, 1, 1, "", "__init__"], [40, 1, 1, "", "execute"]], "semantique.components": [[45, 0, 1, "", "space"], [49, 0, 1, "", "time"]], "semantique.components.space": [[46, 3, 1, "", "FEATURE"], [47, 3, 1, "", "X"], [48, 3, 1, "", "Y"], [45, 1, 1, "", "__init__"]], "semantique.components.time": [[50, 3, 1, "", "DAY"], [51, 3, 1, "", "DAY_OF_WEEK"], [52, 3, 1, "", "DAY_OF_YEAR"], [53, 3, 1, "", "HOUR"], [54, 3, 1, "", "MINUTE"], [55, 3, 1, "", "MONTH"], [56, 3, 1, "", "QUARTER"], [57, 3, 1, "", "SEASON"], [58, 3, 1, "", "SECOND"], [59, 3, 1, "", "WEEK"], [60, 3, 1, "", "YEAR"], [49, 1, 1, "", "__init__"]], "semantique.datacube": [[62, 0, 1, "", "Datacube"], [66, 0, 1, "", "GeotiffArchive"], [73, 0, 1, "", "Opendatacube"]], "semantique.datacube.Datacube": [[62, 1, 1, "", "__init__"], [63, 4, 1, "", "layout"], [64, 1, 1, "", "lookup"], [65, 1, 1, "", "retrieve"]], "semantique.datacube.GeotiffArchive": [[66, 1, 1, "", "__init__"], [67, 4, 1, "", "config"], [68, 4, 1, "", "layout"], [69, 1, 1, "", "lookup"], [70, 1, 1, "", "retrieve"], [71, 4, 1, "", "src"], [72, 4, 1, "", "tz"]], "semantique.datacube.Opendatacube": [[73, 1, 1, "", "__init__"], [74, 4, 1, "", "config"], [75, 4, 1, "", "connection"], [76, 4, 1, "", "layout"], [77, 1, 1, "", "lookup"], [78, 1, 1, "", "retrieve"], [79, 4, 1, "", "tz"]], "semantique.dimensions": [[80, 5, 1, "", "SPACE"], [81, 5, 1, "", "TIME"], [82, 5, 1, "", "X"], [83, 5, 1, "", "Y"]], "semantique.exceptions": [[86, 6, 1, "", "AlignmentError"], [87, 6, 1, "", "EmptyDataError"], [88, 6, 1, "", "InvalidBuildingBlockError"], [89, 6, 1, "", "InvalidIntervalError"], [90, 6, 1, "", "InvalidValueTypeError"], [91, 6, 1, "", "MissingDimensionError"], [92, 6, 1, "", "MixedDimensionsError"], [93, 6, 1, "", "MixedTimeZonesError"], [94, 6, 1, "", "ReservedDimensionError"], [95, 6, 1, "", "TooManyDimensionsError"], [96, 6, 1, "", "UnknownComponentError"], [97, 6, 1, "", "UnknownConceptError"], [98, 6, 1, "", "UnknownDimensionError"], [99, 6, 1, "", "UnknownLabelError"], [100, 6, 1, "", "UnknownLayerError"], [101, 6, 1, "", "UnknownOperatorError"], [102, 6, 1, "", "UnknownReducerError"], [103, 6, 1, "", "UnknownResultError"], [104, 6, 1, "", "UnknownVerbError"]], "semantique.extent": [[105, 0, 1, "", "SpatialExtent"], [113, 0, 1, "", "TemporalExtent"]], "semantique.extent.SpatialExtent": [[105, 1, 1, "", "__init__"], [106, 4, 1, "", "crs"], [107, 4, 1, "", "features"], [108, 1, 1, "", "from_feature"], [109, 1, 1, "", "from_featurecollection"], [110, 1, 1, "", "from_geojson"], [111, 1, 1, "", "from_geometry"], [112, 1, 1, "", "rasterize"]], "semantique.extent.TemporalExtent": [[113, 1, 1, "", "__init__"], [114, 1, 1, "", "discretize"], [115, 4, 1, "", "end"], [116, 4, 1, "", "start"], [117, 4, 1, "", "tz"]], "semantique.mapping": [[122, 0, 1, "", "Mapping"], [125, 0, 1, "", "Semantique"]], "semantique.mapping.Mapping": [[122, 1, 1, "", "__init__"], [123, 1, 1, "", "lookup"], [124, 1, 1, "", "translate"]], "semantique.mapping.Semantique": [[125, 1, 1, "", "__init__"], [126, 1, 1, "", "lookup"], [127, 1, 1, "", "translate"]], "semantique.operators": [[128, 5, 1, "", "ABSOLUTE"], [129, 5, 1, "", "ADD"], [130, 5, 1, "", "AFTER"], [131, 5, 1, "", "AND"], [132, 5, 1, "", "BEFORE"], [133, 5, 1, "", "CEILING"], [134, 5, 1, "", "COSECANT"], [135, 5, 1, "", "COSINE"], [136, 5, 1, "", "COTANGENT"], [137, 5, 1, "", "CUBE_ROOT"], [138, 5, 1, "", "DIVIDE"], [139, 5, 1, "", "DURING"], [140, 5, 1, "", "EQUAL"], [141, 5, 1, "", "EXCLUSIVE_OR"], [142, 5, 1, "", "EXPONENTIAL"], [143, 5, 1, "", "FLOOR"], [144, 5, 1, "", "GREATER"], [145, 5, 1, "", "GREATER_EQUAL"], [146, 5, 1, "", "IN"], [147, 5, 1, "", "INTERSECTS"], [148, 5, 1, "", "IS_MISSING"], [149, 5, 1, "", "LESS"], [150, 5, 1, "", "LESS_EQUAL"], [151, 5, 1, "", "MULTIPLY"], [152, 5, 1, "", "NATURAL_LOGARITHM"], [153, 5, 1, "", "NORMALIZED_DIFFERENCE"], [154, 5, 1, "", "NOT"], [155, 5, 1, "", "NOT_EQUAL"], [156, 5, 1, "", "NOT_IN"], [157, 5, 1, "", "NOT_MISSING"], [158, 5, 1, "", "OR"], [159, 5, 1, "", "POWER"], [160, 5, 1, "", "SECANT"], [161, 5, 1, "", "SINE"], [162, 5, 1, "", "SQUARE_ROOT"], [163, 5, 1, "", "SUBTRACT"], [164, 5, 1, "", "TANGENT"], [165, 5, 1, "", "TO_DEGREES"], [166, 5, 1, "", "TO_RADIANS"]], "semantique.processor.arrays": [[167, 0, 1, "", "Array"], [203, 0, 1, "", "Collection"]], "semantique.processor.arrays.Array": [[167, 1, 1, "", "__init__"], [168, 1, 1, "", "align_with"], [169, 1, 1, "", "apply_custom"], [170, 1, 1, "", "assign"], [171, 4, 1, "", "crs"], [172, 1, 1, "", "delineate"], [173, 1, 1, "", "drop_non_dimension_coords"], [174, 1, 1, "", "evaluate"], [175, 1, 1, "", "extract"], [176, 1, 1, "", "fill"], [177, 1, 1, "", "filter"], [178, 4, 1, "", "grid_points"], [179, 1, 1, "", "groupby"], [180, 4, 1, "", "is_empty"], [181, 1, 1, "", "name"], [182, 1, 1, "", "reduce"], [183, 1, 1, "", "regularize"], [184, 1, 1, "", "reproject"], [185, 1, 1, "", "shift"], [186, 1, 1, "", "smooth"], [187, 4, 1, "", "spatial_resolution"], [188, 1, 1, "", "stack_all_dims"], [189, 1, 1, "", "stack_spatial_dims"], [190, 1, 1, "", "to_csv"], [191, 1, 1, "", "to_dataframe"], [192, 1, 1, "", "to_geodataframe"], [193, 1, 1, "", "to_geotiff"], [194, 1, 1, "", "trim"], [195, 4, 1, "", "tz"], [196, 1, 1, "", "tz_convert"], [197, 1, 1, "", "unstack_all_dims"], [198, 1, 1, "", "unstack_spatial_dims"], [199, 4, 1, "", "value_labels"], [200, 4, 1, "", "value_type"], [201, 1, 1, "", "write_crs"], [202, 1, 1, "", "write_tz"]], "semantique.processor.arrays.Collection": [[203, 1, 1, "", "__init__"], [204, 1, 1, "", "apply_custom"], [205, 1, 1, "", "assign"], [206, 1, 1, "", "compose"], [207, 1, 1, "", "concatenate"], [208, 1, 1, "", "delineate"], [209, 1, 1, "", "evaluate"], [210, 1, 1, "", "extract"], [211, 1, 1, "", "fill"], [212, 1, 1, "", "filter"], [213, 4, 1, "", "is_empty"], [214, 1, 1, "", "merge"], [215, 1, 1, "", "name"], [216, 1, 1, "", "reduce"], [217, 1, 1, "", "regularize"], [218, 1, 1, "", "shift"], [219, 1, 1, "", "smooth"], [220, 4, 1, "", "sq"], [221, 1, 1, "", "stack_spatial_dims"], [222, 1, 1, "", "trim"], [223, 1, 1, "", "unstack_spatial_dims"]], "semantique.processor.core": [[224, 0, 1, "", "QueryProcessor"]], "semantique.processor.core.QueryProcessor": [[224, 1, 1, "", "__init__"], [225, 1, 1, "", "add_custom_operator"], [226, 1, 1, "", "add_custom_reducer"], [227, 1, 1, "", "add_custom_verb"], [228, 1, 1, "", "call_handler"], [229, 1, 1, "", "call_verb"], [230, 4, 1, "", "crs"], [231, 4, 1, "", "custom_operators"], [232, 4, 1, "", "custom_reducers"], [233, 4, 1, "", "custom_verbs"], [234, 4, 1, "", "datacube"], [235, 1, 1, "", "execute"], [236, 4, 1, "", "extent"], [237, 1, 1, "", "get_operator"], [238, 1, 1, "", "get_reducer"], [239, 1, 1, "", "handle_apply_custom"], [240, 1, 1, "", "handle_assign"], [241, 1, 1, "", "handle_collection"], [242, 1, 1, "", "handle_compose"], [243, 1, 1, "", "handle_concatenate"], [244, 1, 1, "", "handle_concept"], [245, 1, 1, "", "handle_delineate"], [246, 1, 1, "", "handle_evaluate"], [247, 1, 1, "", "handle_extract"], [248, 1, 1, "", "handle_fill"], [249, 1, 1, "", "handle_filter"], [250, 1, 1, "", "handle_geometry"], [251, 1, 1, "", "handle_groupby"], [252, 1, 1, "", "handle_interval"], [253, 1, 1, "", "handle_label"], [254, 1, 1, "", "handle_layer"], [255, 1, 1, "", "handle_merge"], [256, 1, 1, "", "handle_name"], [257, 1, 1, "", "handle_processing_chain"], [258, 1, 1, "", "handle_reduce"], [259, 1, 1, "", "handle_result"], [260, 1, 1, "", "handle_self"], [261, 1, 1, "", "handle_set"], [262, 1, 1, "", "handle_shift"], [263, 1, 1, "", "handle_smooth"], [264, 1, 1, "", "handle_time_instant"], [265, 1, 1, "", "handle_time_interval"], [266, 1, 1, "", "handle_trim"], [267, 1, 1, "", "handle_verb"], [268, 4, 1, "", "mapping"], [269, 1, 1, "", "optimize"], [270, 1, 1, "", "parse"], [271, 4, 1, "", "recipe"], [272, 4, 1, "", "response"], [273, 4, 1, "", "spatial_resolution"], [274, 4, 1, "", "track_types"], [275, 4, 1, "", "tz"]], "semantique.processor.operators": [[276, 2, 1, "", "absolute_"], [277, 2, 1, "", "add_"], [278, 2, 1, "", "after_"], [279, 2, 1, "", "and_"], [280, 2, 1, "", "before_"], [281, 2, 1, "", "ceiling_"], [282, 2, 1, "", "cosecant_"], [283, 2, 1, "", "cosine_"], [284, 2, 1, "", "cotangent_"], [285, 2, 1, "", "cube_root_"], [286, 2, 1, "", "divide_"], [287, 2, 1, "", "during_"], [288, 2, 1, "", "equal_"], [289, 2, 1, "", "exclusive_or_"], [290, 2, 1, "", "exponential_"], [291, 2, 1, "", "floor_"], [292, 2, 1, "", "greater_"], [293, 2, 1, "", "greater_equal_"], [294, 2, 1, "", "in_"], [295, 2, 1, "", "intersects_"], [296, 2, 1, "", "is_missing_"], [297, 2, 1, "", "less_"], [298, 2, 1, "", "less_equal_"], [299, 2, 1, "", "multiply_"], [300, 2, 1, "", "natural_logarithm_"], [301, 2, 1, "", "normalized_difference_"], [302, 2, 1, "", "not_"], [303, 2, 1, "", "not_equal_"], [304, 2, 1, "", "not_in_"], [305, 2, 1, "", "not_missing_"], [306, 2, 1, "", "or_"], [307, 2, 1, "", "power_"], [308, 2, 1, "", "secant_"], [309, 2, 1, "", "sine_"], [310, 2, 1, "", "square_root_"], [311, 2, 1, "", "subtract_"], [312, 2, 1, "", "tangent_"], [313, 2, 1, "", "to_degrees_"], [314, 2, 1, "", "to_radians_"]], "semantique.processor.reducers": [[315, 2, 1, "", "all_"], [316, 2, 1, "", "any_"], [317, 2, 1, "", "count_"], [318, 2, 1, "", "first_"], [319, 2, 1, "", "last_"], [320, 2, 1, "", "max_"], [321, 2, 1, "", "mean_"], [322, 2, 1, "", "median_"], [323, 2, 1, "", "min_"], [324, 2, 1, "", "mode_"], [325, 2, 1, "", "n_"], [326, 2, 1, "", "none_"], [327, 2, 1, "", "percentage_"], [328, 2, 1, "", "product_"], [329, 2, 1, "", "range_"], [330, 2, 1, "", "standard_deviation_"], [331, 2, 1, "", "sum_"], [332, 2, 1, "", "variance_"]], "semantique.processor.types": [[333, 5, 1, "", "DTYPE_MAPPING"], [334, 5, 1, "", "TYPE_PROMOTION_MANUALS"], [335, 0, 1, "", "TypePromoter"], [343, 2, 1, "", "get_value_labels"], [344, 2, 1, "", "get_value_type"]], "semantique.processor.types.TypePromoter": [[335, 1, 1, "", "__init__"], [336, 1, 1, "", "check"], [337, 4, 1, "", "input_labels"], [338, 4, 1, "", "input_types"], [339, 4, 1, "", "manual"], [340, 4, 1, "", "output_labels"], [341, 4, 1, "", "output_type"], [342, 1, 1, "", "promote"]], "semantique.processor.utils": [[345, 2, 1, "", "allnull"], [346, 2, 1, "", "convert_datetime64"], [347, 2, 1, "", "datetime64_as_unix"], [348, 2, 1, "", "get_null"], [349, 2, 1, "", "inf_as_null"], [350, 2, 1, "", "null_as_zero"], [351, 2, 1, "", "parse_datetime_component"], [352, 2, 1, "", "parse_extent"]], "semantique.processor.values": [[353, 0, 1, "", "Interval"]], "semantique.processor.values.Interval": [[353, 1, 1, "", "__init__"], [354, 4, 1, "", "lower"], [355, 4, 1, "", "sq"], [356, 4, 1, "", "upper"], [357, 4, 1, "", "value_type"]], "semantique.reducers": [[358, 5, 1, "", "ALL"], [359, 5, 1, "", "ANY"], [360, 5, 1, "", "COUNT"], [361, 5, 1, "", "FIRST"], [362, 5, 1, "", "LAST"], [363, 5, 1, "", "MAX"], [364, 5, 1, "", "MEAN"], [365, 5, 1, "", "MEDIAN"], [366, 5, 1, "", "MIN"], [367, 5, 1, "", "MODE"], [368, 5, 1, "", "N"], [369, 5, 1, "", "NONE"], [370, 5, 1, "", "PERCENTAGE"], [371, 5, 1, "", "PRODUCT"], [372, 5, 1, "", "RANGE"], [373, 5, 1, "", "STANDARD_DEVIATION"], [374, 5, 1, "", "SUM"], [375, 5, 1, "", "VARIANCE"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property", "5": "py:data", "6": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"semantiqu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385], "arrayproxi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "apply_custom": [1, 21, 169, 204], "assign": [2, 22, 170, 205, 389], "assign_spac": [3, 23], "assign_tim": [4, 24], "delin": [5, 27, 172, 208, 389], "evalu": [6, 28, 174, 209, 388, 389], "extract": [7, 29, 175, 210, 389], "fill": [8, 30, 176, 211, 389], "filter": [9, 31, 177, 212, 389], "filter_spac": [10, 32], "filter_tim": [11, 33], "groupbi": [12, 179, 389], "groupby_spac": 13, "groupby_tim": 14, "name": [15, 181, 215, 389, 396], "reduc": [16, 35, 182, 216, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 386, 389, 396], "shift": [17, 36, 185, 218, 389], "smooth": [18, 37, 186, 219, 389], "trim": [19, 38, 194, 222, 389], "collectionproxi": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "compos": [25, 206, 389], "concaten": [26, 207, 389], "merg": [34, 214, 389], "queryrecip": [39, 40], "execut": [40, 235, 386, 387], "appear": 41, "artifact": 42, "atmospher": 43, "collect": [44, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 387, 388, 389, 396], "compon": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 389, 396], "space": [45, 46, 47, 48, 80], "featur": [46, 107], "x": [47, 82], "y": [48, 83], "time": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 81, 384], "dai": 50, "day_of_week": 51, "day_of_year": 52, "hour": 53, "minut": 54, "month": 55, "quarter": 56, "season": [57, 384], "second": 58, "week": 59, "year": 60, "concept": [61, 388], "datacub": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 234], "layout": [63, 68, 76], "lookup": [64, 69, 77, 123, 126], "retriev": [65, 70, 78, 384], "geotiffarch": [66, 67, 68, 69, 70, 71, 72, 383], "config": [67, 74], "src": 71, "tz": [72, 79, 117, 195, 275], "opendatacub": [73, 74, 75, 76, 77, 78, 79, 383], "connect": 75, "dimens": [80, 81, 82, 83, 389, 396], "entiti": 84, "event": 85, "except": [86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 396], "alignmenterror": 86, "emptydataerror": 87, "invalidbuildingblockerror": 88, "invalidintervalerror": 89, "invalidvaluetypeerror": 90, "missingdimensionerror": 91, "mixeddimensionserror": 92, "mixedtimezoneserror": 93, "reserveddimensionerror": 94, "toomanydimensionserror": 95, "unknowncomponenterror": 96, "unknownconcepterror": 97, "unknowndimensionerror": 98, "unknownlabelerror": 99, "unknownlayererror": 100, "unknownoperatorerror": 101, "unknownreducererror": 102, "unknownresulterror": 103, "unknownverberror": 104, "extent": [105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 236, 386, 387, 396], "spatialext": [105, 106, 107, 108, 109, 110, 111, 112], "cr": [106, 171, 230], "from_featur": 108, "from_featurecollect": 109, "from_geojson": 110, "from_geometri": 111, "raster": 112, "temporalext": [113, 114, 115, 116, 117], "discret": 114, "end": 115, "start": 116, "geometri": 118, "interv": [119, 353, 354, 355, 356, 357], "label": 120, "layer": [121, 388], "map": [122, 123, 124, 125, 126, 127, 268, 384, 385, 387, 396], "translat": [124, 127], "oper": [128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 386, 396], "absolut": 128, "add": 129, "after": 130, "AND": 131, "befor": 132, "ceil": 133, "cosec": 134, "cosin": 135, "cotang": 136, "cube_root": 137, "divid": 138, "dure": 139, "equal": 140, "exclusive_or": 141, "exponenti": 142, "floor": 143, "greater": 144, "greater_equ": 145, "IN": 146, "intersect": 147, "is_miss": 148, "less": 149, "less_equ": 150, "multipli": 151, "natural_logarithm": 152, "normalized_differ": 153, "NOT": 154, "not_equ": 155, "not_in": 156, "not_miss": 157, "OR": 158, "power": 159, "secant": 160, "sine": 161, "square_root": 162, "subtract": 163, "tangent": 164, "to_degre": 165, "to_radian": 166, "processor": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 396], "arrai": [167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 389, 396], "align_with": 168, "drop_non_dimension_coord": 173, "grid_point": 178, "is_empti": [180, 213], "regular": [183, 217], "reproject": 184, "spatial_resolut": [187, 273], "stack_all_dim": 188, "stack_spatial_dim": [189, 221], "to_csv": 190, "to_datafram": 191, "to_geodatafram": 192, "to_geotiff": 193, "tz_convert": 196, "unstack_all_dim": 197, "unstack_spatial_dim": [198, 223], "value_label": 199, "value_typ": [200, 357], "write_cr": 201, "write_tz": 202, "sq": [220, 355], "core": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 396], "queryprocessor": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275], "add_custom_oper": 225, "add_custom_reduc": 226, "add_custom_verb": 227, "call_handl": 228, "call_verb": 229, "custom_oper": 231, "custom_reduc": 232, "custom_verb": 233, "get_oper": 237, "get_reduc": 238, "handle_apply_custom": 239, "handle_assign": 240, "handle_collect": 241, "handle_compos": 242, "handle_concaten": 243, "handle_concept": 244, "handle_delin": 245, "handle_evalu": 246, "handle_extract": 247, "handle_fil": 248, "handle_filt": 249, "handle_geometri": 250, "handle_groupbi": 251, "handle_interv": 252, "handle_label": 253, "handle_lay": 254, "handle_merg": 255, "handle_nam": 256, "handle_processing_chain": 257, "handle_reduc": 258, "handle_result": 259, "handle_self": 260, "handle_set": 261, "handle_shift": 262, "handle_smooth": 263, "handle_time_inst": 264, "handle_time_interv": 265, "handle_trim": 266, "handle_verb": 267, "optim": [269, 386], "pars": [270, 386], "recip": [271, 387, 396], "respons": [272, 386, 391], "track_typ": 274, "absolute_": 276, "add_": 277, "after_": 278, "and_": 279, "before_": 280, "ceiling_": 281, "cosecant_": 282, "cosine_": 283, "cotangent_": 284, "cube_root_": 285, "divide_": 286, "during_": 287, "equal_": 288, "exclusive_or_": 289, "exponential_": 290, "floor_": 291, "greater_": 292, "greater_equal_": 293, "in_": 294, "intersects_": 295, "is_missing_": 296, "less_": 297, "less_equal_": 298, "multiply_": 299, "natural_logarithm_": 300, "normalized_difference_": 301, "not_": 302, "not_equal_": 303, "not_in_": 304, "not_missing_": 305, "or_": 306, "power_": 307, "secant_": 308, "sine_": 309, "square_root_": 310, "subtract_": 311, "tangent_": 312, "to_degrees_": 313, "to_radians_": 314, "all_": 315, "any_": 316, "count_": 317, "first_": 318, "last_": 319, "max_": 320, "mean_": 321, "median_": 322, "min_": 323, "mode_": 324, "n_": 325, "none_": 326, "percentage_": 327, "product_": 328, "range_": 329, "standard_deviation_": 330, "sum_": 331, "variance_": 332, "type": [333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 386, 396], "dtype_map": 333, "type_promotion_manu": 334, "typepromot": [335, 336, 337, 338, 339, 340, 341, 342], "check": 336, "input_label": 337, "input_typ": 338, "manual": 339, "output_label": 340, "output_typ": 341, "promot": 342, "get_value_label": 343, "get_value_typ": 344, "util": [345, 346, 347, 348, 349, 350, 351, 352, 389, 396], "allnul": 345, "convert_datetime64": 346, "datetime64_as_unix": 347, "get_nul": 348, "inf_as_nul": 349, "null_as_zero": 350, "parse_datetime_compon": 351, "parse_ext": 352, "valu": [353, 354, 355, 356, 357, 386, 389, 396], "lower": 354, "upper": 356, "all": 358, "ani": 359, "count": [360, 384], "first": [361, 384], "last": 362, "max": 363, "mean": 364, "median": 365, "min": 366, "mode": 367, "n": 368, "none": 369, "percentag": 370, "product": 371, "rang": 372, "standard_devi": 373, "sum": 374, "varianc": 375, "reflect": 376, "result": [377, 388], "self": [378, 389], "set": [379, 387], "time_inst": 380, "time_interv": 381, "topographi": 382, "repres": [383, 387], "an": [383, 387, 389], "eo": [383, 387, 396], "data": [383, 386, 387, 388, 394, 396], "cube": [383, 387, 394, 396], "content": [383, 384, 385, 386, 387, 388, 389], "prepar": [383, 384, 385, 386, 387, 388, 389], "structur": [383, 385, 386, 389], "The": [383, 385], "configur": [383, 385], "galleri": 384, "water": 384, "veget": 384, "presenc": 384, "cloud": 384, "free": 384, "composit": 384, "land": 384, "cover": 384, "snow": 384, "semant": [384, 388, 394], "base": 384, "imag": 384, "parcel": 384, "statist": [384, 396], "aggreg": 384, "observ": [384, 394], "construct": 385, "intern": 386, "queri": [386, 387, 394], "process": 386, "spatial": [386, 396], "tempor": [386, 387, 396], "handler": 386, "function": [386, 396], "track": 386, "ad": 386, "custom": 386, "verb": [386, 389, 396], "export": 386, "log": 386, "progress": 386, "write": [387, 392], "context": 387, "import": 387, "spatio": [387, 396], "full": 387, "refer": [388, 396], "referenc": 388, "activ": 388, "object": [388, 396], "singl": [389, 396], "univari": [389, 396], "express": 389, "bivari": 389, "align": 389, "two": 389, "coordin": 389, "nodata": 389, "group": 389, "multipl": 389, "grouper": 389, "along": 389, "new": 389, "over": 389, "exist": 389, "split": 389, "appli": 389, "combin": 389, "changelog": 390, "version": 390, "0": 390, "1": [390, 391, 392], "barmstein": 390, "contributor": 391, "coven": 391, "code": [391, 392], "conduct": 391, "our": 391, "pledg": 391, "standard": 391, "enforc": 391, "scope": 391, "guidelin": 391, "correct": 391, "2": [391, 392], "warn": 391, "3": [391, 392], "temporari": 391, "ban": 391, "4": [391, 392], "perman": 391, "attribut": 391, "contribut": 392, "creat": 392, "issu": 392, "discuss": 392, "solv": 392, "clone": 392, "github": 392, "repo": 392, "local": 392, "develop": 392, "environ": 392, "commit": 392, "your": 392, "branch": 392, "5": 392, "push": 392, "6": 392, "pull": 392, "request": 392, "user": 393, "guid": 393, "earth": 394, "acknowledg": 394, "copyright": 394, "indic": 394, "tabl": 394, "instal": 395, "api": 396, "build": 396, "block": 396, "special": 396, "reserv": 396, "algebra": 396, "boolean": 396, "relat": 396, "occur": 396, "posit": 396, "handl": 396}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"semantique.ArrayProxy": [[0, "semantique-arrayproxy"]], "semantique.ArrayProxy.apply_custom": [[1, "semantique-arrayproxy-apply-custom"]], "semantique.ArrayProxy.assign": [[2, "semantique-arrayproxy-assign"]], "semantique.ArrayProxy.assign_space": [[3, "semantique-arrayproxy-assign-space"]], "semantique.ArrayProxy.assign_time": [[4, "semantique-arrayproxy-assign-time"]], "semantique.ArrayProxy.delineate": [[5, "semantique-arrayproxy-delineate"]], "semantique.ArrayProxy.evaluate": [[6, "semantique-arrayproxy-evaluate"]], "semantique.ArrayProxy.extract": [[7, "semantique-arrayproxy-extract"]], "semantique.ArrayProxy.fill": [[8, "semantique-arrayproxy-fill"]], "semantique.ArrayProxy.filter": [[9, "semantique-arrayproxy-filter"]], "semantique.ArrayProxy.filter_space": [[10, "semantique-arrayproxy-filter-space"]], "semantique.ArrayProxy.filter_time": [[11, "semantique-arrayproxy-filter-time"]], "semantique.ArrayProxy.groupby": [[12, "semantique-arrayproxy-groupby"]], "semantique.ArrayProxy.groupby_space": [[13, "semantique-arrayproxy-groupby-space"]], "semantique.ArrayProxy.groupby_time": [[14, "semantique-arrayproxy-groupby-time"]], "semantique.ArrayProxy.name": [[15, "semantique-arrayproxy-name"]], "semantique.ArrayProxy.reduce": [[16, "semantique-arrayproxy-reduce"]], "semantique.ArrayProxy.shift": [[17, "semantique-arrayproxy-shift"]], "semantique.ArrayProxy.smooth": [[18, "semantique-arrayproxy-smooth"]], "semantique.ArrayProxy.trim": [[19, "semantique-arrayproxy-trim"]], "semantique.CollectionProxy": [[20, "semantique-collectionproxy"]], "semantique.CollectionProxy.apply_custom": [[21, "semantique-collectionproxy-apply-custom"]], "semantique.CollectionProxy.assign": [[22, "semantique-collectionproxy-assign"]], "semantique.CollectionProxy.assign_space": [[23, "semantique-collectionproxy-assign-space"]], "semantique.CollectionProxy.assign_time": [[24, "semantique-collectionproxy-assign-time"]], "semantique.CollectionProxy.compose": [[25, "semantique-collectionproxy-compose"]], "semantique.CollectionProxy.concatenate": [[26, "semantique-collectionproxy-concatenate"]], "semantique.CollectionProxy.delineate": [[27, "semantique-collectionproxy-delineate"]], "semantique.CollectionProxy.evaluate": [[28, "semantique-collectionproxy-evaluate"]], "semantique.CollectionProxy.extract": [[29, "semantique-collectionproxy-extract"]], "semantique.CollectionProxy.fill": [[30, "semantique-collectionproxy-fill"]], "semantique.CollectionProxy.filter": [[31, "semantique-collectionproxy-filter"]], "semantique.CollectionProxy.filter_space": [[32, "semantique-collectionproxy-filter-space"]], "semantique.CollectionProxy.filter_time": [[33, "semantique-collectionproxy-filter-time"]], "semantique.CollectionProxy.merge": [[34, "semantique-collectionproxy-merge"]], "semantique.CollectionProxy.reduce": [[35, "semantique-collectionproxy-reduce"]], "semantique.CollectionProxy.shift": [[36, "semantique-collectionproxy-shift"]], "semantique.CollectionProxy.smooth": [[37, "semantique-collectionproxy-smooth"]], "semantique.CollectionProxy.trim": [[38, "semantique-collectionproxy-trim"]], "semantique.QueryRecipe": [[39, "semantique-queryrecipe"]], "semantique.QueryRecipe.execute": [[40, "semantique-queryrecipe-execute"]], "semantique.appearance": [[41, "semantique-appearance"]], "semantique.artifacts": [[42, "semantique-artifacts"]], "semantique.atmosphere": [[43, "semantique-atmosphere"]], "semantique.collection": [[44, "semantique-collection"]], "semantique.components.space": [[45, "semantique-components-space"]], "semantique.components.space.FEATURE": [[46, "semantique-components-space-feature"]], "semantique.components.space.X": [[47, "semantique-components-space-x"]], "semantique.components.space.Y": [[48, "semantique-components-space-y"]], "semantique.components.time": [[49, "semantique-components-time"]], "semantique.components.time.DAY": [[50, "semantique-components-time-day"]], "semantique.components.time.DAY_OF_WEEK": [[51, "semantique-components-time-day-of-week"]], "semantique.components.time.DAY_OF_YEAR": [[52, "semantique-components-time-day-of-year"]], "semantique.components.time.HOUR": [[53, "semantique-components-time-hour"]], "semantique.components.time.MINUTE": [[54, "semantique-components-time-minute"]], "semantique.components.time.MONTH": [[55, "semantique-components-time-month"]], "semantique.components.time.QUARTER": [[56, "semantique-components-time-quarter"]], "semantique.components.time.SEASON": [[57, "semantique-components-time-season"]], "semantique.components.time.SECOND": [[58, "semantique-components-time-second"]], "semantique.components.time.WEEK": [[59, "semantique-components-time-week"]], "semantique.components.time.YEAR": [[60, "semantique-components-time-year"]], "semantique.concept": [[61, "semantique-concept"]], "semantique.datacube.Datacube": [[62, "semantique-datacube-datacube"]], "semantique.datacube.Datacube.layout": [[63, "semantique-datacube-datacube-layout"]], "semantique.datacube.Datacube.lookup": [[64, "semantique-datacube-datacube-lookup"]], "semantique.datacube.Datacube.retrieve": [[65, "semantique-datacube-datacube-retrieve"]], "semantique.datacube.GeotiffArchive": [[66, "semantique-datacube-geotiffarchive"]], "semantique.datacube.GeotiffArchive.config": [[67, "semantique-datacube-geotiffarchive-config"]], "semantique.datacube.GeotiffArchive.layout": [[68, "semantique-datacube-geotiffarchive-layout"]], "semantique.datacube.GeotiffArchive.lookup": [[69, "semantique-datacube-geotiffarchive-lookup"]], "semantique.datacube.GeotiffArchive.retrieve": [[70, "semantique-datacube-geotiffarchive-retrieve"]], "semantique.datacube.GeotiffArchive.src": [[71, "semantique-datacube-geotiffarchive-src"]], "semantique.datacube.GeotiffArchive.tz": [[72, "semantique-datacube-geotiffarchive-tz"]], "semantique.datacube.Opendatacube": [[73, "semantique-datacube-opendatacube"]], "semantique.datacube.Opendatacube.config": [[74, "semantique-datacube-opendatacube-config"]], "semantique.datacube.Opendatacube.connection": [[75, "semantique-datacube-opendatacube-connection"]], "semantique.datacube.Opendatacube.layout": [[76, "semantique-datacube-opendatacube-layout"]], "semantique.datacube.Opendatacube.lookup": [[77, "semantique-datacube-opendatacube-lookup"]], "semantique.datacube.Opendatacube.retrieve": [[78, "semantique-datacube-opendatacube-retrieve"]], "semantique.datacube.Opendatacube.tz": [[79, "semantique-datacube-opendatacube-tz"]], "semantique.dimensions.SPACE": [[80, "semantique-dimensions-space"]], "semantique.dimensions.TIME": [[81, "semantique-dimensions-time"]], "semantique.dimensions.X": [[82, "semantique-dimensions-x"]], "semantique.dimensions.Y": [[83, "semantique-dimensions-y"]], "semantique.entity": [[84, "semantique-entity"]], "semantique.event": [[85, "semantique-event"]], "semantique.exceptions.AlignmentError": [[86, "semantique-exceptions-alignmenterror"]], "semantique.exceptions.EmptyDataError": [[87, "semantique-exceptions-emptydataerror"]], "semantique.exceptions.InvalidBuildingBlockError": [[88, "semantique-exceptions-invalidbuildingblockerror"]], "semantique.exceptions.InvalidIntervalError": [[89, "semantique-exceptions-invalidintervalerror"]], "semantique.exceptions.InvalidValueTypeError": [[90, "semantique-exceptions-invalidvaluetypeerror"]], "semantique.exceptions.MissingDimensionError": [[91, "semantique-exceptions-missingdimensionerror"]], "semantique.exceptions.MixedDimensionsError": [[92, "semantique-exceptions-mixeddimensionserror"]], "semantique.exceptions.MixedTimeZonesError": [[93, "semantique-exceptions-mixedtimezoneserror"]], "semantique.exceptions.ReservedDimensionError": [[94, "semantique-exceptions-reserveddimensionerror"]], "semantique.exceptions.TooManyDimensionsError": [[95, "semantique-exceptions-toomanydimensionserror"]], "semantique.exceptions.UnknownComponentError": [[96, "semantique-exceptions-unknowncomponenterror"]], "semantique.exceptions.UnknownConceptError": [[97, "semantique-exceptions-unknownconcepterror"]], "semantique.exceptions.UnknownDimensionError": [[98, "semantique-exceptions-unknowndimensionerror"]], "semantique.exceptions.UnknownLabelError": [[99, "semantique-exceptions-unknownlabelerror"]], "semantique.exceptions.UnknownLayerError": [[100, "semantique-exceptions-unknownlayererror"]], "semantique.exceptions.UnknownOperatorError": [[101, "semantique-exceptions-unknownoperatorerror"]], "semantique.exceptions.UnknownReducerError": [[102, "semantique-exceptions-unknownreducererror"]], "semantique.exceptions.UnknownResultError": [[103, "semantique-exceptions-unknownresulterror"]], "semantique.exceptions.UnknownVerbError": [[104, "semantique-exceptions-unknownverberror"]], "semantique.extent.SpatialExtent": [[105, "semantique-extent-spatialextent"]], "semantique.extent.SpatialExtent.crs": [[106, "semantique-extent-spatialextent-crs"]], "semantique.extent.SpatialExtent.features": [[107, "semantique-extent-spatialextent-features"]], "semantique.extent.SpatialExtent.from_feature": [[108, "semantique-extent-spatialextent-from-feature"]], "semantique.extent.SpatialExtent.from_featurecollection": [[109, "semantique-extent-spatialextent-from-featurecollection"]], "semantique.extent.SpatialExtent.from_geojson": [[110, "semantique-extent-spatialextent-from-geojson"]], "semantique.extent.SpatialExtent.from_geometry": [[111, "semantique-extent-spatialextent-from-geometry"]], "semantique.extent.SpatialExtent.rasterize": [[112, "semantique-extent-spatialextent-rasterize"]], "semantique.extent.TemporalExtent": [[113, "semantique-extent-temporalextent"]], "semantique.extent.TemporalExtent.discretize": [[114, "semantique-extent-temporalextent-discretize"]], "semantique.extent.TemporalExtent.end": [[115, "semantique-extent-temporalextent-end"]], "semantique.extent.TemporalExtent.start": [[116, "semantique-extent-temporalextent-start"]], "semantique.extent.TemporalExtent.tz": [[117, "semantique-extent-temporalextent-tz"]], "semantique.geometry": [[118, "semantique-geometry"]], "semantique.interval": [[119, "semantique-interval"]], "semantique.label": [[120, "semantique-label"]], "semantique.layer": [[121, "semantique-layer"]], "semantique.mapping.Mapping": [[122, "semantique-mapping-mapping"]], "semantique.mapping.Mapping.lookup": [[123, "semantique-mapping-mapping-lookup"]], "semantique.mapping.Mapping.translate": [[124, "semantique-mapping-mapping-translate"]], "semantique.mapping.Semantique": [[125, "semantique-mapping-semantique"]], "semantique.mapping.Semantique.lookup": [[126, "semantique-mapping-semantique-lookup"]], "semantique.mapping.Semantique.translate": [[127, "semantique-mapping-semantique-translate"]], "semantique.operators.ABSOLUTE": [[128, "semantique-operators-absolute"]], "semantique.operators.ADD": [[129, "semantique-operators-add"]], "semantique.operators.AFTER": [[130, "semantique-operators-after"]], "semantique.operators.AND": [[131, "semantique-operators-and"]], "semantique.operators.BEFORE": [[132, "semantique-operators-before"]], "semantique.operators.CEILING": [[133, "semantique-operators-ceiling"]], "semantique.operators.COSECANT": [[134, "semantique-operators-cosecant"]], "semantique.operators.COSINE": [[135, "semantique-operators-cosine"]], "semantique.operators.COTANGENT": [[136, "semantique-operators-cotangent"]], "semantique.operators.CUBE_ROOT": [[137, "semantique-operators-cube-root"]], "semantique.operators.DIVIDE": [[138, "semantique-operators-divide"]], "semantique.operators.DURING": [[139, "semantique-operators-during"]], "semantique.operators.EQUAL": [[140, "semantique-operators-equal"]], "semantique.operators.EXCLUSIVE_OR": [[141, "semantique-operators-exclusive-or"]], "semantique.operators.EXPONENTIAL": [[142, "semantique-operators-exponential"]], "semantique.operators.FLOOR": [[143, "semantique-operators-floor"]], "semantique.operators.GREATER": [[144, "semantique-operators-greater"]], "semantique.operators.GREATER_EQUAL": [[145, "semantique-operators-greater-equal"]], "semantique.operators.IN": [[146, "semantique-operators-in"]], "semantique.operators.INTERSECTS": [[147, "semantique-operators-intersects"]], "semantique.operators.IS_MISSING": [[148, "semantique-operators-is-missing"]], "semantique.operators.LESS": [[149, "semantique-operators-less"]], "semantique.operators.LESS_EQUAL": [[150, "semantique-operators-less-equal"]], "semantique.operators.MULTIPLY": [[151, "semantique-operators-multiply"]], "semantique.operators.NATURAL_LOGARITHM": [[152, "semantique-operators-natural-logarithm"]], "semantique.operators.NORMALIZED_DIFFERENCE": [[153, "semantique-operators-normalized-difference"]], "semantique.operators.NOT": [[154, "semantique-operators-not"]], "semantique.operators.NOT_EQUAL": [[155, "semantique-operators-not-equal"]], "semantique.operators.NOT_IN": [[156, "semantique-operators-not-in"]], "semantique.operators.NOT_MISSING": [[157, "semantique-operators-not-missing"]], "semantique.operators.OR": [[158, "semantique-operators-or"]], "semantique.operators.POWER": [[159, "semantique-operators-power"]], "semantique.operators.SECANT": [[160, "semantique-operators-secant"]], "semantique.operators.SINE": [[161, "semantique-operators-sine"]], "semantique.operators.SQUARE_ROOT": [[162, "semantique-operators-square-root"]], "semantique.operators.SUBTRACT": [[163, "semantique-operators-subtract"]], "semantique.operators.TANGENT": [[164, "semantique-operators-tangent"]], "semantique.operators.TO_DEGREES": [[165, "semantique-operators-to-degrees"]], "semantique.operators.TO_RADIANS": [[166, "semantique-operators-to-radians"]], "semantique.processor.arrays.Array": [[167, "semantique-processor-arrays-array"]], "semantique.processor.arrays.Array.align_with": [[168, "semantique-processor-arrays-array-align-with"]], "semantique.processor.arrays.Array.apply_custom": [[169, "semantique-processor-arrays-array-apply-custom"]], "semantique.processor.arrays.Array.assign": [[170, "semantique-processor-arrays-array-assign"]], "semantique.processor.arrays.Array.crs": [[171, "semantique-processor-arrays-array-crs"]], "semantique.processor.arrays.Array.delineate": [[172, "semantique-processor-arrays-array-delineate"]], "semantique.processor.arrays.Array.drop_non_dimension_coords": [[173, "semantique-processor-arrays-array-drop-non-dimension-coords"]], "semantique.processor.arrays.Array.evaluate": [[174, "semantique-processor-arrays-array-evaluate"]], "semantique.processor.arrays.Array.extract": [[175, "semantique-processor-arrays-array-extract"]], "semantique.processor.arrays.Array.fill": [[176, "semantique-processor-arrays-array-fill"]], "semantique.processor.arrays.Array.filter": [[177, "semantique-processor-arrays-array-filter"]], "semantique.processor.arrays.Array.grid_points": [[178, "semantique-processor-arrays-array-grid-points"]], "semantique.processor.arrays.Array.groupby": [[179, "semantique-processor-arrays-array-groupby"]], "semantique.processor.arrays.Array.is_empty": [[180, "semantique-processor-arrays-array-is-empty"]], "semantique.processor.arrays.Array.name": [[181, "semantique-processor-arrays-array-name"]], "semantique.processor.arrays.Array.reduce": [[182, "semantique-processor-arrays-array-reduce"]], "semantique.processor.arrays.Array.regularize": [[183, "semantique-processor-arrays-array-regularize"]], "semantique.processor.arrays.Array.reproject": [[184, "semantique-processor-arrays-array-reproject"]], "semantique.processor.arrays.Array.shift": [[185, "semantique-processor-arrays-array-shift"]], "semantique.processor.arrays.Array.smooth": [[186, "semantique-processor-arrays-array-smooth"]], "semantique.processor.arrays.Array.spatial_resolution": [[187, "semantique-processor-arrays-array-spatial-resolution"]], "semantique.processor.arrays.Array.stack_all_dims": [[188, "semantique-processor-arrays-array-stack-all-dims"]], "semantique.processor.arrays.Array.stack_spatial_dims": [[189, "semantique-processor-arrays-array-stack-spatial-dims"]], "semantique.processor.arrays.Array.to_csv": [[190, "semantique-processor-arrays-array-to-csv"]], "semantique.processor.arrays.Array.to_dataframe": [[191, "semantique-processor-arrays-array-to-dataframe"]], "semantique.processor.arrays.Array.to_geodataframe": [[192, "semantique-processor-arrays-array-to-geodataframe"]], "semantique.processor.arrays.Array.to_geotiff": [[193, "semantique-processor-arrays-array-to-geotiff"]], "semantique.processor.arrays.Array.trim": [[194, "semantique-processor-arrays-array-trim"]], "semantique.processor.arrays.Array.tz": [[195, "semantique-processor-arrays-array-tz"]], "semantique.processor.arrays.Array.tz_convert": [[196, "semantique-processor-arrays-array-tz-convert"]], "semantique.processor.arrays.Array.unstack_all_dims": [[197, "semantique-processor-arrays-array-unstack-all-dims"]], "semantique.processor.arrays.Array.unstack_spatial_dims": [[198, "semantique-processor-arrays-array-unstack-spatial-dims"]], "semantique.processor.arrays.Array.value_labels": [[199, "semantique-processor-arrays-array-value-labels"]], "semantique.processor.arrays.Array.value_type": [[200, "semantique-processor-arrays-array-value-type"]], "semantique.processor.arrays.Array.write_crs": [[201, "semantique-processor-arrays-array-write-crs"]], "semantique.processor.arrays.Array.write_tz": [[202, "semantique-processor-arrays-array-write-tz"]], "semantique.processor.arrays.Collection": [[203, "semantique-processor-arrays-collection"]], "semantique.processor.arrays.Collection.apply_custom": [[204, "semantique-processor-arrays-collection-apply-custom"]], "semantique.processor.arrays.Collection.assign": [[205, "semantique-processor-arrays-collection-assign"]], "semantique.processor.arrays.Collection.compose": [[206, "semantique-processor-arrays-collection-compose"]], "semantique.processor.arrays.Collection.concatenate": [[207, "semantique-processor-arrays-collection-concatenate"]], "semantique.processor.arrays.Collection.delineate": [[208, "semantique-processor-arrays-collection-delineate"]], "semantique.processor.arrays.Collection.evaluate": [[209, "semantique-processor-arrays-collection-evaluate"]], "semantique.processor.arrays.Collection.extract": [[210, "semantique-processor-arrays-collection-extract"]], "semantique.processor.arrays.Collection.fill": [[211, "semantique-processor-arrays-collection-fill"]], "semantique.processor.arrays.Collection.filter": [[212, "semantique-processor-arrays-collection-filter"]], "semantique.processor.arrays.Collection.is_empty": [[213, "semantique-processor-arrays-collection-is-empty"]], "semantique.processor.arrays.Collection.merge": [[214, "semantique-processor-arrays-collection-merge"]], "semantique.processor.arrays.Collection.name": [[215, "semantique-processor-arrays-collection-name"]], "semantique.processor.arrays.Collection.reduce": [[216, "semantique-processor-arrays-collection-reduce"]], "semantique.processor.arrays.Collection.regularize": [[217, "semantique-processor-arrays-collection-regularize"]], "semantique.processor.arrays.Collection.shift": [[218, "semantique-processor-arrays-collection-shift"]], "semantique.processor.arrays.Collection.smooth": [[219, "semantique-processor-arrays-collection-smooth"]], "semantique.processor.arrays.Collection.sq": [[220, "semantique-processor-arrays-collection-sq"]], "semantique.processor.arrays.Collection.stack_spatial_dims": [[221, "semantique-processor-arrays-collection-stack-spatial-dims"]], "semantique.processor.arrays.Collection.trim": [[222, "semantique-processor-arrays-collection-trim"]], "semantique.processor.arrays.Collection.unstack_spatial_dims": [[223, "semantique-processor-arrays-collection-unstack-spatial-dims"]], "semantique.processor.core.QueryProcessor": [[224, "semantique-processor-core-queryprocessor"]], "semantique.processor.core.QueryProcessor.add_custom_operator": [[225, "semantique-processor-core-queryprocessor-add-custom-operator"]], "semantique.processor.core.QueryProcessor.add_custom_reducer": [[226, "semantique-processor-core-queryprocessor-add-custom-reducer"]], "semantique.processor.core.QueryProcessor.add_custom_verb": [[227, "semantique-processor-core-queryprocessor-add-custom-verb"]], "semantique.processor.core.QueryProcessor.call_handler": [[228, "semantique-processor-core-queryprocessor-call-handler"]], "semantique.processor.core.QueryProcessor.call_verb": [[229, "semantique-processor-core-queryprocessor-call-verb"]], "semantique.processor.core.QueryProcessor.crs": [[230, "semantique-processor-core-queryprocessor-crs"]], "semantique.processor.core.QueryProcessor.custom_operators": [[231, "semantique-processor-core-queryprocessor-custom-operators"]], "semantique.processor.core.QueryProcessor.custom_reducers": [[232, "semantique-processor-core-queryprocessor-custom-reducers"]], "semantique.processor.core.QueryProcessor.custom_verbs": [[233, "semantique-processor-core-queryprocessor-custom-verbs"]], "semantique.processor.core.QueryProcessor.datacube": [[234, "semantique-processor-core-queryprocessor-datacube"]], "semantique.processor.core.QueryProcessor.execute": [[235, "semantique-processor-core-queryprocessor-execute"]], "semantique.processor.core.QueryProcessor.extent": [[236, "semantique-processor-core-queryprocessor-extent"]], "semantique.processor.core.QueryProcessor.get_operator": [[237, "semantique-processor-core-queryprocessor-get-operator"]], "semantique.processor.core.QueryProcessor.get_reducer": [[238, "semantique-processor-core-queryprocessor-get-reducer"]], "semantique.processor.core.QueryProcessor.handle_apply_custom": [[239, "semantique-processor-core-queryprocessor-handle-apply-custom"]], "semantique.processor.core.QueryProcessor.handle_assign": [[240, "semantique-processor-core-queryprocessor-handle-assign"]], "semantique.processor.core.QueryProcessor.handle_collection": [[241, "semantique-processor-core-queryprocessor-handle-collection"]], "semantique.processor.core.QueryProcessor.handle_compose": [[242, "semantique-processor-core-queryprocessor-handle-compose"]], "semantique.processor.core.QueryProcessor.handle_concatenate": [[243, "semantique-processor-core-queryprocessor-handle-concatenate"]], "semantique.processor.core.QueryProcessor.handle_concept": [[244, "semantique-processor-core-queryprocessor-handle-concept"]], "semantique.processor.core.QueryProcessor.handle_delineate": [[245, "semantique-processor-core-queryprocessor-handle-delineate"]], "semantique.processor.core.QueryProcessor.handle_evaluate": [[246, "semantique-processor-core-queryprocessor-handle-evaluate"]], "semantique.processor.core.QueryProcessor.handle_extract": [[247, "semantique-processor-core-queryprocessor-handle-extract"]], "semantique.processor.core.QueryProcessor.handle_fill": [[248, "semantique-processor-core-queryprocessor-handle-fill"]], "semantique.processor.core.QueryProcessor.handle_filter": [[249, "semantique-processor-core-queryprocessor-handle-filter"]], "semantique.processor.core.QueryProcessor.handle_geometry": [[250, "semantique-processor-core-queryprocessor-handle-geometry"]], "semantique.processor.core.QueryProcessor.handle_groupby": [[251, "semantique-processor-core-queryprocessor-handle-groupby"]], "semantique.processor.core.QueryProcessor.handle_interval": [[252, "semantique-processor-core-queryprocessor-handle-interval"]], "semantique.processor.core.QueryProcessor.handle_label": [[253, "semantique-processor-core-queryprocessor-handle-label"]], "semantique.processor.core.QueryProcessor.handle_layer": [[254, "semantique-processor-core-queryprocessor-handle-layer"]], "semantique.processor.core.QueryProcessor.handle_merge": [[255, "semantique-processor-core-queryprocessor-handle-merge"]], "semantique.processor.core.QueryProcessor.handle_name": [[256, "semantique-processor-core-queryprocessor-handle-name"]], "semantique.processor.core.QueryProcessor.handle_processing_chain": [[257, "semantique-processor-core-queryprocessor-handle-processing-chain"]], "semantique.processor.core.QueryProcessor.handle_reduce": [[258, "semantique-processor-core-queryprocessor-handle-reduce"]], "semantique.processor.core.QueryProcessor.handle_result": [[259, "semantique-processor-core-queryprocessor-handle-result"]], "semantique.processor.core.QueryProcessor.handle_self": [[260, "semantique-processor-core-queryprocessor-handle-self"]], "semantique.processor.core.QueryProcessor.handle_set": [[261, "semantique-processor-core-queryprocessor-handle-set"]], "semantique.processor.core.QueryProcessor.handle_shift": [[262, "semantique-processor-core-queryprocessor-handle-shift"]], "semantique.processor.core.QueryProcessor.handle_smooth": [[263, "semantique-processor-core-queryprocessor-handle-smooth"]], "semantique.processor.core.QueryProcessor.handle_time_instant": [[264, "semantique-processor-core-queryprocessor-handle-time-instant"]], "semantique.processor.core.QueryProcessor.handle_time_interval": [[265, "semantique-processor-core-queryprocessor-handle-time-interval"]], "semantique.processor.core.QueryProcessor.handle_trim": [[266, "semantique-processor-core-queryprocessor-handle-trim"]], "semantique.processor.core.QueryProcessor.handle_verb": [[267, "semantique-processor-core-queryprocessor-handle-verb"]], "semantique.processor.core.QueryProcessor.mapping": [[268, "semantique-processor-core-queryprocessor-mapping"]], "semantique.processor.core.QueryProcessor.optimize": [[269, "semantique-processor-core-queryprocessor-optimize"]], "semantique.processor.core.QueryProcessor.parse": [[270, "semantique-processor-core-queryprocessor-parse"]], "semantique.processor.core.QueryProcessor.recipe": [[271, "semantique-processor-core-queryprocessor-recipe"]], "semantique.processor.core.QueryProcessor.response": [[272, "semantique-processor-core-queryprocessor-response"]], "semantique.processor.core.QueryProcessor.spatial_resolution": [[273, "semantique-processor-core-queryprocessor-spatial-resolution"]], "semantique.processor.core.QueryProcessor.track_types": [[274, "semantique-processor-core-queryprocessor-track-types"]], "semantique.processor.core.QueryProcessor.tz": [[275, "semantique-processor-core-queryprocessor-tz"]], "semantique.processor.operators.absolute_": [[276, "semantique-processor-operators-absolute"]], "semantique.processor.operators.add_": [[277, "semantique-processor-operators-add"]], "semantique.processor.operators.after_": [[278, "semantique-processor-operators-after"]], "semantique.processor.operators.and_": [[279, "semantique-processor-operators-and"]], "semantique.processor.operators.before_": [[280, "semantique-processor-operators-before"]], "semantique.processor.operators.ceiling_": [[281, "semantique-processor-operators-ceiling"]], "semantique.processor.operators.cosecant_": [[282, "semantique-processor-operators-cosecant"]], "semantique.processor.operators.cosine_": [[283, "semantique-processor-operators-cosine"]], "semantique.processor.operators.cotangent_": [[284, "semantique-processor-operators-cotangent"]], "semantique.processor.operators.cube_root_": [[285, "semantique-processor-operators-cube-root"]], "semantique.processor.operators.divide_": [[286, "semantique-processor-operators-divide"]], "semantique.processor.operators.during_": [[287, "semantique-processor-operators-during"]], "semantique.processor.operators.equal_": [[288, "semantique-processor-operators-equal"]], "semantique.processor.operators.exclusive_or_": [[289, "semantique-processor-operators-exclusive-or"]], "semantique.processor.operators.exponential_": [[290, "semantique-processor-operators-exponential"]], "semantique.processor.operators.floor_": [[291, "semantique-processor-operators-floor"]], "semantique.processor.operators.greater_": [[292, "semantique-processor-operators-greater"]], "semantique.processor.operators.greater_equal_": [[293, "semantique-processor-operators-greater-equal"]], "semantique.processor.operators.in_": [[294, "semantique-processor-operators-in"]], "semantique.processor.operators.intersects_": [[295, "semantique-processor-operators-intersects"]], "semantique.processor.operators.is_missing_": [[296, "semantique-processor-operators-is-missing"]], "semantique.processor.operators.less_": [[297, "semantique-processor-operators-less"]], "semantique.processor.operators.less_equal_": [[298, "semantique-processor-operators-less-equal"]], "semantique.processor.operators.multiply_": [[299, "semantique-processor-operators-multiply"]], "semantique.processor.operators.natural_logarithm_": [[300, "semantique-processor-operators-natural-logarithm"]], "semantique.processor.operators.normalized_difference_": [[301, "semantique-processor-operators-normalized-difference"]], "semantique.processor.operators.not_": [[302, "semantique-processor-operators-not"]], "semantique.processor.operators.not_equal_": [[303, "semantique-processor-operators-not-equal"]], "semantique.processor.operators.not_in_": [[304, "semantique-processor-operators-not-in"]], "semantique.processor.operators.not_missing_": [[305, "semantique-processor-operators-not-missing"]], "semantique.processor.operators.or_": [[306, "semantique-processor-operators-or"]], "semantique.processor.operators.power_": [[307, "semantique-processor-operators-power"]], "semantique.processor.operators.secant_": [[308, "semantique-processor-operators-secant"]], "semantique.processor.operators.sine_": [[309, "semantique-processor-operators-sine"]], "semantique.processor.operators.square_root_": [[310, "semantique-processor-operators-square-root"]], "semantique.processor.operators.subtract_": [[311, "semantique-processor-operators-subtract"]], "semantique.processor.operators.tangent_": [[312, "semantique-processor-operators-tangent"]], "semantique.processor.operators.to_degrees_": [[313, "semantique-processor-operators-to-degrees"]], "semantique.processor.operators.to_radians_": [[314, "semantique-processor-operators-to-radians"]], "semantique.processor.reducers.all_": [[315, "semantique-processor-reducers-all"]], "semantique.processor.reducers.any_": [[316, "semantique-processor-reducers-any"]], "semantique.processor.reducers.count_": [[317, "semantique-processor-reducers-count"]], "semantique.processor.reducers.first_": [[318, "semantique-processor-reducers-first"]], "semantique.processor.reducers.last_": [[319, "semantique-processor-reducers-last"]], "semantique.processor.reducers.max_": [[320, "semantique-processor-reducers-max"]], "semantique.processor.reducers.mean_": [[321, "semantique-processor-reducers-mean"]], "semantique.processor.reducers.median_": [[322, "semantique-processor-reducers-median"]], "semantique.processor.reducers.min_": [[323, "semantique-processor-reducers-min"]], "semantique.processor.reducers.mode_": [[324, "semantique-processor-reducers-mode"]], "semantique.processor.reducers.n_": [[325, "semantique-processor-reducers-n"]], "semantique.processor.reducers.none_": [[326, "semantique-processor-reducers-none"]], "semantique.processor.reducers.percentage_": [[327, "semantique-processor-reducers-percentage"]], "semantique.processor.reducers.product_": [[328, "semantique-processor-reducers-product"]], "semantique.processor.reducers.range_": [[329, "semantique-processor-reducers-range"]], "semantique.processor.reducers.standard_deviation_": [[330, "semantique-processor-reducers-standard-deviation"]], "semantique.processor.reducers.sum_": [[331, "semantique-processor-reducers-sum"]], "semantique.processor.reducers.variance_": [[332, "semantique-processor-reducers-variance"]], "semantique.processor.types.DTYPE_MAPPING": [[333, "semantique-processor-types-dtype-mapping"]], "semantique.processor.types.TYPE_PROMOTION_MANUALS": [[334, "semantique-processor-types-type-promotion-manuals"]], "semantique.processor.types.TypePromoter": [[335, "semantique-processor-types-typepromoter"]], "semantique.processor.types.TypePromoter.check": [[336, "semantique-processor-types-typepromoter-check"]], "semantique.processor.types.TypePromoter.input_labels": [[337, "semantique-processor-types-typepromoter-input-labels"]], "semantique.processor.types.TypePromoter.input_types": [[338, "semantique-processor-types-typepromoter-input-types"]], "semantique.processor.types.TypePromoter.manual": [[339, "semantique-processor-types-typepromoter-manual"]], "semantique.processor.types.TypePromoter.output_labels": [[340, "semantique-processor-types-typepromoter-output-labels"]], "semantique.processor.types.TypePromoter.output_type": [[341, "semantique-processor-types-typepromoter-output-type"]], "semantique.processor.types.TypePromoter.promote": [[342, "semantique-processor-types-typepromoter-promote"]], "semantique.processor.types.get_value_labels": [[343, "semantique-processor-types-get-value-labels"]], "semantique.processor.types.get_value_type": [[344, "semantique-processor-types-get-value-type"]], "semantique.processor.utils.allnull": [[345, "semantique-processor-utils-allnull"]], "semantique.processor.utils.convert_datetime64": [[346, "semantique-processor-utils-convert-datetime64"]], "semantique.processor.utils.datetime64_as_unix": [[347, "semantique-processor-utils-datetime64-as-unix"]], "semantique.processor.utils.get_null": [[348, "semantique-processor-utils-get-null"]], "semantique.processor.utils.inf_as_null": [[349, "semantique-processor-utils-inf-as-null"]], "semantique.processor.utils.null_as_zero": [[350, "semantique-processor-utils-null-as-zero"]], "semantique.processor.utils.parse_datetime_component": [[351, "semantique-processor-utils-parse-datetime-component"]], "semantique.processor.utils.parse_extent": [[352, "semantique-processor-utils-parse-extent"]], "semantique.processor.values.Interval": [[353, "semantique-processor-values-interval"]], "semantique.processor.values.Interval.lower": [[354, "semantique-processor-values-interval-lower"]], "semantique.processor.values.Interval.sq": [[355, "semantique-processor-values-interval-sq"]], "semantique.processor.values.Interval.upper": [[356, "semantique-processor-values-interval-upper"]], "semantique.processor.values.Interval.value_type": [[357, "semantique-processor-values-interval-value-type"]], "semantique.reducers.ALL": [[358, "semantique-reducers-all"]], "semantique.reducers.ANY": [[359, "semantique-reducers-any"]], "semantique.reducers.COUNT": [[360, "semantique-reducers-count"]], "semantique.reducers.FIRST": [[361, "semantique-reducers-first"]], "semantique.reducers.LAST": [[362, "semantique-reducers-last"]], "semantique.reducers.MAX": [[363, "semantique-reducers-max"]], "semantique.reducers.MEAN": [[364, "semantique-reducers-mean"]], "semantique.reducers.MEDIAN": [[365, "semantique-reducers-median"]], "semantique.reducers.MIN": [[366, "semantique-reducers-min"]], "semantique.reducers.MODE": [[367, "semantique-reducers-mode"]], "semantique.reducers.N": [[368, "semantique-reducers-n"]], "semantique.reducers.NONE": [[369, "semantique-reducers-none"]], "semantique.reducers.PERCENTAGE": [[370, "semantique-reducers-percentage"]], "semantique.reducers.PRODUCT": [[371, "semantique-reducers-product"]], "semantique.reducers.RANGE": [[372, "semantique-reducers-range"]], "semantique.reducers.STANDARD_DEVIATION": [[373, "semantique-reducers-standard-deviation"]], "semantique.reducers.SUM": [[374, "semantique-reducers-sum"]], "semantique.reducers.VARIANCE": [[375, "semantique-reducers-variance"]], "semantique.reflectance": [[376, "semantique-reflectance"]], "semantique.result": [[377, "semantique-result"]], "semantique.self": [[378, "semantique-self"]], "semantique.set": [[379, "semantique-set"]], "semantique.time_instant": [[380, "semantique-time-instant"]], "semantique.time_interval": [[381, "semantique-time-interval"]], "semantique.topography": [[382, "semantique-topography"]], "Representing an EO data cube": [[383, "Representing-an-EO-data-cube"], [387, "Representing-an-EO-data-cube"]], "Content": [[383, "Content"], [384, "Content"], [385, "Content"], [386, "Content"], [387, "Content"], [388, "Content"], [389, "Content"]], "Prepare": [[383, "Prepare"], [384, "Prepare"], [385, "Prepare"], [386, "Prepare"], [387, "Prepare"], [388, "Prepare"], [389, "Prepare"]], "Structure": [[383, "Structure"], [385, "Structure"]], "The Opendatacube configuration": [[383, "The-Opendatacube-configuration"]], "The Geotiffarchive configuration": [[383, "The-Geotiffarchive-configuration"]], "Gallery": [[384, "Gallery"]], "Count water and vegetation presence": [[384, "Count-water-and-vegetation-presence"]], "Cloud-free composite": [[384, "Cloud-free-composite"]], "Land cover map": [[384, "Land-cover-map"]], "Cloud and snow cover maps": [[384, "Cloud-and-snow-cover-maps"]], "Semantic content based image retrieval": [[384, "Semantic-content-based-image-retrieval"]], "Parcel statistics": [[384, "Parcel-statistics"]], "Seasonal aggregates": [[384, "Seasonal-aggregates"]], "Time of first vegetation observation": [[384, "Time-of-first-vegetation-observation"]], "Constructing a mapping": [[385, "Constructing-a-mapping"]], "The Semantique configuration": [[385, "The-Semantique-configuration"]], "Internal query processing": [[386, "Internal-query-processing"]], "Query parsing": [[386, "Query-parsing"]], "Parsing the spatial and temporal extent": [[386, "Parsing-the-spatial-and-temporal-extent"]], "Query optimization": [[386, "Query-optimization"]], "Query execution": [[386, "Query-execution"]], "Handler functions": [[386, "Handler-functions"]], "Data structures": [[386, "Data-structures"]], "Tracking value types": [[386, "Tracking-value-types"]], "Adding custom verbs": [[386, "Adding-custom-verbs"]], "Adding custom operators": [[386, "Adding-custom-operators"]], "Adding custom reducers": [[386, "Adding-custom-reducers"]], "Exporting the response": [[386, "Exporting-the-response"]], "Logging progress": [[386, "Logging-progress"]], "Writing and executing query recipes": [[387, "Writing-and-executing-query-recipes"]], "Writing the recipe": [[387, "Writing-the-recipe"]], "Setting the context": [[387, "Setting-the-context"]], "Importing a mapping": [[387, "Importing-a-mapping"]], "Setting the spatio-temporal extent": [[387, "Setting-the-spatio-temporal-extent"]], "Collecting the full context": [[387, "Collecting-the-full-context"]], "Executing the recipe": [[387, "Executing-the-recipe"]], "References": [[388, "References"], [396, "references"]], "Referencing semantic concepts": [[388, "Referencing-semantic-concepts"]], "Referencing data layers": [[388, "Referencing-data-layers"]], "Referencing results": [[388, "Referencing-results"]], "Referencing the active evaluation object": [[388, "Referencing-the-active-evaluation-object"]], "Referencing collections": [[388, "Referencing-collections"]], "Verbs": [[389, "Verbs"], [396, "verbs"]], "Verbs for single arrays": [[389, "Verbs-for-single-arrays"], [396, "verbs-for-single-arrays"]], "Evaluate": [[389, "Evaluate"]], "Univariate expressions": [[389, "Univariate-expressions"]], "Bivariate expressions": [[389, "Bivariate-expressions"]], "Aligning two arrays": [[389, "Aligning-two-arrays"]], "Extract": [[389, "Extract"]], "Extracting a component of dimension coordinates": [[389, "Extracting-a-component-of-dimension-coordinates"]], "Filter": [[389, "Filter"]], "Filtering by dimension coordinates": [[389, "Filtering-by-dimension-coordinates"]], "Self-filtering": [[389, "Self-filtering"]], "Assign": [[389, "Assign"]], "Assigning dimension coordinates": [[389, "Assigning-dimension-coordinates"]], "Assigning to nodata values": [[389, "Assigning-to-nodata-values"]], "Reduce": [[389, "Reduce"]], "Shift": [[389, "Shift"]], "Smooth": [[389, "Smooth"]], "Trim": [[389, "Trim"]], "Delineate": [[389, "Delineate"]], "Fill": [[389, "Fill"]], "Groupby": [[389, "Groupby"]], "Grouping by dimension coordinates": [[389, "Grouping-by-dimension-coordinates"]], "Multiple groupers": [[389, "Multiple-groupers"]], "Verbs for collections of arrays": [[389, "Verbs-for-collections-of-arrays"]], "Concatenate": [[389, "Concatenate"]], "Concatenating along a new dimension": [[389, "Concatenating-along-a-new-dimension"]], "Concatenating over an existing dimension": [[389, "Concatenating-over-an-existing-dimension"]], "Compose": [[389, "Compose"]], "Merge": [[389, "Merge"]], "Split-apply-combine structures": [[389, "Split-apply-combine-structures"]], "Utility verbs": [[389, "Utility-verbs"], [396, "utility-verbs"]], "Name": [[389, "Name"]], "Changelog": [[390, "changelog"]], "Version 0.1.0 \u201cBarmstein\u201d": [[390, "version-0-1-0-barmstein"]], "Contributor Covenant Code of Conduct": [[391, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[391, "our-pledge"]], "Our Standards": [[391, "our-standards"]], "Enforcement Responsibilities": [[391, "enforcement-responsibilities"]], "Scope": [[391, "scope"]], "Enforcement": [[391, "enforcement"]], "Enforcement Guidelines": [[391, "enforcement-guidelines"]], "1. Correction": [[391, "correction"]], "2. Warning": [[391, "warning"]], "3. Temporary Ban": [[391, "temporary-ban"]], "4. Permanent Ban": [[391, "permanent-ban"]], "Attribution": [[391, "attribution"]], "Contributing": [[392, "contributing"]], "Creating issues and discussions": [[392, "creating-issues-and-discussions"]], "Solving issues": [[392, "solving-issues"]], "1. Cloning the GitHub repo": [[392, "cloning-the-github-repo"]], "2. Creating a local development environment": [[392, "creating-a-local-development-environment"]], "3. Writing code": [[392, "writing-code"]], "4. Commiting code to your local branch": [[392, "commiting-code-to-your-local-branch"]], "5. Pushing your branch to the GitHub repo": [[392, "pushing-your-branch-to-the-github-repo"]], "6. Creating a pull request": [[392, "creating-a-pull-request"]], "User Guide": [[393, "user-guide"]], "Semantic querying in Earth observation data cubes": [[394, "semantic-querying-in-earth-observation-data-cubes"]], "Acknowledgements": [[394, "acknowledgements"]], "Copyright": [[394, "copyright"]], "Indices and tables": [[394, "indices-and-tables"]], "Installation": [[395, "installation"]], "API Reference": [[396, "api-reference"]], "Components": [[396, "components"]], "Recipe": [[396, "recipe"]], "Mapping": [[396, "mapping"]], "EO data cube": [[396, "eo-data-cube"]], "Spatio-temporal extent": [[396, "spatio-temporal-extent"]], "Building blocks": [[396, "building-blocks"]], "Verbs for array collections": [[396, "verbs-for-array-collections"]], "Special values": [[396, "special-values"]], "Dimensions": [[396, "dimensions"]], "Reserved dimension names": [[396, "reserved-dimension-names"]], "Dimension components": [[396, "dimension-components"]], "Operators": [[396, "operators"]], "Univariate operators": [[396, "univariate-operators"], [396, "id1"]], "Algebraic operators": [[396, "algebraic-operators"], [396, "id2"]], "Boolean operators": [[396, "boolean-operators"], [396, "id3"]], "Relational operators": [[396, "relational-operators"], [396, "id4"]], "Spatial relational operators": [[396, "spatial-relational-operators"], [396, "id5"]], "Temporal relational operators": [[396, "temporal-relational-operators"], [396, "id6"]], "Reducers": [[396, "reducers"]], "Statistical reducers": [[396, "statistical-reducers"], [396, "id7"]], "Boolean reducers": [[396, "boolean-reducers"], [396, "id8"]], "Occurence reducers": [[396, "occurence-reducers"], [396, "id9"]], "Positional reducers": [[396, "positional-reducers"], [396, "id10"]], "Processor": [[396, "processor"]], "Core": [[396, "core"]], "Array objects": [[396, "array-objects"]], "Special value objects": [[396, "special-value-objects"]], "Operator functions": [[396, "operator-functions"]], "Reducer functions": [[396, "reducer-functions"]], "Utils": [[396, "utils"]], "Value type handling": [[396, "value-type-handling"]], "Exceptions": [[396, "exceptions"]]}, "indexentries": {"arrayproxy (class in semantique)": [[0, "semantique.ArrayProxy"]], "__init__() (semantique.arrayproxy method)": [[0, "semantique.ArrayProxy.__init__"]], "apply_custom() (semantique.arrayproxy method)": [[1, "semantique.ArrayProxy.apply_custom"]], "assign() (semantique.arrayproxy method)": [[2, "semantique.ArrayProxy.assign"]], "assign_space() (semantique.arrayproxy method)": [[3, "semantique.ArrayProxy.assign_space"]], "assign_time() (semantique.arrayproxy method)": [[4, "semantique.ArrayProxy.assign_time"]], "delineate() (semantique.arrayproxy method)": [[5, "semantique.ArrayProxy.delineate"]], "evaluate() (semantique.arrayproxy method)": [[6, "semantique.ArrayProxy.evaluate"]], "extract() (semantique.arrayproxy method)": [[7, "semantique.ArrayProxy.extract"]], "fill() (semantique.arrayproxy method)": [[8, "semantique.ArrayProxy.fill"]], "filter() (semantique.arrayproxy method)": [[9, "semantique.ArrayProxy.filter"]], "filter_space() (semantique.arrayproxy method)": [[10, "semantique.ArrayProxy.filter_space"]], "filter_time() (semantique.arrayproxy method)": [[11, "semantique.ArrayProxy.filter_time"]], "groupby() (semantique.arrayproxy method)": [[12, "semantique.ArrayProxy.groupby"]], "groupby_space() (semantique.arrayproxy method)": [[13, "semantique.ArrayProxy.groupby_space"]], "groupby_time() (semantique.arrayproxy method)": [[14, "semantique.ArrayProxy.groupby_time"]], "name() (semantique.arrayproxy method)": [[15, "semantique.ArrayProxy.name"]], "reduce() (semantique.arrayproxy method)": [[16, "semantique.ArrayProxy.reduce"]], "shift() (semantique.arrayproxy method)": [[17, "semantique.ArrayProxy.shift"]], "smooth() (semantique.arrayproxy method)": [[18, "semantique.ArrayProxy.smooth"]], "trim() (semantique.arrayproxy method)": [[19, "semantique.ArrayProxy.trim"]], "collectionproxy (class in semantique)": [[20, "semantique.CollectionProxy"]], "__init__() (semantique.collectionproxy method)": [[20, "semantique.CollectionProxy.__init__"]], "apply_custom() (semantique.collectionproxy method)": [[21, "semantique.CollectionProxy.apply_custom"]], "assign() (semantique.collectionproxy method)": [[22, "semantique.CollectionProxy.assign"]], "assign_space() (semantique.collectionproxy method)": [[23, "semantique.CollectionProxy.assign_space"]], "assign_time() (semantique.collectionproxy method)": [[24, "semantique.CollectionProxy.assign_time"]], "compose() (semantique.collectionproxy method)": [[25, "semantique.CollectionProxy.compose"]], "concatenate() (semantique.collectionproxy method)": [[26, "semantique.CollectionProxy.concatenate"]], "delineate() (semantique.collectionproxy method)": [[27, "semantique.CollectionProxy.delineate"]], "evaluate() (semantique.collectionproxy method)": [[28, "semantique.CollectionProxy.evaluate"]], "extract() (semantique.collectionproxy method)": [[29, "semantique.CollectionProxy.extract"]], "fill() (semantique.collectionproxy method)": [[30, "semantique.CollectionProxy.fill"]], "filter() (semantique.collectionproxy method)": [[31, "semantique.CollectionProxy.filter"]], "filter_space() (semantique.collectionproxy method)": [[32, "semantique.CollectionProxy.filter_space"]], "filter_time() (semantique.collectionproxy method)": [[33, "semantique.CollectionProxy.filter_time"]], "merge() (semantique.collectionproxy method)": [[34, "semantique.CollectionProxy.merge"]], "reduce() (semantique.collectionproxy method)": [[35, "semantique.CollectionProxy.reduce"]], "shift() (semantique.collectionproxy method)": [[36, "semantique.CollectionProxy.shift"]], "smooth() (semantique.collectionproxy method)": [[37, "semantique.CollectionProxy.smooth"]], "trim() (semantique.collectionproxy method)": [[38, "semantique.CollectionProxy.trim"]], "queryrecipe (class in semantique)": [[39, "semantique.QueryRecipe"]], "__init__() (semantique.queryrecipe method)": [[39, "semantique.QueryRecipe.__init__"]], "execute() (semantique.queryrecipe method)": [[40, "semantique.QueryRecipe.execute"]], "appearance() (in module semantique)": [[41, "semantique.appearance"]], "artifacts() (in module semantique)": [[42, "semantique.artifacts"]], "atmosphere() (in module semantique)": [[43, "semantique.atmosphere"]], "collection() (in module semantique)": [[44, "semantique.collection"]], "__init__() (semantique.components.space method)": [[45, "semantique.components.space.__init__"]], "space (class in semantique.components)": [[45, "semantique.components.space"]], "feature (semantique.components.space attribute)": [[46, "semantique.components.space.FEATURE"]], "x (semantique.components.space attribute)": [[47, "semantique.components.space.X"]], "y (semantique.components.space attribute)": [[48, "semantique.components.space.Y"]], "__init__() (semantique.components.time method)": [[49, "semantique.components.time.__init__"]], "time (class in semantique.components)": [[49, "semantique.components.time"]], "day (semantique.components.time attribute)": [[50, "semantique.components.time.DAY"]], "day_of_week (semantique.components.time attribute)": [[51, "semantique.components.time.DAY_OF_WEEK"]], "day_of_year (semantique.components.time attribute)": [[52, "semantique.components.time.DAY_OF_YEAR"]], "hour (semantique.components.time attribute)": [[53, "semantique.components.time.HOUR"]], "minute (semantique.components.time attribute)": [[54, "semantique.components.time.MINUTE"]], "month (semantique.components.time attribute)": [[55, "semantique.components.time.MONTH"]], "quarter (semantique.components.time attribute)": [[56, "semantique.components.time.QUARTER"]], "season (semantique.components.time attribute)": [[57, "semantique.components.time.SEASON"]], "second (semantique.components.time attribute)": [[58, "semantique.components.time.SECOND"]], "week (semantique.components.time attribute)": [[59, "semantique.components.time.WEEK"]], "year (semantique.components.time attribute)": [[60, "semantique.components.time.YEAR"]], "concept() (in module semantique)": [[61, "semantique.concept"]], "datacube (class in semantique.datacube)": [[62, "semantique.datacube.Datacube"]], "__init__() (semantique.datacube.datacube method)": [[62, "semantique.datacube.Datacube.__init__"]], "layout (semantique.datacube.datacube property)": [[63, "semantique.datacube.Datacube.layout"]], "lookup() (semantique.datacube.datacube method)": [[64, "semantique.datacube.Datacube.lookup"]], "retrieve() (semantique.datacube.datacube method)": [[65, "semantique.datacube.Datacube.retrieve"]], "geotiffarchive (class in semantique.datacube)": [[66, "semantique.datacube.GeotiffArchive"]], "__init__() (semantique.datacube.geotiffarchive method)": [[66, "semantique.datacube.GeotiffArchive.__init__"]], "config (semantique.datacube.geotiffarchive property)": [[67, "semantique.datacube.GeotiffArchive.config"]], "layout (semantique.datacube.geotiffarchive property)": [[68, "semantique.datacube.GeotiffArchive.layout"]], "lookup() (semantique.datacube.geotiffarchive method)": [[69, "semantique.datacube.GeotiffArchive.lookup"]], "retrieve() (semantique.datacube.geotiffarchive method)": [[70, "semantique.datacube.GeotiffArchive.retrieve"]], "src (semantique.datacube.geotiffarchive property)": [[71, "semantique.datacube.GeotiffArchive.src"]], "tz (semantique.datacube.geotiffarchive property)": [[72, "semantique.datacube.GeotiffArchive.tz"]], "opendatacube (class in semantique.datacube)": [[73, "semantique.datacube.Opendatacube"]], "__init__() (semantique.datacube.opendatacube method)": [[73, "semantique.datacube.Opendatacube.__init__"]], "config (semantique.datacube.opendatacube property)": [[74, "semantique.datacube.Opendatacube.config"]], "connection (semantique.datacube.opendatacube property)": [[75, "semantique.datacube.Opendatacube.connection"]], "layout (semantique.datacube.opendatacube property)": [[76, "semantique.datacube.Opendatacube.layout"]], "lookup() (semantique.datacube.opendatacube method)": [[77, "semantique.datacube.Opendatacube.lookup"]], "retrieve() (semantique.datacube.opendatacube method)": [[78, "semantique.datacube.Opendatacube.retrieve"]], "tz (semantique.datacube.opendatacube property)": [[79, "semantique.datacube.Opendatacube.tz"]], "space (in module semantique.dimensions)": [[80, "semantique.dimensions.SPACE"]], "time (in module semantique.dimensions)": [[81, "semantique.dimensions.TIME"]], "x (in module semantique.dimensions)": [[82, "semantique.dimensions.X"]], "y (in module semantique.dimensions)": [[83, "semantique.dimensions.Y"]], "entity() (in module semantique)": [[84, "semantique.entity"]], "event() (in module semantique)": [[85, "semantique.event"]], "alignmenterror": [[86, "semantique.exceptions.AlignmentError"]], "emptydataerror": [[87, "semantique.exceptions.EmptyDataError"]], "invalidbuildingblockerror": [[88, "semantique.exceptions.InvalidBuildingBlockError"]], "invalidintervalerror": [[89, "semantique.exceptions.InvalidIntervalError"]], "invalidvaluetypeerror": [[90, "semantique.exceptions.InvalidValueTypeError"]], "missingdimensionerror": [[91, "semantique.exceptions.MissingDimensionError"]], "mixeddimensionserror": [[92, "semantique.exceptions.MixedDimensionsError"]], "mixedtimezoneserror": [[93, "semantique.exceptions.MixedTimeZonesError"]], "reserveddimensionerror": [[94, "semantique.exceptions.ReservedDimensionError"]], "toomanydimensionserror": [[95, "semantique.exceptions.TooManyDimensionsError"]], "unknowncomponenterror": [[96, "semantique.exceptions.UnknownComponentError"]], "unknownconcepterror": [[97, "semantique.exceptions.UnknownConceptError"]], "unknowndimensionerror": [[98, "semantique.exceptions.UnknownDimensionError"]], "unknownlabelerror": [[99, "semantique.exceptions.UnknownLabelError"]], "unknownlayererror": [[100, "semantique.exceptions.UnknownLayerError"]], "unknownoperatorerror": [[101, "semantique.exceptions.UnknownOperatorError"]], "unknownreducererror": [[102, "semantique.exceptions.UnknownReducerError"]], "unknownresulterror": [[103, "semantique.exceptions.UnknownResultError"]], "unknownverberror": [[104, "semantique.exceptions.UnknownVerbError"]], "spatialextent (class in semantique.extent)": [[105, "semantique.extent.SpatialExtent"]], "__init__() (semantique.extent.spatialextent method)": [[105, "semantique.extent.SpatialExtent.__init__"]], "crs (semantique.extent.spatialextent property)": [[106, "semantique.extent.SpatialExtent.crs"]], "features (semantique.extent.spatialextent property)": [[107, "semantique.extent.SpatialExtent.features"]], "from_feature() (semantique.extent.spatialextent class method)": [[108, "semantique.extent.SpatialExtent.from_feature"]], "from_featurecollection() (semantique.extent.spatialextent class method)": [[109, "semantique.extent.SpatialExtent.from_featurecollection"]], "from_geojson() (semantique.extent.spatialextent class method)": [[110, "semantique.extent.SpatialExtent.from_geojson"]], "from_geometry() (semantique.extent.spatialextent class method)": [[111, "semantique.extent.SpatialExtent.from_geometry"]], "rasterize() (semantique.extent.spatialextent method)": [[112, "semantique.extent.SpatialExtent.rasterize"]], "temporalextent (class in semantique.extent)": [[113, "semantique.extent.TemporalExtent"]], "__init__() (semantique.extent.temporalextent method)": [[113, "semantique.extent.TemporalExtent.__init__"]], "discretize() (semantique.extent.temporalextent method)": [[114, "semantique.extent.TemporalExtent.discretize"]], "end (semantique.extent.temporalextent property)": [[115, "semantique.extent.TemporalExtent.end"]], "start (semantique.extent.temporalextent property)": [[116, "semantique.extent.TemporalExtent.start"]], "tz (semantique.extent.temporalextent property)": [[117, "semantique.extent.TemporalExtent.tz"]], "geometry() (in module semantique)": [[118, "semantique.geometry"]], "interval() (in module semantique)": [[119, "semantique.interval"]], "label() (in module semantique)": [[120, "semantique.label"]], "layer() (in module semantique)": [[121, "semantique.layer"]], "mapping (class in semantique.mapping)": [[122, "semantique.mapping.Mapping"]], "__init__() (semantique.mapping.mapping method)": [[122, "semantique.mapping.Mapping.__init__"]], "lookup() (semantique.mapping.mapping method)": [[123, "semantique.mapping.Mapping.lookup"]], "translate() (semantique.mapping.mapping method)": [[124, "semantique.mapping.Mapping.translate"]], "semantique (class in semantique.mapping)": [[125, "semantique.mapping.Semantique"]], "__init__() (semantique.mapping.semantique method)": [[125, "semantique.mapping.Semantique.__init__"]], "lookup() (semantique.mapping.semantique method)": [[126, "semantique.mapping.Semantique.lookup"]], "translate() (semantique.mapping.semantique method)": [[127, "semantique.mapping.Semantique.translate"]], "absolute (in module semantique.operators)": [[128, "semantique.operators.ABSOLUTE"]], "add (in module semantique.operators)": [[129, "semantique.operators.ADD"]], "after (in module semantique.operators)": [[130, "semantique.operators.AFTER"]], "and (in module semantique.operators)": [[131, "semantique.operators.AND"]], "before (in module semantique.operators)": [[132, "semantique.operators.BEFORE"]], "ceiling (in module semantique.operators)": [[133, "semantique.operators.CEILING"]], "cosecant (in module semantique.operators)": [[134, "semantique.operators.COSECANT"]], "cosine (in module semantique.operators)": [[135, "semantique.operators.COSINE"]], "cotangent (in module semantique.operators)": [[136, "semantique.operators.COTANGENT"]], "cube_root (in module semantique.operators)": [[137, "semantique.operators.CUBE_ROOT"]], "divide (in module semantique.operators)": [[138, "semantique.operators.DIVIDE"]], "during (in module semantique.operators)": [[139, "semantique.operators.DURING"]], "equal (in module semantique.operators)": [[140, "semantique.operators.EQUAL"]], "exclusive_or (in module semantique.operators)": [[141, "semantique.operators.EXCLUSIVE_OR"]], "exponential (in module semantique.operators)": [[142, "semantique.operators.EXPONENTIAL"]], "floor (in module semantique.operators)": [[143, "semantique.operators.FLOOR"]], "greater (in module semantique.operators)": [[144, "semantique.operators.GREATER"]], "greater_equal (in module semantique.operators)": [[145, "semantique.operators.GREATER_EQUAL"]], "in (in module semantique.operators)": [[146, "semantique.operators.IN"]], "intersects (in module semantique.operators)": [[147, "semantique.operators.INTERSECTS"]], "is_missing (in module semantique.operators)": [[148, "semantique.operators.IS_MISSING"]], "less (in module semantique.operators)": [[149, "semantique.operators.LESS"]], "less_equal (in module semantique.operators)": [[150, "semantique.operators.LESS_EQUAL"]], "multiply (in module semantique.operators)": [[151, "semantique.operators.MULTIPLY"]], "natural_logarithm (in module semantique.operators)": [[152, "semantique.operators.NATURAL_LOGARITHM"]], "normalized_difference (in module semantique.operators)": [[153, "semantique.operators.NORMALIZED_DIFFERENCE"]], "not (in module semantique.operators)": [[154, "semantique.operators.NOT"]], "not_equal (in module semantique.operators)": [[155, "semantique.operators.NOT_EQUAL"]], "not_in (in module semantique.operators)": [[156, "semantique.operators.NOT_IN"]], "not_missing (in module semantique.operators)": [[157, "semantique.operators.NOT_MISSING"]], "or (in module semantique.operators)": [[158, "semantique.operators.OR"]], "power (in module semantique.operators)": [[159, "semantique.operators.POWER"]], "secant (in module semantique.operators)": [[160, "semantique.operators.SECANT"]], "sine (in module semantique.operators)": [[161, "semantique.operators.SINE"]], "square_root (in module semantique.operators)": [[162, "semantique.operators.SQUARE_ROOT"]], "subtract (in module semantique.operators)": [[163, "semantique.operators.SUBTRACT"]], "tangent (in module semantique.operators)": [[164, "semantique.operators.TANGENT"]], "to_degrees (in module semantique.operators)": [[165, "semantique.operators.TO_DEGREES"]], "to_radians (in module semantique.operators)": [[166, "semantique.operators.TO_RADIANS"]], "array (class in semantique.processor.arrays)": [[167, "semantique.processor.arrays.Array"]], "__init__() (semantique.processor.arrays.array method)": [[167, "semantique.processor.arrays.Array.__init__"]], "align_with() (semantique.processor.arrays.array method)": [[168, "semantique.processor.arrays.Array.align_with"]], "apply_custom() (semantique.processor.arrays.array method)": [[169, "semantique.processor.arrays.Array.apply_custom"]], "assign() (semantique.processor.arrays.array method)": [[170, "semantique.processor.arrays.Array.assign"]], "crs (semantique.processor.arrays.array property)": [[171, "semantique.processor.arrays.Array.crs"]], "delineate() (semantique.processor.arrays.array method)": [[172, "semantique.processor.arrays.Array.delineate"]], "drop_non_dimension_coords() (semantique.processor.arrays.array method)": [[173, "semantique.processor.arrays.Array.drop_non_dimension_coords"]], "evaluate() (semantique.processor.arrays.array method)": [[174, "semantique.processor.arrays.Array.evaluate"]], "extract() (semantique.processor.arrays.array method)": [[175, "semantique.processor.arrays.Array.extract"]], "fill() (semantique.processor.arrays.array method)": [[176, "semantique.processor.arrays.Array.fill"]], "filter() (semantique.processor.arrays.array method)": [[177, "semantique.processor.arrays.Array.filter"]], "grid_points (semantique.processor.arrays.array property)": [[178, "semantique.processor.arrays.Array.grid_points"]], "groupby() (semantique.processor.arrays.array method)": [[179, "semantique.processor.arrays.Array.groupby"]], "is_empty (semantique.processor.arrays.array property)": [[180, "semantique.processor.arrays.Array.is_empty"]], "name() (semantique.processor.arrays.array method)": [[181, "semantique.processor.arrays.Array.name"]], "reduce() (semantique.processor.arrays.array method)": [[182, "semantique.processor.arrays.Array.reduce"]], "regularize() (semantique.processor.arrays.array method)": [[183, "semantique.processor.arrays.Array.regularize"]], "reproject() (semantique.processor.arrays.array method)": [[184, "semantique.processor.arrays.Array.reproject"]], "shift() (semantique.processor.arrays.array method)": [[185, "semantique.processor.arrays.Array.shift"]], "smooth() (semantique.processor.arrays.array method)": [[186, "semantique.processor.arrays.Array.smooth"]], "spatial_resolution (semantique.processor.arrays.array property)": [[187, "semantique.processor.arrays.Array.spatial_resolution"]], "stack_all_dims() (semantique.processor.arrays.array method)": [[188, "semantique.processor.arrays.Array.stack_all_dims"]], "stack_spatial_dims() (semantique.processor.arrays.array method)": [[189, "semantique.processor.arrays.Array.stack_spatial_dims"]], "to_csv() (semantique.processor.arrays.array method)": [[190, "semantique.processor.arrays.Array.to_csv"]], "to_dataframe() (semantique.processor.arrays.array method)": [[191, "semantique.processor.arrays.Array.to_dataframe"]], "to_geodataframe() (semantique.processor.arrays.array method)": [[192, "semantique.processor.arrays.Array.to_geodataframe"]], "to_geotiff() (semantique.processor.arrays.array method)": [[193, "semantique.processor.arrays.Array.to_geotiff"]], "trim() (semantique.processor.arrays.array method)": [[194, "semantique.processor.arrays.Array.trim"]], "tz (semantique.processor.arrays.array property)": [[195, "semantique.processor.arrays.Array.tz"]], "tz_convert() (semantique.processor.arrays.array method)": [[196, "semantique.processor.arrays.Array.tz_convert"]], "unstack_all_dims() (semantique.processor.arrays.array method)": [[197, "semantique.processor.arrays.Array.unstack_all_dims"]], "unstack_spatial_dims() (semantique.processor.arrays.array method)": [[198, "semantique.processor.arrays.Array.unstack_spatial_dims"]], "value_labels (semantique.processor.arrays.array property)": [[199, "semantique.processor.arrays.Array.value_labels"]], "value_type (semantique.processor.arrays.array property)": [[200, "semantique.processor.arrays.Array.value_type"]], "write_crs() (semantique.processor.arrays.array method)": [[201, "semantique.processor.arrays.Array.write_crs"]], "write_tz() (semantique.processor.arrays.array method)": [[202, "semantique.processor.arrays.Array.write_tz"]], "collection (class in semantique.processor.arrays)": [[203, "semantique.processor.arrays.Collection"]], "__init__() (semantique.processor.arrays.collection method)": [[203, "semantique.processor.arrays.Collection.__init__"]], "apply_custom() (semantique.processor.arrays.collection method)": [[204, "semantique.processor.arrays.Collection.apply_custom"]], "assign() (semantique.processor.arrays.collection method)": [[205, "semantique.processor.arrays.Collection.assign"]], "compose() (semantique.processor.arrays.collection method)": [[206, "semantique.processor.arrays.Collection.compose"]], "concatenate() (semantique.processor.arrays.collection method)": [[207, "semantique.processor.arrays.Collection.concatenate"]], "delineate() (semantique.processor.arrays.collection method)": [[208, "semantique.processor.arrays.Collection.delineate"]], "evaluate() (semantique.processor.arrays.collection method)": [[209, "semantique.processor.arrays.Collection.evaluate"]], "extract() (semantique.processor.arrays.collection method)": [[210, "semantique.processor.arrays.Collection.extract"]], "fill() (semantique.processor.arrays.collection method)": [[211, "semantique.processor.arrays.Collection.fill"]], "filter() (semantique.processor.arrays.collection method)": [[212, "semantique.processor.arrays.Collection.filter"]], "is_empty (semantique.processor.arrays.collection property)": [[213, "semantique.processor.arrays.Collection.is_empty"]], "merge() (semantique.processor.arrays.collection method)": [[214, "semantique.processor.arrays.Collection.merge"]], "name() (semantique.processor.arrays.collection method)": [[215, "semantique.processor.arrays.Collection.name"]], "reduce() (semantique.processor.arrays.collection method)": [[216, "semantique.processor.arrays.Collection.reduce"]], "regularize() (semantique.processor.arrays.collection method)": [[217, "semantique.processor.arrays.Collection.regularize"]], "shift() (semantique.processor.arrays.collection method)": [[218, "semantique.processor.arrays.Collection.shift"]], "smooth() (semantique.processor.arrays.collection method)": [[219, "semantique.processor.arrays.Collection.smooth"]], "sq (semantique.processor.arrays.collection property)": [[220, "semantique.processor.arrays.Collection.sq"]], "stack_spatial_dims() (semantique.processor.arrays.collection method)": [[221, "semantique.processor.arrays.Collection.stack_spatial_dims"]], "trim() (semantique.processor.arrays.collection method)": [[222, "semantique.processor.arrays.Collection.trim"]], "unstack_spatial_dims() (semantique.processor.arrays.collection method)": [[223, "semantique.processor.arrays.Collection.unstack_spatial_dims"]], "queryprocessor (class in semantique.processor.core)": [[224, "semantique.processor.core.QueryProcessor"]], "__init__() (semantique.processor.core.queryprocessor method)": [[224, "semantique.processor.core.QueryProcessor.__init__"]], "add_custom_operator() (semantique.processor.core.queryprocessor method)": [[225, "semantique.processor.core.QueryProcessor.add_custom_operator"]], "add_custom_reducer() (semantique.processor.core.queryprocessor method)": [[226, "semantique.processor.core.QueryProcessor.add_custom_reducer"]], "add_custom_verb() (semantique.processor.core.queryprocessor method)": [[227, "semantique.processor.core.QueryProcessor.add_custom_verb"]], "call_handler() (semantique.processor.core.queryprocessor method)": [[228, "semantique.processor.core.QueryProcessor.call_handler"]], "call_verb() (semantique.processor.core.queryprocessor method)": [[229, "semantique.processor.core.QueryProcessor.call_verb"]], "crs (semantique.processor.core.queryprocessor property)": [[230, "semantique.processor.core.QueryProcessor.crs"]], "custom_operators (semantique.processor.core.queryprocessor property)": [[231, "semantique.processor.core.QueryProcessor.custom_operators"]], "custom_reducers (semantique.processor.core.queryprocessor property)": [[232, "semantique.processor.core.QueryProcessor.custom_reducers"]], "custom_verbs (semantique.processor.core.queryprocessor property)": [[233, "semantique.processor.core.QueryProcessor.custom_verbs"]], "datacube (semantique.processor.core.queryprocessor property)": [[234, "semantique.processor.core.QueryProcessor.datacube"]], "execute() (semantique.processor.core.queryprocessor method)": [[235, "semantique.processor.core.QueryProcessor.execute"]], "extent (semantique.processor.core.queryprocessor property)": [[236, "semantique.processor.core.QueryProcessor.extent"]], "get_operator() (semantique.processor.core.queryprocessor method)": [[237, "semantique.processor.core.QueryProcessor.get_operator"]], "get_reducer() (semantique.processor.core.queryprocessor method)": [[238, "semantique.processor.core.QueryProcessor.get_reducer"]], "handle_apply_custom() (semantique.processor.core.queryprocessor method)": [[239, "semantique.processor.core.QueryProcessor.handle_apply_custom"]], "handle_assign() (semantique.processor.core.queryprocessor method)": [[240, "semantique.processor.core.QueryProcessor.handle_assign"]], "handle_collection() (semantique.processor.core.queryprocessor method)": [[241, "semantique.processor.core.QueryProcessor.handle_collection"]], "handle_compose() (semantique.processor.core.queryprocessor method)": [[242, "semantique.processor.core.QueryProcessor.handle_compose"]], "handle_concatenate() (semantique.processor.core.queryprocessor method)": [[243, "semantique.processor.core.QueryProcessor.handle_concatenate"]], "handle_concept() (semantique.processor.core.queryprocessor method)": [[244, "semantique.processor.core.QueryProcessor.handle_concept"]], "handle_delineate() (semantique.processor.core.queryprocessor method)": [[245, "semantique.processor.core.QueryProcessor.handle_delineate"]], "handle_evaluate() (semantique.processor.core.queryprocessor method)": [[246, "semantique.processor.core.QueryProcessor.handle_evaluate"]], "handle_extract() (semantique.processor.core.queryprocessor method)": [[247, "semantique.processor.core.QueryProcessor.handle_extract"]], "handle_fill() (semantique.processor.core.queryprocessor method)": [[248, "semantique.processor.core.QueryProcessor.handle_fill"]], "handle_filter() (semantique.processor.core.queryprocessor method)": [[249, "semantique.processor.core.QueryProcessor.handle_filter"]], "handle_geometry() (semantique.processor.core.queryprocessor method)": [[250, "semantique.processor.core.QueryProcessor.handle_geometry"]], "handle_groupby() (semantique.processor.core.queryprocessor method)": [[251, "semantique.processor.core.QueryProcessor.handle_groupby"]], "handle_interval() (semantique.processor.core.queryprocessor method)": [[252, "semantique.processor.core.QueryProcessor.handle_interval"]], "handle_label() (semantique.processor.core.queryprocessor method)": [[253, "semantique.processor.core.QueryProcessor.handle_label"]], "handle_layer() (semantique.processor.core.queryprocessor method)": [[254, "semantique.processor.core.QueryProcessor.handle_layer"]], "handle_merge() (semantique.processor.core.queryprocessor method)": [[255, "semantique.processor.core.QueryProcessor.handle_merge"]], "handle_name() (semantique.processor.core.queryprocessor method)": [[256, "semantique.processor.core.QueryProcessor.handle_name"]], "handle_processing_chain() (semantique.processor.core.queryprocessor method)": [[257, "semantique.processor.core.QueryProcessor.handle_processing_chain"]], "handle_reduce() (semantique.processor.core.queryprocessor method)": [[258, "semantique.processor.core.QueryProcessor.handle_reduce"]], "handle_result() (semantique.processor.core.queryprocessor method)": [[259, "semantique.processor.core.QueryProcessor.handle_result"]], "handle_self() (semantique.processor.core.queryprocessor method)": [[260, "semantique.processor.core.QueryProcessor.handle_self"]], "handle_set() (semantique.processor.core.queryprocessor method)": [[261, "semantique.processor.core.QueryProcessor.handle_set"]], "handle_shift() (semantique.processor.core.queryprocessor method)": [[262, "semantique.processor.core.QueryProcessor.handle_shift"]], "handle_smooth() (semantique.processor.core.queryprocessor method)": [[263, "semantique.processor.core.QueryProcessor.handle_smooth"]], "handle_time_instant() (semantique.processor.core.queryprocessor method)": [[264, "semantique.processor.core.QueryProcessor.handle_time_instant"]], "handle_time_interval() (semantique.processor.core.queryprocessor method)": [[265, "semantique.processor.core.QueryProcessor.handle_time_interval"]], "handle_trim() (semantique.processor.core.queryprocessor method)": [[266, "semantique.processor.core.QueryProcessor.handle_trim"]], "handle_verb() (semantique.processor.core.queryprocessor method)": [[267, "semantique.processor.core.QueryProcessor.handle_verb"]], "mapping (semantique.processor.core.queryprocessor property)": [[268, "semantique.processor.core.QueryProcessor.mapping"]], "optimize() (semantique.processor.core.queryprocessor method)": [[269, "semantique.processor.core.QueryProcessor.optimize"]], "parse() (semantique.processor.core.queryprocessor class method)": [[270, "semantique.processor.core.QueryProcessor.parse"]], "recipe (semantique.processor.core.queryprocessor property)": [[271, "semantique.processor.core.QueryProcessor.recipe"]], "response (semantique.processor.core.queryprocessor property)": [[272, "semantique.processor.core.QueryProcessor.response"]], "spatial_resolution (semantique.processor.core.queryprocessor property)": [[273, "semantique.processor.core.QueryProcessor.spatial_resolution"]], "track_types (semantique.processor.core.queryprocessor property)": [[274, "semantique.processor.core.QueryProcessor.track_types"]], "tz (semantique.processor.core.queryprocessor property)": [[275, "semantique.processor.core.QueryProcessor.tz"]], "absolute_() (in module semantique.processor.operators)": [[276, "semantique.processor.operators.absolute_"]], "add_() (in module semantique.processor.operators)": [[277, "semantique.processor.operators.add_"]], "after_() (in module semantique.processor.operators)": [[278, "semantique.processor.operators.after_"]], "and_() (in module semantique.processor.operators)": [[279, "semantique.processor.operators.and_"]], "before_() (in module semantique.processor.operators)": [[280, "semantique.processor.operators.before_"]], "ceiling_() (in module semantique.processor.operators)": [[281, "semantique.processor.operators.ceiling_"]], "cosecant_() (in module semantique.processor.operators)": [[282, "semantique.processor.operators.cosecant_"]], "cosine_() (in module semantique.processor.operators)": [[283, "semantique.processor.operators.cosine_"]], "cotangent_() (in module semantique.processor.operators)": [[284, "semantique.processor.operators.cotangent_"]], "cube_root_() (in module semantique.processor.operators)": [[285, "semantique.processor.operators.cube_root_"]], "divide_() (in module semantique.processor.operators)": [[286, "semantique.processor.operators.divide_"]], "during_() (in module semantique.processor.operators)": [[287, "semantique.processor.operators.during_"]], "equal_() (in module semantique.processor.operators)": [[288, "semantique.processor.operators.equal_"]], "exclusive_or_() (in module semantique.processor.operators)": [[289, "semantique.processor.operators.exclusive_or_"]], "exponential_() (in module semantique.processor.operators)": [[290, "semantique.processor.operators.exponential_"]], "floor_() (in module semantique.processor.operators)": [[291, "semantique.processor.operators.floor_"]], "greater_() (in module semantique.processor.operators)": [[292, "semantique.processor.operators.greater_"]], "greater_equal_() (in module semantique.processor.operators)": [[293, "semantique.processor.operators.greater_equal_"]], "in_() (in module semantique.processor.operators)": [[294, "semantique.processor.operators.in_"]], "intersects_() (in module semantique.processor.operators)": [[295, "semantique.processor.operators.intersects_"]], "is_missing_() (in module semantique.processor.operators)": [[296, "semantique.processor.operators.is_missing_"]], "less_() (in module semantique.processor.operators)": [[297, "semantique.processor.operators.less_"]], "less_equal_() (in module semantique.processor.operators)": [[298, "semantique.processor.operators.less_equal_"]], "multiply_() (in module semantique.processor.operators)": [[299, "semantique.processor.operators.multiply_"]], "natural_logarithm_() (in module semantique.processor.operators)": [[300, "semantique.processor.operators.natural_logarithm_"]], "normalized_difference_() (in module semantique.processor.operators)": [[301, "semantique.processor.operators.normalized_difference_"]], "not_() (in module semantique.processor.operators)": [[302, "semantique.processor.operators.not_"]], "not_equal_() (in module semantique.processor.operators)": [[303, "semantique.processor.operators.not_equal_"]], "not_in_() (in module semantique.processor.operators)": [[304, "semantique.processor.operators.not_in_"]], "not_missing_() (in module semantique.processor.operators)": [[305, "semantique.processor.operators.not_missing_"]], "or_() (in module semantique.processor.operators)": [[306, "semantique.processor.operators.or_"]], "power_() (in module semantique.processor.operators)": [[307, "semantique.processor.operators.power_"]], "secant_() (in module semantique.processor.operators)": [[308, "semantique.processor.operators.secant_"]], "sine_() (in module semantique.processor.operators)": [[309, "semantique.processor.operators.sine_"]], "square_root_() (in module semantique.processor.operators)": [[310, "semantique.processor.operators.square_root_"]], "subtract_() (in module semantique.processor.operators)": [[311, "semantique.processor.operators.subtract_"]], "tangent_() (in module semantique.processor.operators)": [[312, "semantique.processor.operators.tangent_"]], "to_degrees_() (in module semantique.processor.operators)": [[313, "semantique.processor.operators.to_degrees_"]], "to_radians_() (in module semantique.processor.operators)": [[314, "semantique.processor.operators.to_radians_"]], "all_() (in module semantique.processor.reducers)": [[315, "semantique.processor.reducers.all_"]], "any_() (in module semantique.processor.reducers)": [[316, "semantique.processor.reducers.any_"]], "count_() (in module semantique.processor.reducers)": [[317, "semantique.processor.reducers.count_"]], "first_() (in module semantique.processor.reducers)": [[318, "semantique.processor.reducers.first_"]], "last_() (in module semantique.processor.reducers)": [[319, "semantique.processor.reducers.last_"]], "max_() (in module semantique.processor.reducers)": [[320, "semantique.processor.reducers.max_"]], "mean_() (in module semantique.processor.reducers)": [[321, "semantique.processor.reducers.mean_"]], "median_() (in module semantique.processor.reducers)": [[322, "semantique.processor.reducers.median_"]], "min_() (in module semantique.processor.reducers)": [[323, "semantique.processor.reducers.min_"]], "mode_() (in module semantique.processor.reducers)": [[324, "semantique.processor.reducers.mode_"]], "n_() (in module semantique.processor.reducers)": [[325, "semantique.processor.reducers.n_"]], "none_() (in module semantique.processor.reducers)": [[326, "semantique.processor.reducers.none_"]], "percentage_() (in module semantique.processor.reducers)": [[327, "semantique.processor.reducers.percentage_"]], "product_() (in module semantique.processor.reducers)": [[328, "semantique.processor.reducers.product_"]], "range_() (in module semantique.processor.reducers)": [[329, "semantique.processor.reducers.range_"]], "standard_deviation_() (in module semantique.processor.reducers)": [[330, "semantique.processor.reducers.standard_deviation_"]], "sum_() (in module semantique.processor.reducers)": [[331, "semantique.processor.reducers.sum_"]], "variance_() (in module semantique.processor.reducers)": [[332, "semantique.processor.reducers.variance_"]], "dtype_mapping (in module semantique.processor.types)": [[333, "semantique.processor.types.DTYPE_MAPPING"]], "type_promotion_manuals (in module semantique.processor.types)": [[334, "semantique.processor.types.TYPE_PROMOTION_MANUALS"]], "typepromoter (class in semantique.processor.types)": [[335, "semantique.processor.types.TypePromoter"]], "__init__() (semantique.processor.types.typepromoter method)": [[335, "semantique.processor.types.TypePromoter.__init__"]], "check() (semantique.processor.types.typepromoter method)": [[336, "semantique.processor.types.TypePromoter.check"]], "input_labels (semantique.processor.types.typepromoter property)": [[337, "semantique.processor.types.TypePromoter.input_labels"]], "input_types (semantique.processor.types.typepromoter property)": [[338, "semantique.processor.types.TypePromoter.input_types"]], "manual (semantique.processor.types.typepromoter property)": [[339, "semantique.processor.types.TypePromoter.manual"]], "output_labels (semantique.processor.types.typepromoter property)": [[340, "semantique.processor.types.TypePromoter.output_labels"]], "output_type (semantique.processor.types.typepromoter property)": [[341, "semantique.processor.types.TypePromoter.output_type"]], "promote() (semantique.processor.types.typepromoter method)": [[342, "semantique.processor.types.TypePromoter.promote"]], "get_value_labels() (in module semantique.processor.types)": [[343, "semantique.processor.types.get_value_labels"]], "get_value_type() (in module semantique.processor.types)": [[344, "semantique.processor.types.get_value_type"]], "allnull() (in module semantique.processor.utils)": [[345, "semantique.processor.utils.allnull"]], "convert_datetime64() (in module semantique.processor.utils)": [[346, "semantique.processor.utils.convert_datetime64"]], "datetime64_as_unix() (in module semantique.processor.utils)": [[347, "semantique.processor.utils.datetime64_as_unix"]], "get_null() (in module semantique.processor.utils)": [[348, "semantique.processor.utils.get_null"]], "inf_as_null() (in module semantique.processor.utils)": [[349, "semantique.processor.utils.inf_as_null"]], "null_as_zero() (in module semantique.processor.utils)": [[350, "semantique.processor.utils.null_as_zero"]], "parse_datetime_component() (in module semantique.processor.utils)": [[351, "semantique.processor.utils.parse_datetime_component"]], "parse_extent() (in module semantique.processor.utils)": [[352, "semantique.processor.utils.parse_extent"]], "interval (class in semantique.processor.values)": [[353, "semantique.processor.values.Interval"]], "__init__() (semantique.processor.values.interval method)": [[353, "semantique.processor.values.Interval.__init__"]], "lower (semantique.processor.values.interval property)": [[354, "semantique.processor.values.Interval.lower"]], "sq (semantique.processor.values.interval property)": [[355, "semantique.processor.values.Interval.sq"]], "upper (semantique.processor.values.interval property)": [[356, "semantique.processor.values.Interval.upper"]], "value_type (semantique.processor.values.interval property)": [[357, "semantique.processor.values.Interval.value_type"]], "all (in module semantique.reducers)": [[358, "semantique.reducers.ALL"]], "any (in module semantique.reducers)": [[359, "semantique.reducers.ANY"]], "count (in module semantique.reducers)": [[360, "semantique.reducers.COUNT"]], "first (in module semantique.reducers)": [[361, "semantique.reducers.FIRST"]], "last (in module semantique.reducers)": [[362, "semantique.reducers.LAST"]], "max (in module semantique.reducers)": [[363, "semantique.reducers.MAX"]], "mean (in module semantique.reducers)": [[364, "semantique.reducers.MEAN"]], "median (in module semantique.reducers)": [[365, "semantique.reducers.MEDIAN"]], "min (in module semantique.reducers)": [[366, "semantique.reducers.MIN"]], "mode (in module semantique.reducers)": [[367, "semantique.reducers.MODE"]], "n (in module semantique.reducers)": [[368, "semantique.reducers.N"]], "none (in module semantique.reducers)": [[369, "semantique.reducers.NONE"]], "percentage (in module semantique.reducers)": [[370, "semantique.reducers.PERCENTAGE"]], "product (in module semantique.reducers)": [[371, "semantique.reducers.PRODUCT"]], "range (in module semantique.reducers)": [[372, "semantique.reducers.RANGE"]], "standard_deviation (in module semantique.reducers)": [[373, "semantique.reducers.STANDARD_DEVIATION"]], "sum (in module semantique.reducers)": [[374, "semantique.reducers.SUM"]], "variance (in module semantique.reducers)": [[375, "semantique.reducers.VARIANCE"]], "reflectance() (in module semantique)": [[376, "semantique.reflectance"]], "result() (in module semantique)": [[377, "semantique.result"]], "self() (in module semantique)": [[378, "semantique.self"]], "set() (in module semantique)": [[379, "semantique.set"]], "time_instant() (in module semantique)": [[380, "semantique.time_instant"]], "time_interval() (in module semantique)": [[381, "semantique.time_interval"]], "topography() (in module semantique)": [[382, "semantique.topography"]]}})