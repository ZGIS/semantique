Search.setIndex({"docnames": ["_generated/semantique.ArrayProxy", "_generated/semantique.ArrayProxy.apply_custom", "_generated/semantique.ArrayProxy.assign", "_generated/semantique.ArrayProxy.assign_space", "_generated/semantique.ArrayProxy.assign_time", "_generated/semantique.ArrayProxy.delineate", "_generated/semantique.ArrayProxy.evaluate", "_generated/semantique.ArrayProxy.extract", "_generated/semantique.ArrayProxy.fill", "_generated/semantique.ArrayProxy.filter", "_generated/semantique.ArrayProxy.filter_space", "_generated/semantique.ArrayProxy.filter_time", "_generated/semantique.ArrayProxy.groupby", "_generated/semantique.ArrayProxy.groupby_space", "_generated/semantique.ArrayProxy.groupby_time", "_generated/semantique.ArrayProxy.name", "_generated/semantique.ArrayProxy.reduce", "_generated/semantique.ArrayProxy.shift", "_generated/semantique.ArrayProxy.smooth", "_generated/semantique.ArrayProxy.trim", "_generated/semantique.CollectionProxy", "_generated/semantique.CollectionProxy.apply_custom", "_generated/semantique.CollectionProxy.assign", "_generated/semantique.CollectionProxy.assign_space", "_generated/semantique.CollectionProxy.assign_time", "_generated/semantique.CollectionProxy.compose", "_generated/semantique.CollectionProxy.concatenate", "_generated/semantique.CollectionProxy.delineate", "_generated/semantique.CollectionProxy.evaluate", "_generated/semantique.CollectionProxy.extract", "_generated/semantique.CollectionProxy.fill", "_generated/semantique.CollectionProxy.filter", "_generated/semantique.CollectionProxy.filter_space", "_generated/semantique.CollectionProxy.filter_time", "_generated/semantique.CollectionProxy.merge", "_generated/semantique.CollectionProxy.reduce", "_generated/semantique.CollectionProxy.shift", "_generated/semantique.CollectionProxy.smooth", "_generated/semantique.CollectionProxy.trim", "_generated/semantique.QueryRecipe", "_generated/semantique.QueryRecipe.execute", "_generated/semantique.appearance", "_generated/semantique.artifacts", "_generated/semantique.atmosphere", "_generated/semantique.collection", "_generated/semantique.components.space", "_generated/semantique.components.space.FEATURE", "_generated/semantique.components.space.X", "_generated/semantique.components.space.Y", "_generated/semantique.components.time", "_generated/semantique.components.time.DAY", "_generated/semantique.components.time.DAY_OF_WEEK", "_generated/semantique.components.time.DAY_OF_YEAR", "_generated/semantique.components.time.HOUR", "_generated/semantique.components.time.MINUTE", "_generated/semantique.components.time.MONTH", "_generated/semantique.components.time.QUARTER", "_generated/semantique.components.time.SEASON", "_generated/semantique.components.time.SECOND", "_generated/semantique.components.time.WEEK", "_generated/semantique.components.time.YEAR", "_generated/semantique.concept", "_generated/semantique.datacube.Datacube", "_generated/semantique.datacube.Datacube.layout", "_generated/semantique.datacube.Datacube.lookup", "_generated/semantique.datacube.Datacube.retrieve", "_generated/semantique.datacube.GeotiffArchive", "_generated/semantique.datacube.GeotiffArchive.config", "_generated/semantique.datacube.GeotiffArchive.layout", "_generated/semantique.datacube.GeotiffArchive.lookup", "_generated/semantique.datacube.GeotiffArchive.retrieve", "_generated/semantique.datacube.GeotiffArchive.src", "_generated/semantique.datacube.GeotiffArchive.tz", "_generated/semantique.datacube.Opendatacube", "_generated/semantique.datacube.Opendatacube.config", "_generated/semantique.datacube.Opendatacube.connection", "_generated/semantique.datacube.Opendatacube.layout", "_generated/semantique.datacube.Opendatacube.lookup", "_generated/semantique.datacube.Opendatacube.retrieve", "_generated/semantique.datacube.Opendatacube.tz", "_generated/semantique.datacube.STACCube", "_generated/semantique.datacube.STACCube.config", "_generated/semantique.datacube.STACCube.layout", "_generated/semantique.datacube.STACCube.lookup", "_generated/semantique.datacube.STACCube.retrieve", "_generated/semantique.datacube.STACCube.src", "_generated/semantique.dimensions.SPACE", "_generated/semantique.dimensions.TIME", "_generated/semantique.dimensions.X", "_generated/semantique.dimensions.Y", "_generated/semantique.entity", "_generated/semantique.event", "_generated/semantique.exceptions.AlignmentError", "_generated/semantique.exceptions.EmptyDataError", "_generated/semantique.exceptions.InvalidBuildingBlockError", "_generated/semantique.exceptions.InvalidIntervalError", "_generated/semantique.exceptions.InvalidValueTypeError", "_generated/semantique.exceptions.MissingDimensionError", "_generated/semantique.exceptions.MixedDimensionsError", "_generated/semantique.exceptions.MixedTimeZonesError", "_generated/semantique.exceptions.ReservedDimensionError", "_generated/semantique.exceptions.TooManyDimensionsError", "_generated/semantique.exceptions.UnknownComponentError", "_generated/semantique.exceptions.UnknownConceptError", "_generated/semantique.exceptions.UnknownDimensionError", "_generated/semantique.exceptions.UnknownLabelError", "_generated/semantique.exceptions.UnknownLayerError", "_generated/semantique.exceptions.UnknownOperatorError", "_generated/semantique.exceptions.UnknownReducerError", "_generated/semantique.exceptions.UnknownResultError", "_generated/semantique.exceptions.UnknownVerbError", "_generated/semantique.extent.SpatialExtent", "_generated/semantique.extent.SpatialExtent.crs", "_generated/semantique.extent.SpatialExtent.features", "_generated/semantique.extent.SpatialExtent.from_feature", "_generated/semantique.extent.SpatialExtent.from_featurecollection", "_generated/semantique.extent.SpatialExtent.from_geojson", "_generated/semantique.extent.SpatialExtent.from_geometry", "_generated/semantique.extent.SpatialExtent.rasterize", "_generated/semantique.extent.TemporalExtent", "_generated/semantique.extent.TemporalExtent.discretize", "_generated/semantique.extent.TemporalExtent.end", "_generated/semantique.extent.TemporalExtent.start", "_generated/semantique.extent.TemporalExtent.tz", "_generated/semantique.geometry", "_generated/semantique.interval", "_generated/semantique.label", "_generated/semantique.layer", "_generated/semantique.mapping.Mapping", "_generated/semantique.mapping.Mapping.lookup", "_generated/semantique.mapping.Mapping.translate", "_generated/semantique.mapping.Semantique", "_generated/semantique.mapping.Semantique.lookup", "_generated/semantique.mapping.Semantique.translate", "_generated/semantique.operators.ABSOLUTE", "_generated/semantique.operators.ADD", "_generated/semantique.operators.AFTER", "_generated/semantique.operators.AND", "_generated/semantique.operators.BEFORE", "_generated/semantique.operators.CEILING", "_generated/semantique.operators.COSECANT", "_generated/semantique.operators.COSINE", "_generated/semantique.operators.COTANGENT", "_generated/semantique.operators.CUBE_ROOT", "_generated/semantique.operators.DIVIDE", "_generated/semantique.operators.DURING", "_generated/semantique.operators.EQUAL", "_generated/semantique.operators.EXCLUSIVE_OR", "_generated/semantique.operators.EXPONENTIAL", "_generated/semantique.operators.FLOOR", "_generated/semantique.operators.GREATER", "_generated/semantique.operators.GREATER_EQUAL", "_generated/semantique.operators.IN", "_generated/semantique.operators.INTERSECTS", "_generated/semantique.operators.IS_MISSING", "_generated/semantique.operators.LESS", "_generated/semantique.operators.LESS_EQUAL", "_generated/semantique.operators.MULTIPLY", "_generated/semantique.operators.NATURAL_LOGARITHM", "_generated/semantique.operators.NORMALIZED_DIFFERENCE", "_generated/semantique.operators.NOT", "_generated/semantique.operators.NOT_EQUAL", "_generated/semantique.operators.NOT_IN", "_generated/semantique.operators.NOT_MISSING", "_generated/semantique.operators.OR", "_generated/semantique.operators.POWER", "_generated/semantique.operators.SECANT", "_generated/semantique.operators.SINE", "_generated/semantique.operators.SQUARE_ROOT", "_generated/semantique.operators.SUBTRACT", "_generated/semantique.operators.TANGENT", "_generated/semantique.operators.TO_DEGREES", "_generated/semantique.operators.TO_RADIANS", "_generated/semantique.processor.arrays.Array", "_generated/semantique.processor.arrays.Array.align_with", "_generated/semantique.processor.arrays.Array.apply_custom", "_generated/semantique.processor.arrays.Array.assign", "_generated/semantique.processor.arrays.Array.crs", "_generated/semantique.processor.arrays.Array.delineate", "_generated/semantique.processor.arrays.Array.drop_non_dimension_coords", "_generated/semantique.processor.arrays.Array.evaluate", "_generated/semantique.processor.arrays.Array.extract", "_generated/semantique.processor.arrays.Array.fill", "_generated/semantique.processor.arrays.Array.filter", "_generated/semantique.processor.arrays.Array.grid_points", "_generated/semantique.processor.arrays.Array.groupby", "_generated/semantique.processor.arrays.Array.is_empty", "_generated/semantique.processor.arrays.Array.name", "_generated/semantique.processor.arrays.Array.reduce", "_generated/semantique.processor.arrays.Array.regularize", "_generated/semantique.processor.arrays.Array.reproject", "_generated/semantique.processor.arrays.Array.shift", "_generated/semantique.processor.arrays.Array.smooth", "_generated/semantique.processor.arrays.Array.spatial_resolution", "_generated/semantique.processor.arrays.Array.stack_all_dims", "_generated/semantique.processor.arrays.Array.stack_spatial_dims", "_generated/semantique.processor.arrays.Array.to_csv", "_generated/semantique.processor.arrays.Array.to_dataframe", "_generated/semantique.processor.arrays.Array.to_geodataframe", "_generated/semantique.processor.arrays.Array.to_geotiff", "_generated/semantique.processor.arrays.Array.trim", "_generated/semantique.processor.arrays.Array.tz", "_generated/semantique.processor.arrays.Array.tz_convert", "_generated/semantique.processor.arrays.Array.unstack_all_dims", "_generated/semantique.processor.arrays.Array.unstack_spatial_dims", "_generated/semantique.processor.arrays.Array.value_labels", "_generated/semantique.processor.arrays.Array.value_type", "_generated/semantique.processor.arrays.Array.write_crs", "_generated/semantique.processor.arrays.Array.write_tz", "_generated/semantique.processor.arrays.Collection", "_generated/semantique.processor.arrays.Collection.apply_custom", "_generated/semantique.processor.arrays.Collection.assign", "_generated/semantique.processor.arrays.Collection.compose", "_generated/semantique.processor.arrays.Collection.concatenate", "_generated/semantique.processor.arrays.Collection.delineate", "_generated/semantique.processor.arrays.Collection.evaluate", "_generated/semantique.processor.arrays.Collection.extract", "_generated/semantique.processor.arrays.Collection.fill", "_generated/semantique.processor.arrays.Collection.filter", "_generated/semantique.processor.arrays.Collection.is_empty", "_generated/semantique.processor.arrays.Collection.merge", "_generated/semantique.processor.arrays.Collection.name", "_generated/semantique.processor.arrays.Collection.reduce", "_generated/semantique.processor.arrays.Collection.regularize", "_generated/semantique.processor.arrays.Collection.shift", "_generated/semantique.processor.arrays.Collection.smooth", "_generated/semantique.processor.arrays.Collection.sq", "_generated/semantique.processor.arrays.Collection.stack_spatial_dims", "_generated/semantique.processor.arrays.Collection.trim", "_generated/semantique.processor.arrays.Collection.unstack_spatial_dims", "_generated/semantique.processor.core.Cache", "_generated/semantique.processor.core.Cache.build", "_generated/semantique.processor.core.Cache.data", "_generated/semantique.processor.core.Cache.load", "_generated/semantique.processor.core.Cache.seq", "_generated/semantique.processor.core.Cache.update", "_generated/semantique.processor.core.QueryProcessor", "_generated/semantique.processor.core.QueryProcessor.add_custom_operator", "_generated/semantique.processor.core.QueryProcessor.add_custom_reducer", "_generated/semantique.processor.core.QueryProcessor.add_custom_verb", "_generated/semantique.processor.core.QueryProcessor.cache", "_generated/semantique.processor.core.QueryProcessor.call_handler", "_generated/semantique.processor.core.QueryProcessor.call_verb", "_generated/semantique.processor.core.QueryProcessor.crs", "_generated/semantique.processor.core.QueryProcessor.custom_operators", "_generated/semantique.processor.core.QueryProcessor.custom_reducers", "_generated/semantique.processor.core.QueryProcessor.custom_verbs", "_generated/semantique.processor.core.QueryProcessor.datacube", "_generated/semantique.processor.core.QueryProcessor.execute", "_generated/semantique.processor.core.QueryProcessor.extent", "_generated/semantique.processor.core.QueryProcessor.get_operator", "_generated/semantique.processor.core.QueryProcessor.get_reducer", "_generated/semantique.processor.core.QueryProcessor.handle_apply_custom", "_generated/semantique.processor.core.QueryProcessor.handle_assign", "_generated/semantique.processor.core.QueryProcessor.handle_collection", "_generated/semantique.processor.core.QueryProcessor.handle_compose", "_generated/semantique.processor.core.QueryProcessor.handle_concatenate", "_generated/semantique.processor.core.QueryProcessor.handle_concept", "_generated/semantique.processor.core.QueryProcessor.handle_delineate", "_generated/semantique.processor.core.QueryProcessor.handle_evaluate", "_generated/semantique.processor.core.QueryProcessor.handle_extract", "_generated/semantique.processor.core.QueryProcessor.handle_fill", "_generated/semantique.processor.core.QueryProcessor.handle_filter", "_generated/semantique.processor.core.QueryProcessor.handle_geometry", "_generated/semantique.processor.core.QueryProcessor.handle_groupby", "_generated/semantique.processor.core.QueryProcessor.handle_interval", "_generated/semantique.processor.core.QueryProcessor.handle_label", "_generated/semantique.processor.core.QueryProcessor.handle_layer", "_generated/semantique.processor.core.QueryProcessor.handle_merge", "_generated/semantique.processor.core.QueryProcessor.handle_name", "_generated/semantique.processor.core.QueryProcessor.handle_processing_chain", "_generated/semantique.processor.core.QueryProcessor.handle_reduce", "_generated/semantique.processor.core.QueryProcessor.handle_result", "_generated/semantique.processor.core.QueryProcessor.handle_self", "_generated/semantique.processor.core.QueryProcessor.handle_set", "_generated/semantique.processor.core.QueryProcessor.handle_shift", "_generated/semantique.processor.core.QueryProcessor.handle_smooth", "_generated/semantique.processor.core.QueryProcessor.handle_time_instant", "_generated/semantique.processor.core.QueryProcessor.handle_time_interval", "_generated/semantique.processor.core.QueryProcessor.handle_trim", "_generated/semantique.processor.core.QueryProcessor.handle_verb", "_generated/semantique.processor.core.QueryProcessor.mapping", "_generated/semantique.processor.core.QueryProcessor.optimize", "_generated/semantique.processor.core.QueryProcessor.parse", "_generated/semantique.processor.core.QueryProcessor.preview", "_generated/semantique.processor.core.QueryProcessor.recipe", "_generated/semantique.processor.core.QueryProcessor.response", "_generated/semantique.processor.core.QueryProcessor.spatial_resolution", "_generated/semantique.processor.core.QueryProcessor.track_types", "_generated/semantique.processor.core.QueryProcessor.tz", "_generated/semantique.processor.operators.absolute_", "_generated/semantique.processor.operators.add_", "_generated/semantique.processor.operators.after_", "_generated/semantique.processor.operators.and_", "_generated/semantique.processor.operators.before_", "_generated/semantique.processor.operators.ceiling_", "_generated/semantique.processor.operators.cosecant_", "_generated/semantique.processor.operators.cosine_", "_generated/semantique.processor.operators.cotangent_", "_generated/semantique.processor.operators.cube_root_", "_generated/semantique.processor.operators.divide_", "_generated/semantique.processor.operators.during_", "_generated/semantique.processor.operators.equal_", "_generated/semantique.processor.operators.exclusive_or_", "_generated/semantique.processor.operators.exponential_", "_generated/semantique.processor.operators.floor_", "_generated/semantique.processor.operators.greater_", "_generated/semantique.processor.operators.greater_equal_", "_generated/semantique.processor.operators.in_", "_generated/semantique.processor.operators.intersects_", "_generated/semantique.processor.operators.is_missing_", "_generated/semantique.processor.operators.less_", "_generated/semantique.processor.operators.less_equal_", "_generated/semantique.processor.operators.multiply_", "_generated/semantique.processor.operators.natural_logarithm_", "_generated/semantique.processor.operators.normalized_difference_", "_generated/semantique.processor.operators.not_", "_generated/semantique.processor.operators.not_equal_", "_generated/semantique.processor.operators.not_in_", "_generated/semantique.processor.operators.not_missing_", "_generated/semantique.processor.operators.or_", "_generated/semantique.processor.operators.power_", "_generated/semantique.processor.operators.secant_", "_generated/semantique.processor.operators.sine_", "_generated/semantique.processor.operators.square_root_", "_generated/semantique.processor.operators.subtract_", "_generated/semantique.processor.operators.tangent_", "_generated/semantique.processor.operators.to_degrees_", "_generated/semantique.processor.operators.to_radians_", "_generated/semantique.processor.reducers.all_", "_generated/semantique.processor.reducers.any_", "_generated/semantique.processor.reducers.count_", "_generated/semantique.processor.reducers.first_", "_generated/semantique.processor.reducers.last_", "_generated/semantique.processor.reducers.max_", "_generated/semantique.processor.reducers.mean_", "_generated/semantique.processor.reducers.median_", "_generated/semantique.processor.reducers.min_", "_generated/semantique.processor.reducers.mode_", "_generated/semantique.processor.reducers.n_", "_generated/semantique.processor.reducers.none_", "_generated/semantique.processor.reducers.percentage_", "_generated/semantique.processor.reducers.product_", "_generated/semantique.processor.reducers.range_", "_generated/semantique.processor.reducers.standard_deviation_", "_generated/semantique.processor.reducers.sum_", "_generated/semantique.processor.reducers.variance_", "_generated/semantique.processor.types.DTYPE_MAPPING", "_generated/semantique.processor.types.TYPE_PROMOTION_MANUALS", "_generated/semantique.processor.types.TypePromoter", "_generated/semantique.processor.types.TypePromoter.check", "_generated/semantique.processor.types.TypePromoter.input_labels", "_generated/semantique.processor.types.TypePromoter.input_types", "_generated/semantique.processor.types.TypePromoter.manual", "_generated/semantique.processor.types.TypePromoter.output_labels", "_generated/semantique.processor.types.TypePromoter.output_type", "_generated/semantique.processor.types.TypePromoter.promote", "_generated/semantique.processor.types.get_value_labels", "_generated/semantique.processor.types.get_value_type", "_generated/semantique.processor.utils.allnull", "_generated/semantique.processor.utils.convert_datetime64", "_generated/semantique.processor.utils.datetime64_as_unix", "_generated/semantique.processor.utils.get_null", "_generated/semantique.processor.utils.inf_as_null", "_generated/semantique.processor.utils.null_as_zero", "_generated/semantique.processor.utils.parse_datetime_component", "_generated/semantique.processor.utils.parse_extent", "_generated/semantique.processor.values.Interval", "_generated/semantique.processor.values.Interval.lower", "_generated/semantique.processor.values.Interval.sq", "_generated/semantique.processor.values.Interval.upper", "_generated/semantique.processor.values.Interval.value_type", "_generated/semantique.reducers.ALL", "_generated/semantique.reducers.ANY", "_generated/semantique.reducers.COUNT", "_generated/semantique.reducers.FIRST", "_generated/semantique.reducers.LAST", "_generated/semantique.reducers.MAX", "_generated/semantique.reducers.MEAN", "_generated/semantique.reducers.MEDIAN", "_generated/semantique.reducers.MIN", "_generated/semantique.reducers.MODE", "_generated/semantique.reducers.N", "_generated/semantique.reducers.NONE", "_generated/semantique.reducers.PERCENTAGE", "_generated/semantique.reducers.PRODUCT", "_generated/semantique.reducers.RANGE", "_generated/semantique.reducers.STANDARD_DEVIATION", "_generated/semantique.reducers.SUM", "_generated/semantique.reducers.VARIANCE", "_generated/semantique.reflectance", "_generated/semantique.result", "_generated/semantique.self", "_generated/semantique.set", "_generated/semantique.time_instant", "_generated/semantique.time_interval", "_generated/semantique.topography", "_notebooks/datacube", "_notebooks/gallery", "_notebooks/mapping", "_notebooks/processor", "_notebooks/recipes", "_notebooks/references", "_notebooks/verbs", "changelog", "code_of_conduct", "contributing", "guide", "index", "installation", "reference", "reference_hide"], "filenames": ["_generated/semantique.ArrayProxy.rst", "_generated/semantique.ArrayProxy.apply_custom.rst", "_generated/semantique.ArrayProxy.assign.rst", "_generated/semantique.ArrayProxy.assign_space.rst", "_generated/semantique.ArrayProxy.assign_time.rst", "_generated/semantique.ArrayProxy.delineate.rst", "_generated/semantique.ArrayProxy.evaluate.rst", "_generated/semantique.ArrayProxy.extract.rst", "_generated/semantique.ArrayProxy.fill.rst", "_generated/semantique.ArrayProxy.filter.rst", "_generated/semantique.ArrayProxy.filter_space.rst", "_generated/semantique.ArrayProxy.filter_time.rst", "_generated/semantique.ArrayProxy.groupby.rst", "_generated/semantique.ArrayProxy.groupby_space.rst", "_generated/semantique.ArrayProxy.groupby_time.rst", "_generated/semantique.ArrayProxy.name.rst", "_generated/semantique.ArrayProxy.reduce.rst", "_generated/semantique.ArrayProxy.shift.rst", "_generated/semantique.ArrayProxy.smooth.rst", "_generated/semantique.ArrayProxy.trim.rst", "_generated/semantique.CollectionProxy.rst", "_generated/semantique.CollectionProxy.apply_custom.rst", "_generated/semantique.CollectionProxy.assign.rst", "_generated/semantique.CollectionProxy.assign_space.rst", "_generated/semantique.CollectionProxy.assign_time.rst", "_generated/semantique.CollectionProxy.compose.rst", "_generated/semantique.CollectionProxy.concatenate.rst", "_generated/semantique.CollectionProxy.delineate.rst", "_generated/semantique.CollectionProxy.evaluate.rst", "_generated/semantique.CollectionProxy.extract.rst", "_generated/semantique.CollectionProxy.fill.rst", "_generated/semantique.CollectionProxy.filter.rst", "_generated/semantique.CollectionProxy.filter_space.rst", "_generated/semantique.CollectionProxy.filter_time.rst", "_generated/semantique.CollectionProxy.merge.rst", "_generated/semantique.CollectionProxy.reduce.rst", "_generated/semantique.CollectionProxy.shift.rst", "_generated/semantique.CollectionProxy.smooth.rst", "_generated/semantique.CollectionProxy.trim.rst", "_generated/semantique.QueryRecipe.rst", "_generated/semantique.QueryRecipe.execute.rst", "_generated/semantique.appearance.rst", "_generated/semantique.artifacts.rst", "_generated/semantique.atmosphere.rst", "_generated/semantique.collection.rst", "_generated/semantique.components.space.rst", "_generated/semantique.components.space.FEATURE.rst", "_generated/semantique.components.space.X.rst", "_generated/semantique.components.space.Y.rst", "_generated/semantique.components.time.rst", "_generated/semantique.components.time.DAY.rst", "_generated/semantique.components.time.DAY_OF_WEEK.rst", "_generated/semantique.components.time.DAY_OF_YEAR.rst", "_generated/semantique.components.time.HOUR.rst", "_generated/semantique.components.time.MINUTE.rst", "_generated/semantique.components.time.MONTH.rst", "_generated/semantique.components.time.QUARTER.rst", "_generated/semantique.components.time.SEASON.rst", "_generated/semantique.components.time.SECOND.rst", "_generated/semantique.components.time.WEEK.rst", "_generated/semantique.components.time.YEAR.rst", "_generated/semantique.concept.rst", "_generated/semantique.datacube.Datacube.rst", "_generated/semantique.datacube.Datacube.layout.rst", "_generated/semantique.datacube.Datacube.lookup.rst", "_generated/semantique.datacube.Datacube.retrieve.rst", "_generated/semantique.datacube.GeotiffArchive.rst", "_generated/semantique.datacube.GeotiffArchive.config.rst", "_generated/semantique.datacube.GeotiffArchive.layout.rst", "_generated/semantique.datacube.GeotiffArchive.lookup.rst", "_generated/semantique.datacube.GeotiffArchive.retrieve.rst", "_generated/semantique.datacube.GeotiffArchive.src.rst", "_generated/semantique.datacube.GeotiffArchive.tz.rst", "_generated/semantique.datacube.Opendatacube.rst", "_generated/semantique.datacube.Opendatacube.config.rst", "_generated/semantique.datacube.Opendatacube.connection.rst", "_generated/semantique.datacube.Opendatacube.layout.rst", "_generated/semantique.datacube.Opendatacube.lookup.rst", "_generated/semantique.datacube.Opendatacube.retrieve.rst", "_generated/semantique.datacube.Opendatacube.tz.rst", "_generated/semantique.datacube.STACCube.rst", "_generated/semantique.datacube.STACCube.config.rst", "_generated/semantique.datacube.STACCube.layout.rst", "_generated/semantique.datacube.STACCube.lookup.rst", "_generated/semantique.datacube.STACCube.retrieve.rst", "_generated/semantique.datacube.STACCube.src.rst", "_generated/semantique.dimensions.SPACE.rst", "_generated/semantique.dimensions.TIME.rst", "_generated/semantique.dimensions.X.rst", "_generated/semantique.dimensions.Y.rst", "_generated/semantique.entity.rst", "_generated/semantique.event.rst", "_generated/semantique.exceptions.AlignmentError.rst", "_generated/semantique.exceptions.EmptyDataError.rst", "_generated/semantique.exceptions.InvalidBuildingBlockError.rst", "_generated/semantique.exceptions.InvalidIntervalError.rst", "_generated/semantique.exceptions.InvalidValueTypeError.rst", "_generated/semantique.exceptions.MissingDimensionError.rst", "_generated/semantique.exceptions.MixedDimensionsError.rst", "_generated/semantique.exceptions.MixedTimeZonesError.rst", "_generated/semantique.exceptions.ReservedDimensionError.rst", "_generated/semantique.exceptions.TooManyDimensionsError.rst", "_generated/semantique.exceptions.UnknownComponentError.rst", "_generated/semantique.exceptions.UnknownConceptError.rst", "_generated/semantique.exceptions.UnknownDimensionError.rst", "_generated/semantique.exceptions.UnknownLabelError.rst", "_generated/semantique.exceptions.UnknownLayerError.rst", "_generated/semantique.exceptions.UnknownOperatorError.rst", "_generated/semantique.exceptions.UnknownReducerError.rst", "_generated/semantique.exceptions.UnknownResultError.rst", "_generated/semantique.exceptions.UnknownVerbError.rst", "_generated/semantique.extent.SpatialExtent.rst", "_generated/semantique.extent.SpatialExtent.crs.rst", "_generated/semantique.extent.SpatialExtent.features.rst", "_generated/semantique.extent.SpatialExtent.from_feature.rst", "_generated/semantique.extent.SpatialExtent.from_featurecollection.rst", "_generated/semantique.extent.SpatialExtent.from_geojson.rst", "_generated/semantique.extent.SpatialExtent.from_geometry.rst", "_generated/semantique.extent.SpatialExtent.rasterize.rst", "_generated/semantique.extent.TemporalExtent.rst", "_generated/semantique.extent.TemporalExtent.discretize.rst", "_generated/semantique.extent.TemporalExtent.end.rst", "_generated/semantique.extent.TemporalExtent.start.rst", "_generated/semantique.extent.TemporalExtent.tz.rst", "_generated/semantique.geometry.rst", "_generated/semantique.interval.rst", "_generated/semantique.label.rst", "_generated/semantique.layer.rst", "_generated/semantique.mapping.Mapping.rst", "_generated/semantique.mapping.Mapping.lookup.rst", "_generated/semantique.mapping.Mapping.translate.rst", "_generated/semantique.mapping.Semantique.rst", "_generated/semantique.mapping.Semantique.lookup.rst", "_generated/semantique.mapping.Semantique.translate.rst", "_generated/semantique.operators.ABSOLUTE.rst", "_generated/semantique.operators.ADD.rst", "_generated/semantique.operators.AFTER.rst", "_generated/semantique.operators.AND.rst", "_generated/semantique.operators.BEFORE.rst", "_generated/semantique.operators.CEILING.rst", "_generated/semantique.operators.COSECANT.rst", "_generated/semantique.operators.COSINE.rst", "_generated/semantique.operators.COTANGENT.rst", "_generated/semantique.operators.CUBE_ROOT.rst", "_generated/semantique.operators.DIVIDE.rst", "_generated/semantique.operators.DURING.rst", "_generated/semantique.operators.EQUAL.rst", "_generated/semantique.operators.EXCLUSIVE_OR.rst", "_generated/semantique.operators.EXPONENTIAL.rst", "_generated/semantique.operators.FLOOR.rst", "_generated/semantique.operators.GREATER.rst", "_generated/semantique.operators.GREATER_EQUAL.rst", "_generated/semantique.operators.IN.rst", "_generated/semantique.operators.INTERSECTS.rst", "_generated/semantique.operators.IS_MISSING.rst", "_generated/semantique.operators.LESS.rst", "_generated/semantique.operators.LESS_EQUAL.rst", "_generated/semantique.operators.MULTIPLY.rst", "_generated/semantique.operators.NATURAL_LOGARITHM.rst", "_generated/semantique.operators.NORMALIZED_DIFFERENCE.rst", "_generated/semantique.operators.NOT.rst", "_generated/semantique.operators.NOT_EQUAL.rst", "_generated/semantique.operators.NOT_IN.rst", "_generated/semantique.operators.NOT_MISSING.rst", "_generated/semantique.operators.OR.rst", "_generated/semantique.operators.POWER.rst", "_generated/semantique.operators.SECANT.rst", "_generated/semantique.operators.SINE.rst", "_generated/semantique.operators.SQUARE_ROOT.rst", "_generated/semantique.operators.SUBTRACT.rst", "_generated/semantique.operators.TANGENT.rst", "_generated/semantique.operators.TO_DEGREES.rst", "_generated/semantique.operators.TO_RADIANS.rst", "_generated/semantique.processor.arrays.Array.rst", "_generated/semantique.processor.arrays.Array.align_with.rst", "_generated/semantique.processor.arrays.Array.apply_custom.rst", "_generated/semantique.processor.arrays.Array.assign.rst", "_generated/semantique.processor.arrays.Array.crs.rst", "_generated/semantique.processor.arrays.Array.delineate.rst", "_generated/semantique.processor.arrays.Array.drop_non_dimension_coords.rst", "_generated/semantique.processor.arrays.Array.evaluate.rst", "_generated/semantique.processor.arrays.Array.extract.rst", "_generated/semantique.processor.arrays.Array.fill.rst", "_generated/semantique.processor.arrays.Array.filter.rst", "_generated/semantique.processor.arrays.Array.grid_points.rst", "_generated/semantique.processor.arrays.Array.groupby.rst", "_generated/semantique.processor.arrays.Array.is_empty.rst", "_generated/semantique.processor.arrays.Array.name.rst", "_generated/semantique.processor.arrays.Array.reduce.rst", "_generated/semantique.processor.arrays.Array.regularize.rst", "_generated/semantique.processor.arrays.Array.reproject.rst", "_generated/semantique.processor.arrays.Array.shift.rst", "_generated/semantique.processor.arrays.Array.smooth.rst", "_generated/semantique.processor.arrays.Array.spatial_resolution.rst", "_generated/semantique.processor.arrays.Array.stack_all_dims.rst", "_generated/semantique.processor.arrays.Array.stack_spatial_dims.rst", "_generated/semantique.processor.arrays.Array.to_csv.rst", "_generated/semantique.processor.arrays.Array.to_dataframe.rst", "_generated/semantique.processor.arrays.Array.to_geodataframe.rst", "_generated/semantique.processor.arrays.Array.to_geotiff.rst", "_generated/semantique.processor.arrays.Array.trim.rst", "_generated/semantique.processor.arrays.Array.tz.rst", "_generated/semantique.processor.arrays.Array.tz_convert.rst", "_generated/semantique.processor.arrays.Array.unstack_all_dims.rst", "_generated/semantique.processor.arrays.Array.unstack_spatial_dims.rst", "_generated/semantique.processor.arrays.Array.value_labels.rst", "_generated/semantique.processor.arrays.Array.value_type.rst", "_generated/semantique.processor.arrays.Array.write_crs.rst", "_generated/semantique.processor.arrays.Array.write_tz.rst", "_generated/semantique.processor.arrays.Collection.rst", "_generated/semantique.processor.arrays.Collection.apply_custom.rst", "_generated/semantique.processor.arrays.Collection.assign.rst", "_generated/semantique.processor.arrays.Collection.compose.rst", "_generated/semantique.processor.arrays.Collection.concatenate.rst", "_generated/semantique.processor.arrays.Collection.delineate.rst", "_generated/semantique.processor.arrays.Collection.evaluate.rst", "_generated/semantique.processor.arrays.Collection.extract.rst", "_generated/semantique.processor.arrays.Collection.fill.rst", "_generated/semantique.processor.arrays.Collection.filter.rst", "_generated/semantique.processor.arrays.Collection.is_empty.rst", "_generated/semantique.processor.arrays.Collection.merge.rst", "_generated/semantique.processor.arrays.Collection.name.rst", "_generated/semantique.processor.arrays.Collection.reduce.rst", "_generated/semantique.processor.arrays.Collection.regularize.rst", "_generated/semantique.processor.arrays.Collection.shift.rst", "_generated/semantique.processor.arrays.Collection.smooth.rst", "_generated/semantique.processor.arrays.Collection.sq.rst", "_generated/semantique.processor.arrays.Collection.stack_spatial_dims.rst", "_generated/semantique.processor.arrays.Collection.trim.rst", "_generated/semantique.processor.arrays.Collection.unstack_spatial_dims.rst", "_generated/semantique.processor.core.Cache.rst", "_generated/semantique.processor.core.Cache.build.rst", "_generated/semantique.processor.core.Cache.data.rst", "_generated/semantique.processor.core.Cache.load.rst", "_generated/semantique.processor.core.Cache.seq.rst", "_generated/semantique.processor.core.Cache.update.rst", "_generated/semantique.processor.core.QueryProcessor.rst", "_generated/semantique.processor.core.QueryProcessor.add_custom_operator.rst", "_generated/semantique.processor.core.QueryProcessor.add_custom_reducer.rst", "_generated/semantique.processor.core.QueryProcessor.add_custom_verb.rst", "_generated/semantique.processor.core.QueryProcessor.cache.rst", "_generated/semantique.processor.core.QueryProcessor.call_handler.rst", "_generated/semantique.processor.core.QueryProcessor.call_verb.rst", "_generated/semantique.processor.core.QueryProcessor.crs.rst", "_generated/semantique.processor.core.QueryProcessor.custom_operators.rst", "_generated/semantique.processor.core.QueryProcessor.custom_reducers.rst", "_generated/semantique.processor.core.QueryProcessor.custom_verbs.rst", "_generated/semantique.processor.core.QueryProcessor.datacube.rst", "_generated/semantique.processor.core.QueryProcessor.execute.rst", "_generated/semantique.processor.core.QueryProcessor.extent.rst", "_generated/semantique.processor.core.QueryProcessor.get_operator.rst", "_generated/semantique.processor.core.QueryProcessor.get_reducer.rst", "_generated/semantique.processor.core.QueryProcessor.handle_apply_custom.rst", "_generated/semantique.processor.core.QueryProcessor.handle_assign.rst", "_generated/semantique.processor.core.QueryProcessor.handle_collection.rst", "_generated/semantique.processor.core.QueryProcessor.handle_compose.rst", "_generated/semantique.processor.core.QueryProcessor.handle_concatenate.rst", "_generated/semantique.processor.core.QueryProcessor.handle_concept.rst", "_generated/semantique.processor.core.QueryProcessor.handle_delineate.rst", "_generated/semantique.processor.core.QueryProcessor.handle_evaluate.rst", "_generated/semantique.processor.core.QueryProcessor.handle_extract.rst", "_generated/semantique.processor.core.QueryProcessor.handle_fill.rst", "_generated/semantique.processor.core.QueryProcessor.handle_filter.rst", "_generated/semantique.processor.core.QueryProcessor.handle_geometry.rst", "_generated/semantique.processor.core.QueryProcessor.handle_groupby.rst", "_generated/semantique.processor.core.QueryProcessor.handle_interval.rst", "_generated/semantique.processor.core.QueryProcessor.handle_label.rst", "_generated/semantique.processor.core.QueryProcessor.handle_layer.rst", "_generated/semantique.processor.core.QueryProcessor.handle_merge.rst", "_generated/semantique.processor.core.QueryProcessor.handle_name.rst", "_generated/semantique.processor.core.QueryProcessor.handle_processing_chain.rst", "_generated/semantique.processor.core.QueryProcessor.handle_reduce.rst", "_generated/semantique.processor.core.QueryProcessor.handle_result.rst", "_generated/semantique.processor.core.QueryProcessor.handle_self.rst", "_generated/semantique.processor.core.QueryProcessor.handle_set.rst", "_generated/semantique.processor.core.QueryProcessor.handle_shift.rst", "_generated/semantique.processor.core.QueryProcessor.handle_smooth.rst", "_generated/semantique.processor.core.QueryProcessor.handle_time_instant.rst", "_generated/semantique.processor.core.QueryProcessor.handle_time_interval.rst", "_generated/semantique.processor.core.QueryProcessor.handle_trim.rst", "_generated/semantique.processor.core.QueryProcessor.handle_verb.rst", "_generated/semantique.processor.core.QueryProcessor.mapping.rst", "_generated/semantique.processor.core.QueryProcessor.optimize.rst", "_generated/semantique.processor.core.QueryProcessor.parse.rst", "_generated/semantique.processor.core.QueryProcessor.preview.rst", "_generated/semantique.processor.core.QueryProcessor.recipe.rst", "_generated/semantique.processor.core.QueryProcessor.response.rst", "_generated/semantique.processor.core.QueryProcessor.spatial_resolution.rst", "_generated/semantique.processor.core.QueryProcessor.track_types.rst", "_generated/semantique.processor.core.QueryProcessor.tz.rst", "_generated/semantique.processor.operators.absolute_.rst", "_generated/semantique.processor.operators.add_.rst", "_generated/semantique.processor.operators.after_.rst", "_generated/semantique.processor.operators.and_.rst", "_generated/semantique.processor.operators.before_.rst", "_generated/semantique.processor.operators.ceiling_.rst", "_generated/semantique.processor.operators.cosecant_.rst", "_generated/semantique.processor.operators.cosine_.rst", "_generated/semantique.processor.operators.cotangent_.rst", "_generated/semantique.processor.operators.cube_root_.rst", "_generated/semantique.processor.operators.divide_.rst", "_generated/semantique.processor.operators.during_.rst", "_generated/semantique.processor.operators.equal_.rst", "_generated/semantique.processor.operators.exclusive_or_.rst", "_generated/semantique.processor.operators.exponential_.rst", "_generated/semantique.processor.operators.floor_.rst", "_generated/semantique.processor.operators.greater_.rst", "_generated/semantique.processor.operators.greater_equal_.rst", "_generated/semantique.processor.operators.in_.rst", "_generated/semantique.processor.operators.intersects_.rst", "_generated/semantique.processor.operators.is_missing_.rst", "_generated/semantique.processor.operators.less_.rst", "_generated/semantique.processor.operators.less_equal_.rst", "_generated/semantique.processor.operators.multiply_.rst", "_generated/semantique.processor.operators.natural_logarithm_.rst", "_generated/semantique.processor.operators.normalized_difference_.rst", "_generated/semantique.processor.operators.not_.rst", "_generated/semantique.processor.operators.not_equal_.rst", "_generated/semantique.processor.operators.not_in_.rst", "_generated/semantique.processor.operators.not_missing_.rst", "_generated/semantique.processor.operators.or_.rst", "_generated/semantique.processor.operators.power_.rst", "_generated/semantique.processor.operators.secant_.rst", "_generated/semantique.processor.operators.sine_.rst", "_generated/semantique.processor.operators.square_root_.rst", "_generated/semantique.processor.operators.subtract_.rst", "_generated/semantique.processor.operators.tangent_.rst", "_generated/semantique.processor.operators.to_degrees_.rst", "_generated/semantique.processor.operators.to_radians_.rst", "_generated/semantique.processor.reducers.all_.rst", "_generated/semantique.processor.reducers.any_.rst", "_generated/semantique.processor.reducers.count_.rst", "_generated/semantique.processor.reducers.first_.rst", "_generated/semantique.processor.reducers.last_.rst", "_generated/semantique.processor.reducers.max_.rst", "_generated/semantique.processor.reducers.mean_.rst", "_generated/semantique.processor.reducers.median_.rst", "_generated/semantique.processor.reducers.min_.rst", "_generated/semantique.processor.reducers.mode_.rst", "_generated/semantique.processor.reducers.n_.rst", "_generated/semantique.processor.reducers.none_.rst", "_generated/semantique.processor.reducers.percentage_.rst", "_generated/semantique.processor.reducers.product_.rst", "_generated/semantique.processor.reducers.range_.rst", "_generated/semantique.processor.reducers.standard_deviation_.rst", "_generated/semantique.processor.reducers.sum_.rst", "_generated/semantique.processor.reducers.variance_.rst", "_generated/semantique.processor.types.DTYPE_MAPPING.rst", "_generated/semantique.processor.types.TYPE_PROMOTION_MANUALS.rst", "_generated/semantique.processor.types.TypePromoter.rst", "_generated/semantique.processor.types.TypePromoter.check.rst", "_generated/semantique.processor.types.TypePromoter.input_labels.rst", "_generated/semantique.processor.types.TypePromoter.input_types.rst", "_generated/semantique.processor.types.TypePromoter.manual.rst", "_generated/semantique.processor.types.TypePromoter.output_labels.rst", "_generated/semantique.processor.types.TypePromoter.output_type.rst", "_generated/semantique.processor.types.TypePromoter.promote.rst", "_generated/semantique.processor.types.get_value_labels.rst", "_generated/semantique.processor.types.get_value_type.rst", "_generated/semantique.processor.utils.allnull.rst", "_generated/semantique.processor.utils.convert_datetime64.rst", "_generated/semantique.processor.utils.datetime64_as_unix.rst", "_generated/semantique.processor.utils.get_null.rst", "_generated/semantique.processor.utils.inf_as_null.rst", "_generated/semantique.processor.utils.null_as_zero.rst", "_generated/semantique.processor.utils.parse_datetime_component.rst", "_generated/semantique.processor.utils.parse_extent.rst", "_generated/semantique.processor.values.Interval.rst", "_generated/semantique.processor.values.Interval.lower.rst", "_generated/semantique.processor.values.Interval.sq.rst", "_generated/semantique.processor.values.Interval.upper.rst", "_generated/semantique.processor.values.Interval.value_type.rst", "_generated/semantique.reducers.ALL.rst", "_generated/semantique.reducers.ANY.rst", "_generated/semantique.reducers.COUNT.rst", "_generated/semantique.reducers.FIRST.rst", "_generated/semantique.reducers.LAST.rst", "_generated/semantique.reducers.MAX.rst", "_generated/semantique.reducers.MEAN.rst", "_generated/semantique.reducers.MEDIAN.rst", "_generated/semantique.reducers.MIN.rst", "_generated/semantique.reducers.MODE.rst", "_generated/semantique.reducers.N.rst", "_generated/semantique.reducers.NONE.rst", "_generated/semantique.reducers.PERCENTAGE.rst", "_generated/semantique.reducers.PRODUCT.rst", "_generated/semantique.reducers.RANGE.rst", "_generated/semantique.reducers.STANDARD_DEVIATION.rst", "_generated/semantique.reducers.SUM.rst", "_generated/semantique.reducers.VARIANCE.rst", "_generated/semantique.reflectance.rst", "_generated/semantique.result.rst", "_generated/semantique.self.rst", "_generated/semantique.set.rst", "_generated/semantique.time_instant.rst", "_generated/semantique.time_interval.rst", "_generated/semantique.topography.rst", "_notebooks/datacube.nblink", "_notebooks/gallery.nblink", "_notebooks/mapping.nblink", "_notebooks/processor.nblink", "_notebooks/recipes.nblink", "_notebooks/references.nblink", "_notebooks/verbs.nblink", "changelog.rst", "code_of_conduct.rst", "contributing.rst", "guide.rst", "index.rst", "installation.rst", "reference.rst", "reference_hide.rst"], "titles": ["semantique.ArrayProxy", "semantique.ArrayProxy.apply_custom", "semantique.ArrayProxy.assign", "semantique.ArrayProxy.assign_space", "semantique.ArrayProxy.assign_time", "semantique.ArrayProxy.delineate", "semantique.ArrayProxy.evaluate", "semantique.ArrayProxy.extract", "semantique.ArrayProxy.fill", "semantique.ArrayProxy.filter", "semantique.ArrayProxy.filter_space", "semantique.ArrayProxy.filter_time", "semantique.ArrayProxy.groupby", "semantique.ArrayProxy.groupby_space", "semantique.ArrayProxy.groupby_time", "semantique.ArrayProxy.name", "semantique.ArrayProxy.reduce", "semantique.ArrayProxy.shift", "semantique.ArrayProxy.smooth", "semantique.ArrayProxy.trim", "semantique.CollectionProxy", "semantique.CollectionProxy.apply_custom", "semantique.CollectionProxy.assign", "semantique.CollectionProxy.assign_space", "semantique.CollectionProxy.assign_time", "semantique.CollectionProxy.compose", "semantique.CollectionProxy.concatenate", "semantique.CollectionProxy.delineate", "semantique.CollectionProxy.evaluate", "semantique.CollectionProxy.extract", "semantique.CollectionProxy.fill", "semantique.CollectionProxy.filter", "semantique.CollectionProxy.filter_space", "semantique.CollectionProxy.filter_time", "semantique.CollectionProxy.merge", "semantique.CollectionProxy.reduce", "semantique.CollectionProxy.shift", "semantique.CollectionProxy.smooth", "semantique.CollectionProxy.trim", "semantique.QueryRecipe", "semantique.QueryRecipe.execute", "semantique.appearance", "semantique.artifacts", "semantique.atmosphere", "semantique.collection", "semantique.components.space", "semantique.components.space.FEATURE", "semantique.components.space.X", "semantique.components.space.Y", "semantique.components.time", "semantique.components.time.DAY", "semantique.components.time.DAY_OF_WEEK", "semantique.components.time.DAY_OF_YEAR", "semantique.components.time.HOUR", "semantique.components.time.MINUTE", "semantique.components.time.MONTH", "semantique.components.time.QUARTER", "semantique.components.time.SEASON", "semantique.components.time.SECOND", "semantique.components.time.WEEK", "semantique.components.time.YEAR", "semantique.concept", "semantique.datacube.Datacube", "semantique.datacube.Datacube.layout", "semantique.datacube.Datacube.lookup", "semantique.datacube.Datacube.retrieve", "semantique.datacube.GeotiffArchive", "semantique.datacube.GeotiffArchive.config", "semantique.datacube.GeotiffArchive.layout", "semantique.datacube.GeotiffArchive.lookup", "semantique.datacube.GeotiffArchive.retrieve", "semantique.datacube.GeotiffArchive.src", "semantique.datacube.GeotiffArchive.tz", "semantique.datacube.Opendatacube", "semantique.datacube.Opendatacube.config", "semantique.datacube.Opendatacube.connection", "semantique.datacube.Opendatacube.layout", "semantique.datacube.Opendatacube.lookup", "semantique.datacube.Opendatacube.retrieve", "semantique.datacube.Opendatacube.tz", "semantique.datacube.STACCube", "semantique.datacube.STACCube.config", "semantique.datacube.STACCube.layout", "semantique.datacube.STACCube.lookup", "semantique.datacube.STACCube.retrieve", "semantique.datacube.STACCube.src", "semantique.dimensions.SPACE", "semantique.dimensions.TIME", "semantique.dimensions.X", "semantique.dimensions.Y", "semantique.entity", "semantique.event", "semantique.exceptions.AlignmentError", "semantique.exceptions.EmptyDataError", "semantique.exceptions.InvalidBuildingBlockError", "semantique.exceptions.InvalidIntervalError", "semantique.exceptions.InvalidValueTypeError", "semantique.exceptions.MissingDimensionError", "semantique.exceptions.MixedDimensionsError", "semantique.exceptions.MixedTimeZonesError", "semantique.exceptions.ReservedDimensionError", "semantique.exceptions.TooManyDimensionsError", "semantique.exceptions.UnknownComponentError", "semantique.exceptions.UnknownConceptError", "semantique.exceptions.UnknownDimensionError", "semantique.exceptions.UnknownLabelError", "semantique.exceptions.UnknownLayerError", "semantique.exceptions.UnknownOperatorError", "semantique.exceptions.UnknownReducerError", "semantique.exceptions.UnknownResultError", "semantique.exceptions.UnknownVerbError", "semantique.extent.SpatialExtent", "semantique.extent.SpatialExtent.crs", "semantique.extent.SpatialExtent.features", "semantique.extent.SpatialExtent.from_feature", "semantique.extent.SpatialExtent.from_featurecollection", "semantique.extent.SpatialExtent.from_geojson", "semantique.extent.SpatialExtent.from_geometry", "semantique.extent.SpatialExtent.rasterize", "semantique.extent.TemporalExtent", "semantique.extent.TemporalExtent.discretize", "semantique.extent.TemporalExtent.end", "semantique.extent.TemporalExtent.start", "semantique.extent.TemporalExtent.tz", "semantique.geometry", "semantique.interval", "semantique.label", "semantique.layer", "semantique.mapping.Mapping", "semantique.mapping.Mapping.lookup", "semantique.mapping.Mapping.translate", "semantique.mapping.Semantique", "semantique.mapping.Semantique.lookup", "semantique.mapping.Semantique.translate", "semantique.operators.ABSOLUTE", "semantique.operators.ADD", "semantique.operators.AFTER", "semantique.operators.AND", "semantique.operators.BEFORE", "semantique.operators.CEILING", "semantique.operators.COSECANT", "semantique.operators.COSINE", "semantique.operators.COTANGENT", "semantique.operators.CUBE_ROOT", "semantique.operators.DIVIDE", "semantique.operators.DURING", "semantique.operators.EQUAL", "semantique.operators.EXCLUSIVE_OR", "semantique.operators.EXPONENTIAL", "semantique.operators.FLOOR", "semantique.operators.GREATER", "semantique.operators.GREATER_EQUAL", "semantique.operators.IN", "semantique.operators.INTERSECTS", "semantique.operators.IS_MISSING", "semantique.operators.LESS", "semantique.operators.LESS_EQUAL", "semantique.operators.MULTIPLY", "semantique.operators.NATURAL_LOGARITHM", "semantique.operators.NORMALIZED_DIFFERENCE", "semantique.operators.NOT", "semantique.operators.NOT_EQUAL", "semantique.operators.NOT_IN", "semantique.operators.NOT_MISSING", "semantique.operators.OR", "semantique.operators.POWER", "semantique.operators.SECANT", "semantique.operators.SINE", "semantique.operators.SQUARE_ROOT", "semantique.operators.SUBTRACT", "semantique.operators.TANGENT", "semantique.operators.TO_DEGREES", "semantique.operators.TO_RADIANS", "semantique.processor.arrays.Array", "semantique.processor.arrays.Array.align_with", "semantique.processor.arrays.Array.apply_custom", "semantique.processor.arrays.Array.assign", "semantique.processor.arrays.Array.crs", "semantique.processor.arrays.Array.delineate", "semantique.processor.arrays.Array.drop_non_dimension_coords", "semantique.processor.arrays.Array.evaluate", "semantique.processor.arrays.Array.extract", "semantique.processor.arrays.Array.fill", "semantique.processor.arrays.Array.filter", "semantique.processor.arrays.Array.grid_points", "semantique.processor.arrays.Array.groupby", "semantique.processor.arrays.Array.is_empty", "semantique.processor.arrays.Array.name", "semantique.processor.arrays.Array.reduce", "semantique.processor.arrays.Array.regularize", "semantique.processor.arrays.Array.reproject", "semantique.processor.arrays.Array.shift", "semantique.processor.arrays.Array.smooth", "semantique.processor.arrays.Array.spatial_resolution", "semantique.processor.arrays.Array.stack_all_dims", "semantique.processor.arrays.Array.stack_spatial_dims", "semantique.processor.arrays.Array.to_csv", "semantique.processor.arrays.Array.to_dataframe", "semantique.processor.arrays.Array.to_geodataframe", "semantique.processor.arrays.Array.to_geotiff", "semantique.processor.arrays.Array.trim", "semantique.processor.arrays.Array.tz", "semantique.processor.arrays.Array.tz_convert", "semantique.processor.arrays.Array.unstack_all_dims", "semantique.processor.arrays.Array.unstack_spatial_dims", "semantique.processor.arrays.Array.value_labels", "semantique.processor.arrays.Array.value_type", "semantique.processor.arrays.Array.write_crs", "semantique.processor.arrays.Array.write_tz", "semantique.processor.arrays.Collection", "semantique.processor.arrays.Collection.apply_custom", "semantique.processor.arrays.Collection.assign", "semantique.processor.arrays.Collection.compose", "semantique.processor.arrays.Collection.concatenate", "semantique.processor.arrays.Collection.delineate", "semantique.processor.arrays.Collection.evaluate", "semantique.processor.arrays.Collection.extract", "semantique.processor.arrays.Collection.fill", "semantique.processor.arrays.Collection.filter", "semantique.processor.arrays.Collection.is_empty", "semantique.processor.arrays.Collection.merge", "semantique.processor.arrays.Collection.name", "semantique.processor.arrays.Collection.reduce", "semantique.processor.arrays.Collection.regularize", "semantique.processor.arrays.Collection.shift", "semantique.processor.arrays.Collection.smooth", "semantique.processor.arrays.Collection.sq", "semantique.processor.arrays.Collection.stack_spatial_dims", "semantique.processor.arrays.Collection.trim", "semantique.processor.arrays.Collection.unstack_spatial_dims", "semantique.processor.core.Cache", "semantique.processor.core.Cache.build", "semantique.processor.core.Cache.data", "semantique.processor.core.Cache.load", "semantique.processor.core.Cache.seq", "semantique.processor.core.Cache.update", "semantique.processor.core.QueryProcessor", "semantique.processor.core.QueryProcessor.add_custom_operator", "semantique.processor.core.QueryProcessor.add_custom_reducer", "semantique.processor.core.QueryProcessor.add_custom_verb", "semantique.processor.core.QueryProcessor.cache", "semantique.processor.core.QueryProcessor.call_handler", "semantique.processor.core.QueryProcessor.call_verb", "semantique.processor.core.QueryProcessor.crs", "semantique.processor.core.QueryProcessor.custom_operators", "semantique.processor.core.QueryProcessor.custom_reducers", "semantique.processor.core.QueryProcessor.custom_verbs", "semantique.processor.core.QueryProcessor.datacube", "semantique.processor.core.QueryProcessor.execute", "semantique.processor.core.QueryProcessor.extent", "semantique.processor.core.QueryProcessor.get_operator", "semantique.processor.core.QueryProcessor.get_reducer", "semantique.processor.core.QueryProcessor.handle_apply_custom", "semantique.processor.core.QueryProcessor.handle_assign", "semantique.processor.core.QueryProcessor.handle_collection", "semantique.processor.core.QueryProcessor.handle_compose", "semantique.processor.core.QueryProcessor.handle_concatenate", "semantique.processor.core.QueryProcessor.handle_concept", "semantique.processor.core.QueryProcessor.handle_delineate", "semantique.processor.core.QueryProcessor.handle_evaluate", "semantique.processor.core.QueryProcessor.handle_extract", "semantique.processor.core.QueryProcessor.handle_fill", "semantique.processor.core.QueryProcessor.handle_filter", "semantique.processor.core.QueryProcessor.handle_geometry", "semantique.processor.core.QueryProcessor.handle_groupby", "semantique.processor.core.QueryProcessor.handle_interval", "semantique.processor.core.QueryProcessor.handle_label", "semantique.processor.core.QueryProcessor.handle_layer", "semantique.processor.core.QueryProcessor.handle_merge", "semantique.processor.core.QueryProcessor.handle_name", "semantique.processor.core.QueryProcessor.handle_processing_chain", "semantique.processor.core.QueryProcessor.handle_reduce", "semantique.processor.core.QueryProcessor.handle_result", "semantique.processor.core.QueryProcessor.handle_self", "semantique.processor.core.QueryProcessor.handle_set", "semantique.processor.core.QueryProcessor.handle_shift", "semantique.processor.core.QueryProcessor.handle_smooth", "semantique.processor.core.QueryProcessor.handle_time_instant", "semantique.processor.core.QueryProcessor.handle_time_interval", "semantique.processor.core.QueryProcessor.handle_trim", "semantique.processor.core.QueryProcessor.handle_verb", "semantique.processor.core.QueryProcessor.mapping", "semantique.processor.core.QueryProcessor.optimize", "semantique.processor.core.QueryProcessor.parse", "semantique.processor.core.QueryProcessor.preview", "semantique.processor.core.QueryProcessor.recipe", "semantique.processor.core.QueryProcessor.response", "semantique.processor.core.QueryProcessor.spatial_resolution", "semantique.processor.core.QueryProcessor.track_types", "semantique.processor.core.QueryProcessor.tz", "semantique.processor.operators.absolute_", "semantique.processor.operators.add_", "semantique.processor.operators.after_", "semantique.processor.operators.and_", "semantique.processor.operators.before_", "semantique.processor.operators.ceiling_", "semantique.processor.operators.cosecant_", "semantique.processor.operators.cosine_", "semantique.processor.operators.cotangent_", "semantique.processor.operators.cube_root_", "semantique.processor.operators.divide_", "semantique.processor.operators.during_", "semantique.processor.operators.equal_", "semantique.processor.operators.exclusive_or_", "semantique.processor.operators.exponential_", "semantique.processor.operators.floor_", "semantique.processor.operators.greater_", "semantique.processor.operators.greater_equal_", "semantique.processor.operators.in_", "semantique.processor.operators.intersects_", "semantique.processor.operators.is_missing_", "semantique.processor.operators.less_", "semantique.processor.operators.less_equal_", "semantique.processor.operators.multiply_", "semantique.processor.operators.natural_logarithm_", "semantique.processor.operators.normalized_difference_", "semantique.processor.operators.not_", "semantique.processor.operators.not_equal_", "semantique.processor.operators.not_in_", "semantique.processor.operators.not_missing_", "semantique.processor.operators.or_", "semantique.processor.operators.power_", "semantique.processor.operators.secant_", "semantique.processor.operators.sine_", "semantique.processor.operators.square_root_", "semantique.processor.operators.subtract_", "semantique.processor.operators.tangent_", "semantique.processor.operators.to_degrees_", "semantique.processor.operators.to_radians_", "semantique.processor.reducers.all_", "semantique.processor.reducers.any_", "semantique.processor.reducers.count_", "semantique.processor.reducers.first_", "semantique.processor.reducers.last_", "semantique.processor.reducers.max_", "semantique.processor.reducers.mean_", "semantique.processor.reducers.median_", "semantique.processor.reducers.min_", "semantique.processor.reducers.mode_", "semantique.processor.reducers.n_", "semantique.processor.reducers.none_", "semantique.processor.reducers.percentage_", "semantique.processor.reducers.product_", "semantique.processor.reducers.range_", "semantique.processor.reducers.standard_deviation_", "semantique.processor.reducers.sum_", "semantique.processor.reducers.variance_", "semantique.processor.types.DTYPE_MAPPING", "semantique.processor.types.TYPE_PROMOTION_MANUALS", "semantique.processor.types.TypePromoter", "semantique.processor.types.TypePromoter.check", "semantique.processor.types.TypePromoter.input_labels", "semantique.processor.types.TypePromoter.input_types", "semantique.processor.types.TypePromoter.manual", "semantique.processor.types.TypePromoter.output_labels", "semantique.processor.types.TypePromoter.output_type", "semantique.processor.types.TypePromoter.promote", "semantique.processor.types.get_value_labels", "semantique.processor.types.get_value_type", "semantique.processor.utils.allnull", "semantique.processor.utils.convert_datetime64", "semantique.processor.utils.datetime64_as_unix", "semantique.processor.utils.get_null", "semantique.processor.utils.inf_as_null", "semantique.processor.utils.null_as_zero", "semantique.processor.utils.parse_datetime_component", "semantique.processor.utils.parse_extent", "semantique.processor.values.Interval", "semantique.processor.values.Interval.lower", "semantique.processor.values.Interval.sq", "semantique.processor.values.Interval.upper", "semantique.processor.values.Interval.value_type", "semantique.reducers.ALL", "semantique.reducers.ANY", "semantique.reducers.COUNT", "semantique.reducers.FIRST", "semantique.reducers.LAST", "semantique.reducers.MAX", "semantique.reducers.MEAN", "semantique.reducers.MEDIAN", "semantique.reducers.MIN", "semantique.reducers.MODE", "semantique.reducers.N", "semantique.reducers.NONE", "semantique.reducers.PERCENTAGE", "semantique.reducers.PRODUCT", "semantique.reducers.RANGE", "semantique.reducers.STANDARD_DEVIATION", "semantique.reducers.SUM", "semantique.reducers.VARIANCE", "semantique.reflectance", "semantique.result", "semantique.self", "semantique.set", "semantique.time_instant", "semantique.time_interval", "semantique.topography", "Representing an EO data cube", "Gallery", "Constructing a mapping", "Internal query processing", "Writing and executing query recipes", "References", "Verbs", "Changelog", "Contributor Covenant Code of Conduct", "Contributing", "User Guide", "Semantic querying in Earth observation data cubes", "Installation", "API Reference", "&lt;no title&gt;"], "terms": {"class": [0, 20, 39, 45, 49, 62, 66, 73, 80, 111, 119, 120, 128, 131, 173, 202, 208, 209, 230, 236, 283, 349, 360, 366, 367, 397, 399, 400, 401, 405, 410], "obj": [0, 20, 111, 114, 115, 116, 117, 351, 356, 360, 365, 400], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 61, 62, 64, 65, 66, 69, 70, 73, 77, 78, 80, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 241, 242, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 408, 409], "proxi": [0, 2, 6, 9, 12, 20], "object": [0, 5, 20, 64, 69, 73, 75, 77, 83, 111, 114, 115, 117, 118, 119, 120, 123, 124, 125, 126, 173, 176, 178, 180, 188, 190, 192, 198, 199, 207, 220, 226, 236, 242, 266, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 356, 357, 358, 360, 365, 366, 367, 369, 392, 393, 394, 395, 397, 398, 399, 400, 401, 403], "an": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 34, 39, 51, 62, 65, 66, 70, 73, 78, 80, 84, 90, 91, 92, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 120, 124, 125, 126, 127, 128, 130, 131, 133, 140, 141, 142, 166, 167, 170, 171, 172, 173, 174, 176, 180, 183, 185, 187, 188, 191, 192, 200, 213, 226, 236, 248, 250, 251, 282, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 343, 347, 348, 349, 356, 357, 358, 359, 361, 362, 363, 364, 366, 367, 369, 391, 394, 395, 398, 399, 400, 402, 405, 406, 407, 408], "arrai": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 61, 65, 66, 70, 73, 78, 80, 84, 90, 91, 92, 93, 96, 97, 98, 100, 101, 104, 105, 118, 120, 124, 126, 130, 133, 236, 248, 254, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 357, 358, 359, 361, 362, 363, 364, 365, 366, 369, 394, 397, 399, 400, 401, 402], "thi": [0, 1, 3, 4, 6, 10, 11, 13, 14, 20, 40, 61, 66, 73, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 119, 120, 124, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 190, 192, 198, 199, 207, 208, 226, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 358, 366, 369, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410], "serv": [0, 20, 207, 208, 397, 399, 401], "placehold": [0, 20, 207, 208, 282, 400], "multi": [0, 20, 124, 173, 194, 195, 203, 366, 400, 401, 402, 403], "dimension": [0, 13, 14, 16, 20, 96, 118, 120, 173, 182, 185, 188, 366, 397, 400, 401, 402, 403], "all": [0, 12, 16, 19, 20, 26, 40, 61, 66, 73, 80, 90, 91, 92, 93, 96, 97, 98, 130, 133, 174, 185, 188, 194, 200, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 248, 266, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 339, 340, 341, 348, 359, 363, 364, 366, 369, 397, 399, 400, 401, 402, 403, 405, 406, 407, 409], "specif": [0, 3, 4, 7, 10, 11, 13, 14, 20, 73, 94, 97, 100, 102, 104, 131, 176, 181, 207, 208, 236, 241, 292, 294, 301, 309, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 350, 397, 399, 400, 401, 402, 403, 406, 408, 410], "action": [0, 20, 248, 348, 400, 401, 402, 403, 405], "i": [0, 2, 3, 4, 6, 8, 10, 11, 13, 14, 18, 20, 25, 34, 39, 40, 51, 61, 62, 66, 73, 80, 90, 91, 92, 94, 95, 97, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 118, 119, 120, 125, 128, 129, 130, 131, 132, 133, 140, 141, 142, 145, 146, 147, 150, 151, 152, 154, 155, 156, 160, 161, 162, 163, 166, 167, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 183, 185, 186, 188, 191, 192, 198, 199, 200, 207, 208, 212, 226, 236, 266, 272, 283, 284, 291, 292, 293, 294, 295, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 330, 338, 347, 348, 349, 350, 360, 362, 366, 367, 369, 373, 395, 397, 399, 400, 401, 402, 403, 405, 406, 407, 408, 410], "e": [0, 3, 4, 6, 7, 12, 13, 14, 16, 17, 20, 34, 80, 92, 118, 120, 124, 176, 179, 181, 182, 183, 191, 304, 310, 314, 338, 347, 348, 349, 350, 358, 362, 366, 397, 399, 400, 401, 402, 403, 405, 406], "verb": [0, 1, 3, 4, 10, 11, 13, 14, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 92, 96, 97, 98, 100, 101, 110, 175, 176, 178, 180, 181, 182, 183, 185, 187, 188, 191, 192, 200, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 228, 236, 239, 242, 244, 245, 246, 252, 253, 255, 256, 258, 259, 260, 261, 262, 264, 268, 269, 271, 275, 276, 279, 280, 310, 399, 401, 402], "can": [0, 2, 6, 8, 9, 12, 13, 14, 16, 18, 20, 34, 41, 42, 43, 44, 61, 66, 73, 80, 90, 91, 96, 100, 111, 118, 119, 120, 124, 125, 126, 127, 173, 174, 176, 180, 183, 185, 190, 198, 199, 202, 207, 208, 283, 291, 293, 300, 302, 303, 306, 307, 310, 311, 312, 313, 315, 317, 320, 321, 325, 347, 349, 360, 366, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409], "call": [0, 20, 40, 173, 226, 241, 348, 349, 369, 397, 400, 401, 402, 403], "method": [0, 8, 20, 30, 39, 45, 49, 62, 65, 66, 73, 80, 111, 119, 128, 130, 131, 173, 182, 209, 217, 226, 230, 236, 349, 350, 367, 369, 397, 399, 400, 401, 403], "howev": [0, 20, 303, 320, 397, 399, 400, 401, 402, 403, 406], "iself": [0, 20], "doe": [0, 20, 26, 64, 69, 77, 83, 93, 94, 96, 97, 102, 104, 176, 181, 213, 288, 350, 357, 397, 399, 400, 401, 402, 403, 406], "contain": [0, 20, 25, 39, 40, 66, 71, 93, 94, 97, 102, 104, 124, 125, 126, 128, 130, 131, 133, 181, 185, 192, 196, 197, 198, 248, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 343, 347, 350, 357, 358, 361, 393, 394, 395, 397, 399, 400, 401, 402, 403, 406, 407, 410], "ani": [0, 2, 18, 20, 25, 26, 66, 73, 93, 100, 105, 116, 118, 120, 176, 190, 198, 199, 202, 207, 208, 213, 266, 283, 309, 347, 348, 360, 366, 397, 399, 400, 401, 402, 403, 405, 406, 408], "data": [0, 8, 20, 40, 41, 42, 43, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 93, 97, 106, 127, 128, 130, 131, 133, 173, 182, 192, 196, 197, 198, 205, 230, 231, 233, 235, 236, 240, 267, 282, 347, 357, 358, 390, 396, 398, 399, 403, 407], "ar": [0, 1, 2, 5, 8, 9, 16, 18, 19, 20, 34, 56, 57, 61, 66, 73, 80, 90, 91, 93, 96, 98, 112, 118, 124, 130, 133, 137, 164, 174, 177, 179, 182, 185, 188, 189, 200, 201, 213, 219, 220, 226, 230, 236, 282, 283, 292, 293, 294, 296, 297, 298, 301, 303, 309, 310, 320, 322, 323, 326, 327, 328, 329, 330, 332, 333, 338, 339, 340, 341, 347, 348, 349, 350, 357, 359, 361, 365, 366, 369, 372, 383, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 410], "appli": [0, 1, 6, 8, 16, 18, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 124, 175, 176, 178, 180, 181, 182, 183, 185, 187, 188, 191, 192, 200, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 228, 236, 242, 248, 290, 295, 296, 297, 298, 299, 304, 305, 310, 314, 316, 319, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 394, 398, 399, 400, 401, 402, 405], "instead": [0, 20, 173, 185, 199, 282, 347, 358, 397, 399, 400, 401, 402, 403, 406], "textual": [0, 20, 41, 42, 43, 44, 61, 90, 91, 127, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 390, 391, 392, 396, 397, 399, 400, 401, 403, 407], "recip": [0, 1, 6, 20, 39, 40, 94, 96, 109, 110, 131, 220, 236, 248, 272, 283, 391, 397, 398, 399, 400, 402, 403], "construct": [0, 20, 39, 62, 66, 73, 80, 128, 131, 397, 401, 402, 403, 405, 406, 407], "which": [0, 2, 6, 8, 9, 12, 19, 20, 40, 61, 65, 66, 70, 73, 78, 80, 84, 90, 91, 92, 93, 96, 97, 98, 101, 103, 106, 112, 118, 130, 133, 174, 175, 176, 177, 180, 182, 183, 185, 188, 192, 200, 201, 220, 226, 236, 243, 249, 283, 287, 289, 291, 292, 293, 294, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 320, 321, 325, 347, 348, 357, 358, 359, 366, 369, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408], "execut": [0, 1, 6, 20, 96, 110, 220, 230, 236, 240, 246, 286, 398, 402, 403, 410], "onli": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 19, 20, 40, 61, 66, 73, 80, 90, 91, 96, 98, 101, 120, 130, 133, 176, 182, 200, 282, 350, 366, 397, 399, 400, 401, 402, 403, 407, 409], "stage": [0, 20, 402, 403], "queri": [0, 1, 6, 20, 39, 40, 41, 42, 43, 44, 61, 90, 91, 94, 96, 103, 105, 106, 107, 108, 109, 110, 124, 125, 126, 127, 131, 220, 230, 236, 240, 243, 246, 247, 248, 249, 272, 281, 282, 283, 284, 285, 286, 287, 289, 366, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 402, 403, 410], "process": [0, 20, 40, 61, 90, 91, 92, 96, 101, 103, 106, 130, 131, 133, 236, 241, 243, 247, 249, 270, 281, 282, 283, 284, 285, 287, 289, 366, 397, 399, 401, 402, 403, 410], "paramet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 34, 39, 40, 41, 42, 43, 44, 61, 62, 64, 65, 66, 69, 70, 73, 77, 78, 80, 83, 84, 90, 91, 111, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 190, 191, 192, 196, 198, 199, 200, 202, 207, 208, 209, 212, 213, 220, 236, 237, 238, 239, 241, 242, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 406], "dict": [0, 20, 39, 40, 62, 63, 66, 67, 68, 73, 74, 76, 80, 81, 82, 94, 111, 114, 115, 116, 117, 119, 124, 125, 126, 128, 131, 205, 232, 236, 240, 241, 242, 244, 245, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 286, 347, 348, 349, 351, 353, 354, 357, 393, 394, 395, 399], "refer": [0, 16, 18, 20, 34, 40, 41, 42, 43, 44, 61, 64, 65, 66, 69, 70, 73, 77, 78, 83, 84, 90, 91, 112, 118, 120, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 190, 198, 199, 202, 207, 208, 230, 231, 234, 243, 248, 254, 257, 267, 272, 273, 283, 309, 348, 360, 366, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 399, 400, 401, 403, 406], "solv": [0, 20, 41, 42, 43, 44, 61, 90, 91, 127, 248, 390, 391, 392, 396, 401, 402, 403], "processor": [0, 6, 20, 40, 41, 42, 43, 44, 61, 80, 90, 91, 94, 107, 108, 124, 125, 126, 127, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403], "normal": [0, 20, 159, 315, 403], "hand": [0, 6, 10, 11, 20, 180, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 402, 403], "obtain": [0, 20, 250, 251, 349, 350, 357, 401, 402, 408], "one": [0, 6, 13, 14, 20, 25, 66, 73, 80, 97, 101, 102, 104, 105, 120, 164, 174, 182, 196, 197, 198, 212, 213, 220, 320, 330, 347, 358, 373, 397, 399, 400, 401, 402, 403, 406], "dedic": [0, 20, 397, 400, 401, 402, 403], "function": [0, 1, 8, 16, 18, 20, 34, 40, 65, 80, 94, 96, 97, 98, 100, 101, 107, 108, 110, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 180, 182, 188, 192, 199, 220, 236, 237, 238, 239, 244, 245, 250, 251, 283, 304, 314, 348, 349, 357, 358, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 399, 401, 402, 403, 406, 407], "exist": [0, 20, 26, 97, 213, 282, 358, 391, 397, 400, 401, 402], "collectionproxi": [0, 3, 4, 12, 13, 14, 44], "instanc": [0, 20, 40, 62, 66, 73, 120, 128, 130, 131, 133, 202, 208, 236, 247, 248, 281, 282, 283, 360, 366, 397, 399, 400, 401, 405], "__init__": [0, 20, 39, 45, 49, 62, 66, 73, 80, 111, 119, 128, 131, 173, 209, 230, 236, 349, 367], "kwarg": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 111, 114, 115, 116, 117, 119, 124, 175, 176, 178, 180, 181, 182, 183, 185, 187, 188, 190, 191, 192, 200, 202, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 228, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 360, 394, 395, 400], "user": [1, 6, 21, 110, 175, 210, 220, 236, 237, 238, 239, 244, 245, 246, 397, 399, 403, 406, 408, 410], "defin": [1, 2, 5, 6, 13, 14, 17, 18, 21, 56, 57, 103, 110, 120, 129, 132, 175, 185, 191, 192, 210, 220, 236, 237, 238, 239, 244, 245, 246, 248, 266, 283, 304, 315, 348, 366, 397, 398, 399, 400, 401, 402, 403, 406], "The": [1, 9, 18, 19, 25, 34, 39, 40, 41, 42, 43, 51, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 76, 77, 78, 80, 82, 83, 84, 85, 90, 91, 101, 125, 126, 127, 129, 130, 132, 133, 173, 174, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 203, 204, 206, 207, 208, 209, 212, 213, 220, 230, 236, 241, 247, 249, 250, 251, 266, 281, 283, 285, 292, 294, 295, 301, 304, 305, 309, 310, 314, 315, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 390, 393, 395, 396, 400, 401, 402, 403, 405, 406, 407, 408, 410], "implement": [1, 175, 283, 397, 399, 400, 401, 402, 403, 406, 408], "need": [1, 66, 73, 80, 230, 397, 399, 400, 401, 402, 403, 407], "provid": [1, 6, 9, 40, 96, 99, 107, 108, 110, 119, 175, 220, 226, 241, 283, 366, 369, 397, 399, 400, 401, 402, 403, 405, 406, 407, 409], "through": [1, 18, 40, 176, 226, 369, 397, 399, 400, 401, 402, 403, 405, 408], "custom_verb": [1, 236, 400], "argument": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 66, 73, 80, 98, 111, 114, 115, 116, 117, 119, 124, 130, 133, 175, 176, 180, 182, 188, 190, 192, 202, 220, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 360, 394, 395, 400, 401, 402, 403], "when": [1, 6, 8, 66, 73, 80, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 130, 133, 174, 180, 182, 199, 220, 236, 282, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 397, 399, 400, 401, 402, 403, 405, 406], "us": [1, 3, 4, 5, 6, 8, 10, 11, 13, 14, 18, 40, 66, 73, 80, 92, 96, 98, 100, 105, 108, 110, 118, 120, 124, 126, 130, 131, 133, 173, 176, 179, 180, 182, 185, 192, 198, 199, 236, 266, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 357, 360, 366, 394, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410], "you": [1, 96, 397, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410], "know": [1, 397, 400, 401, 402, 403, 406], "what": [1, 66, 73, 80, 213, 347, 348, 358, 397, 399, 400, 401, 402, 405], "do": [1, 66, 73, 80, 118, 199, 360, 397, 398, 399, 400, 401, 402, 403, 406], "str": [1, 3, 4, 6, 7, 8, 13, 14, 15, 16, 17, 18, 19, 26, 34, 41, 42, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 71, 73, 80, 86, 87, 88, 89, 90, 91, 120, 126, 127, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 182, 187, 188, 191, 192, 196, 199, 200, 202, 206, 208, 213, 220, 237, 238, 239, 241, 242, 250, 251, 283, 349, 355, 360, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 396], "name": [1, 3, 4, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 21, 26, 34, 39, 40, 61, 66, 73, 86, 87, 88, 89, 90, 91, 100, 110, 120, 128, 130, 131, 133, 179, 181, 182, 185, 188, 191, 192, 194, 200, 202, 207, 208, 213, 220, 236, 237, 238, 239, 242, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 264, 268, 269, 271, 275, 276, 279, 283, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 357, 360, 365, 366, 391, 397, 399, 400, 401, 402], "addit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 40, 66, 73, 80, 111, 114, 115, 116, 117, 119, 124, 130, 133, 175, 180, 182, 188, 190, 192, 202, 220, 236, 283, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 358, 360, 394, 395, 397, 398, 400, 401, 403], "keyword": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 66, 73, 80, 111, 114, 115, 116, 117, 119, 124, 130, 133, 175, 180, 182, 188, 190, 192, 202, 220, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 360, 394, 395, 400, 401, 403], "pass": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 80, 124, 175, 180, 182, 188, 190, 192, 202, 220, 360, 394, 395, 406], "return": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 61, 65, 70, 78, 84, 90, 91, 118, 120, 124, 125, 126, 127, 130, 133, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 236, 241, 242, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 375, 376, 377, 380, 381, 382, 386, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 403], "exampl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 41, 43, 44, 61, 90, 91, 92, 93, 94, 96, 102, 104, 124, 125, 126, 127, 174, 282, 283, 348, 349, 350, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 405, 406], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 41, 43, 44, 61, 90, 91, 124, 125, 126, 127, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 406], "sq": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 41, 43, 44, 61, 90, 91, 124, 125, 126, 127, 173, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403], "entiti": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 44, 61, 398, 399, 400, 401, 402, 403], "water": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 34, 39, 40, 44, 61, 90, 315, 397, 399, 400, 401, 402, 403], "mycustomverb": 1, "y": [2, 5, 6, 18, 22, 28, 86, 102, 118, 135, 136, 137, 138, 144, 145, 146, 147, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 164, 169, 176, 180, 192, 193, 195, 204, 211, 215, 283, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 366, 397, 398, 399, 400, 401, 403], "none": [2, 3, 4, 5, 6, 7, 13, 14, 16, 19, 22, 23, 24, 27, 28, 29, 35, 38, 39, 61, 62, 66, 73, 80, 90, 91, 118, 120, 128, 130, 131, 133, 176, 179, 180, 181, 188, 198, 199, 200, 211, 215, 216, 222, 228, 236, 283, 340, 348, 349, 357, 358, 362, 366, 397, 399, 400, 401, 403], "new": [2, 7, 26, 100, 176, 181, 213, 237, 238, 239, 400, 401, 402, 406, 407], "valu": [2, 3, 4, 6, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 25, 34, 39, 40, 66, 73, 80, 92, 93, 94, 96, 105, 118, 120, 125, 126, 128, 130, 131, 133, 134, 174, 175, 176, 178, 180, 182, 183, 185, 187, 188, 191, 192, 196, 197, 198, 199, 200, 205, 206, 212, 213, 220, 221, 236, 265, 266, 274, 283, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 393, 397, 398, 399, 401, 402], "pixel": [2, 3, 4, 5, 6, 9, 12, 17, 18, 25, 34, 92, 96, 130, 133, 174, 176, 180, 183, 185, 191, 192, 198, 220, 291, 293, 300, 302, 303, 306, 307, 311, 312, 313, 315, 317, 320, 321, 325, 398, 399, 400, 401, 403], "each": [2, 5, 6, 12, 16, 17, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 66, 73, 80, 92, 96, 118, 120, 130, 133, 173, 180, 183, 191, 213, 220, 282, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 347, 348, 357, 366, 397, 398, 399, 400, 401, 402, 403], "non": [2, 179, 207, 208, 332, 333, 339, 341, 397, 398, 399, 403], "miss": [2, 19, 66, 73, 80, 94, 154, 174, 176, 200, 303, 310, 320, 330, 332, 333, 339, 340, 341, 350, 366, 403], "observ": [2, 93, 154, 163, 310, 319, 339, 382, 397, 399, 401, 402, 403], "input": [2, 6, 8, 9, 12, 15, 92, 96, 97, 174, 175, 176, 178, 179, 180, 182, 183, 185, 187, 188, 189, 190, 192, 194, 195, 197, 198, 202, 203, 204, 207, 208, 220, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 359, 361, 362, 363, 364, 397, 399, 400, 402, 403], "without": [2, 16, 18, 34, 176, 179, 402, 403, 405, 406, 408], "comput": [2, 80, 134, 139, 140, 141, 142, 143, 148, 149, 158, 159, 166, 167, 168, 170, 171, 172, 176, 290, 295, 296, 297, 298, 299, 304, 305, 314, 315, 322, 323, 324, 326, 347, 358, 398, 399, 400, 403], "option": [2, 3, 4, 6, 7, 10, 11, 13, 14, 66, 73, 80, 118, 120, 176, 179, 180, 181, 198, 199, 213, 236, 283, 349, 366, 397, 400, 401, 402, 403], "subset": [2, 12, 65, 70, 78, 84, 282, 397, 400, 403], "mai": [2, 6, 12, 56, 57, 96, 101, 119, 128, 131, 174, 176, 180, 185, 236, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 309, 311, 312, 313, 315, 317, 320, 321, 325, 347, 350, 358, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408], "have": [2, 12, 34, 64, 65, 69, 70, 77, 78, 83, 84, 96, 98, 99, 101, 119, 120, 128, 130, 131, 133, 174, 176, 185, 199, 212, 213, 220, 348, 349, 357, 358, 360, 366, 397, 399, 400, 401, 402, 403, 405, 406, 407], "constant": [2, 6, 176, 180, 291, 293, 300, 302, 303, 306, 307, 308, 311, 312, 313, 315, 317, 318, 320, 321, 325, 400, 403], "mean": [2, 6, 19, 66, 73, 80, 125, 173, 176, 180, 200, 236, 291, 293, 300, 302, 303, 306, 307, 310, 311, 312, 313, 315, 317, 320, 321, 325, 330, 332, 333, 335, 339, 340, 341, 347, 348, 357, 366, 367, 395, 397, 398, 399, 400, 401, 403, 408], "same": [2, 6, 9, 12, 34, 40, 65, 70, 78, 84, 92, 96, 98, 109, 130, 131, 133, 174, 176, 180, 183, 185, 213, 220, 236, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 356, 397, 398, 399, 400, 401, 402, 403, 406], "also": [2, 6, 13, 14, 96, 174, 176, 180, 192, 236, 283, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 309, 311, 312, 313, 315, 317, 320, 321, 325, 397, 399, 400, 401, 402, 403, 405, 406, 407], "anoth": [2, 6, 174, 176, 180, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 309, 311, 312, 313, 315, 317, 320, 321, 325, 391, 400, 402, 403], "align": [2, 6, 9, 12, 92, 174, 176, 180, 183, 185, 291, 293, 300, 302, 303, 306, 307, 311, 312, 313, 315, 317, 320, 321, 325, 400, 405], "shape": [2, 6, 9, 12, 92, 174, 176, 180, 183, 185, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 397, 403], "binari": [2, 5, 9, 25, 66, 73, 80, 96, 176, 178, 183, 212, 213, 291, 292, 293, 294, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 329, 330, 331, 332, 333, 334, 337, 338, 339, 340, 341, 345, 347, 348, 349, 350, 358, 399, 400, 401, 403], "true": [2, 5, 9, 25, 40, 66, 73, 80, 137, 147, 160, 164, 175, 176, 178, 180, 182, 183, 185, 188, 192, 199, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 225, 236, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 366, 372, 373, 374, 383, 384, 397, 398, 399, 400, 401, 403], "cloud": [2, 9, 199, 397, 399, 400, 402, 403], "self": [2, 9, 12, 130, 133, 226, 273, 369, 398, 399, 402], "extract": [2, 3, 4, 10, 11, 12, 13, 14, 102, 104, 260, 398, 399], "time": [2, 5, 7, 8, 12, 16, 17, 18, 19, 39, 40, 73, 80, 99, 119, 120, 174, 201, 277, 278, 283, 289, 292, 294, 301, 310, 361, 362, 366, 394, 395, 397, 399, 400, 401, 402, 403, 405, 406], "year": [2, 4, 7, 11, 12, 14, 52, 56, 102, 181, 403], "compon": [3, 4, 7, 10, 11, 13, 14, 23, 24, 29, 102, 181, 216, 282, 283, 365, 397, 398, 399, 400, 401], "assign": [3, 4, 5, 9, 25, 118, 120, 174, 183, 187, 253, 348, 397, 400, 401, 402], "spatial": [3, 10, 13, 17, 18, 19, 40, 65, 66, 70, 73, 78, 80, 84, 86, 88, 89, 97, 100, 102, 111, 112, 113, 118, 124, 130, 133, 153, 177, 178, 184, 189, 190, 191, 192, 193, 195, 198, 199, 200, 204, 207, 213, 223, 227, 229, 236, 243, 263, 282, 283, 287, 309, 358, 366, 397, 398, 399, 401, 403], "coordin": [3, 4, 7, 10, 11, 12, 13, 14, 19, 34, 46, 47, 48, 66, 72, 73, 79, 80, 104, 112, 118, 120, 174, 176, 177, 179, 180, 181, 183, 189, 190, 198, 199, 200, 201, 202, 207, 208, 213, 243, 283, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 309, 310, 311, 312, 313, 315, 317, 320, 321, 325, 358, 366, 397, 399, 400, 401, 402], "shortcut": [3, 4, 10, 11, 13, 14, 403], "first": [3, 4, 10, 11, 13, 14, 25, 51, 118, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 332, 348, 397, 399, 400, 401, 402, 403, 406, 409], "dimens": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 26, 27, 29, 30, 34, 35, 36, 37, 38, 45, 49, 65, 66, 70, 73, 78, 80, 84, 92, 97, 98, 100, 101, 102, 104, 130, 133, 174, 176, 178, 179, 180, 181, 182, 183, 185, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 203, 204, 207, 208, 213, 216, 217, 222, 223, 224, 225, 227, 228, 229, 236, 291, 293, 300, 302, 303, 306, 307, 310, 311, 312, 313, 315, 317, 320, 321, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 365, 366, 397, 398, 400, 401, 402], "featur": [3, 10, 13, 111, 114, 118, 124, 398, 400, 401, 403, 406], "indic": [3, 10, 13, 315, 357, 397, 399, 400, 403], "g": [3, 4, 6, 7, 12, 13, 14, 16, 17, 92, 120, 124, 179, 181, 191, 347, 348, 349, 358, 366, 397, 399, 400, 401, 402, 403, 406], "tempor": [4, 5, 7, 11, 14, 40, 65, 66, 70, 72, 73, 78, 79, 80, 84, 87, 93, 99, 100, 102, 119, 120, 130, 133, 178, 181, 201, 202, 208, 213, 236, 249, 283, 292, 294, 301, 358, 365, 366, 394, 397, 398, 399, 403], "month": [4, 7, 11, 14, 181, 398, 399, 403], "dai": [4, 7, 14, 51, 52, 73, 80, 181, 403], "spatio": [5, 65, 70, 78, 84, 93, 130, 133, 178, 236, 249, 283, 358, 366, 397, 398, 399, 400, 403], "find": [5, 398, 400, 401, 403], "set": [5, 40, 67, 74, 80, 81, 96, 125, 152, 162, 237, 238, 239, 274, 282, 308, 318, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 367, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 395, 397, 398, 399, 400, 402, 403, 405, 406], "connect": [5, 73, 397, 399, 401, 403], "space": [5, 8, 17, 39, 40, 182, 283, 310, 397, 398, 399, 400, 401, 403, 405, 406, 408], "integ": [5, 17, 118, 191, 295, 305, 357, 400, 403], "index": [5, 41, 42, 43, 46, 51, 61, 64, 65, 69, 70, 77, 78, 83, 84, 90, 91, 126, 127, 129, 130, 132, 133, 194, 195, 203, 315, 390, 396, 397, 399, 400, 401, 402, 403, 408], "start": [5, 17, 99, 119, 130, 133, 191, 294, 366, 398, 399, 400, 401, 402, 403, 406], "from": [5, 10, 11, 16, 18, 19, 34, 66, 70, 73, 75, 78, 80, 84, 85, 96, 97, 102, 104, 114, 115, 116, 117, 120, 169, 174, 179, 200, 202, 208, 212, 233, 283, 325, 347, 349, 357, 358, 360, 366, 397, 399, 400, 401, 403, 405, 406, 409], "1": [5, 10, 17, 18, 25, 56, 57, 118, 199, 348, 397, 398, 399, 400, 401, 402, 403], "For": [5, 8, 118, 130, 133, 282, 283, 310, 348, 349, 350, 362, 366, 399, 400, 401, 402, 403, 405, 406], "x": [5, 17, 18, 86, 118, 124, 126, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 192, 193, 195, 204, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 357, 358, 359, 361, 362, 363, 364, 366, 394, 397, 398, 399, 400, 401, 403], "direct": [5, 118, 207, 208, 283, 366, 401, 403], "queen": [5, 403], "neighborhood": [5, 403], "while": [5, 17, 40, 191, 349, 400, 401, 403], "rook": 5, "oper": [6, 10, 11, 28, 96, 107, 130, 133, 180, 207, 208, 215, 236, 237, 239, 244, 250, 348, 349, 350, 353, 356, 399, 401, 402, 403], "express": [6, 10, 11, 92, 96, 99, 112, 118, 177, 180, 201, 236, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 347, 348, 349, 366, 400, 402, 405, 408], "univari": [6, 180, 348, 349, 400], "singl": [6, 16, 18, 34, 61, 90, 91, 119, 120, 130, 133, 182, 194, 195, 203, 220, 283, 310, 349, 394, 397, 400, 401, 402, 405], "bivari": [6, 92, 348, 349, 400, 402], "arithmet": [6, 403], "add": [6, 100, 237, 238, 239, 291, 348, 399, 400, 401, 402, 403, 406], "multipli": [6, 313, 348, 400, 402, 403], "condit": [6, 9, 176, 399, 403, 408], "equal": [6, 10, 11, 12, 125, 151, 156, 161, 185, 189, 213, 220, 292, 294, 301, 302, 304, 307, 309, 312, 314, 317, 348, 367, 395, 399, 403], "greater": [6, 151, 306, 307, 348, 399, 400, 403], "In": [6, 92, 173, 174, 176, 180, 282, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 309, 310, 311, 312, 313, 315, 317, 320, 321, 325, 347, 397, 398, 399, 400, 401, 402, 403, 406], "case": [6, 13, 14, 92, 174, 176, 180, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 309, 311, 312, 313, 315, 317, 320, 321, 325, 365, 397, 400, 401, 402, 403, 406], "second": [6, 25, 92, 118, 180, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 348, 361, 397, 399, 400, 401, 402, 403], "operand": [6, 10, 11, 180, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 348, 349, 350, 351, 352, 400, 403], "2": [6, 25, 56, 57, 118, 192, 225, 304, 314, 348, 397, 398, 399, 400, 401, 402, 403, 408], "two": [6, 10, 11, 65, 70, 78, 84, 99, 118, 130, 133, 174, 182, 199, 236, 349, 366, 397, 400, 401], "should": [6, 8, 9, 13, 14, 16, 17, 18, 26, 34, 40, 65, 66, 70, 73, 78, 80, 84, 100, 101, 111, 118, 119, 125, 130, 133, 174, 175, 176, 178, 179, 180, 182, 183, 185, 188, 191, 192, 199, 207, 208, 212, 213, 220, 236, 243, 249, 283, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 360, 366, 367, 395, 397, 399, 400, 401, 402, 403, 406, 407], "either": [6, 10, 11, 147, 220, 303, 400, 403, 408], "built": [6, 16, 18, 34, 220, 236, 348, 349, 397, 398, 399, 400, 403], "right": [6, 10, 11, 17, 18, 180, 191, 192, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 402, 403, 405], "side": [6, 10, 11, 119, 125, 180, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 367, 395, 401, 402, 403], "ignor": [6, 176, 178, 180, 181, 183, 185, 187, 191, 199, 212, 213, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333, 339, 340, 341, 397, 403], "veget": [6, 44, 315, 397, 399, 400, 401, 402, 403], "label": [7, 105, 179, 181, 185, 205, 266, 351, 354, 357, 397, 398, 399, 400, 401, 402, 403, 406], "nodata": [8, 9, 25, 174, 182, 183, 192, 362, 400], "interpol": [8, 182, 403], "valid": [8, 66, 73, 80, 93, 163, 182, 192, 213, 283, 319, 397, 400, 403], "fit": [8, 401, 402, 403], "along": [8, 10, 11, 13, 14, 16, 17, 18, 26, 104, 118, 174, 182, 191, 192, 213, 283, 359, 366, 400, 402], "given": [8, 15, 16, 17, 18, 61, 65, 66, 70, 73, 78, 84, 90, 91, 92, 111, 118, 119, 120, 124, 125, 130, 133, 181, 182, 188, 190, 191, 192, 198, 199, 200, 202, 207, 208, 236, 250, 251, 282, 283, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 358, 359, 360, 366, 367, 395, 397, 399, 400, 401, 403], "specifi": [8, 40, 66, 73, 80, 188, 192, 292, 294, 301, 309, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 397, 400, 401, 402, 403, 405], "stack": [8, 86, 182, 194, 195, 227, 366, 397, 403], "2d": [8, 182, 403], "regular": [8, 19, 66, 73, 80, 118, 120, 199, 200, 366, 400, 403, 410], "1d": 8, "One": [8, 111, 182, 400], "nearest": [8, 66, 73, 80, 182, 403], "linear": [8, 182, 403], "cubic": [8, 66, 73, 80, 182, 403], "track_typ": [8, 96, 175, 176, 178, 180, 182, 183, 188, 192, 210, 211, 212, 213, 214, 215, 217, 218, 220, 222, 225, 236, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 400], "bool": [8, 40, 66, 73, 80, 175, 176, 178, 180, 182, 183, 185, 186, 188, 192, 199, 207, 208, 212, 213, 219, 220, 236, 284, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 366, 398], "type": [8, 43, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 68, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 94, 96, 112, 113, 121, 122, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 182, 183, 184, 186, 188, 192, 193, 199, 201, 205, 206, 212, 213, 219, 220, 226, 232, 234, 236, 240, 241, 243, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 398, 399, 401, 402, 403, 406], "": [8, 175, 176, 180, 182, 350, 398, 400, 403, 405], "check": [8, 175, 176, 178, 182, 183, 212, 213, 220, 283, 349, 398, 400, 406], "output": [8, 10, 11, 175, 176, 178, 180, 182, 188, 192, 220, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 354, 355, 356, 397, 399, 400, 401, 402, 403], "promot": [8, 175, 176, 178, 180, 182, 188, 192, 220, 236, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 353, 400, 408], "whenev": [8, 175, 182, 236, 348, 349, 398, 400, 402, 403], "applic": [8, 175, 182, 350, 401, 402, 406, 408], "base": [9, 62, 128, 180, 188, 192, 220, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 366, 397, 399, 400, 402, 403, 406], "evalu": [9, 10, 11, 92, 96, 230, 235, 236, 242, 244, 248, 259, 266, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 348, 349, 392, 397, 398, 399, 400, 401], "correspond": [9, 12, 34, 92, 94, 118, 120, 250, 251, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 366, 397, 399, 400, 403], "preserv": [9, 19, 200, 207, 208, 303, 320, 400, 403], "other": [9, 100, 174, 213, 220, 226, 362, 369, 397, 399, 400, 401, 402, 403, 405, 406], "filter": [10, 11, 32, 33, 92, 96, 124, 262, 310, 394, 398, 399, 402], "relat": [10, 11, 130, 133, 292, 294, 301, 309, 399, 400, 401, 403], "final": [10, 11, 400, 403], "posit": [10, 11, 17, 118, 174, 191, 403, 405], "consist": [10, 11, 282, 398, 400, 401, 402, 403], "respect": [10, 11, 96, 100, 398, 400, 401, 403, 405], "three": [10, 11, 199, 397, 400, 403], "intersect": [10, 93, 118, 309, 348, 397, 403], "geometri": [10, 117, 198, 263, 309, 348, 358, 397, 400, 403], "gpd": [10, 40, 124, 397, 398, 399, 400, 401, 402, 403], "read_fil": [10, 40, 124, 397, 398, 399, 400, 401, 403], "foo": [10, 15, 400, 403, 406], "gpkg": 10, "after": [11, 292, 348, 400, 401, 402, 403, 406], "time_inst": [11, 277, 292, 294, 403], "2021": [11, 394, 395, 404, 408], "12": [11, 40, 394, 395, 397, 398, 399, 400, 401, 402, 403, 406], "31": [11, 40, 394, 395, 397, 398, 399, 400, 401, 403], "2020": [11, 40, 397, 398, 399, 400, 401, 403], "grouper": [12, 13, 14, 97, 98, 101, 185], "group": [12, 13, 14, 92, 97, 98, 101, 185, 402, 410], "split": [12, 92, 401, 406], "distinct": [12, 40, 92, 358, 397, 399, 400, 402, 403], "compris": [12, 113, 403], "share": [12, 399, 403, 406], "similar": 12, "particular": [12, 403], "togeth": [12, 66, 73, 80, 111, 185, 283, 400, 401, 402, 403], "altern": [12, 114, 115, 116, 117, 185, 400, 403, 406], "collect": [12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 80, 98, 185, 241, 242, 252, 253, 254, 258, 259, 260, 261, 262, 264, 269, 270, 271, 272, 273, 275, 276, 279, 280, 397, 398, 399, 400], "Then": [12, 185, 398, 400, 401, 403], "usual": [13, 14, 399, 400, 401, 402, 403], "result": [13, 14, 17, 39, 40, 80, 85, 109, 191, 248, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 348, 349, 397, 398, 400, 401, 403], "groupbi": [13, 14, 92, 97, 98, 101, 264, 398], "list": [13, 14, 80, 85, 118, 179, 193, 209, 234, 274, 283, 287, 308, 318, 351, 352, 358, 366, 397, 398, 400, 401, 402, 403, 406], "multipl": [13, 14, 20, 25, 26, 34, 40, 44, 120, 124, 209, 220, 282, 310, 338, 358, 366, 397, 398, 399, 400, 401, 402], "give": [15, 397, 401, 403, 405, 406], "column": [16, 17, 191, 196, 197, 198, 397, 403], "summari": [16, 406], "statist": [16, 347, 358, 400, 401], "boolean": [16, 400, 403], "see": [16, 18, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 73, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 210, 211, 214, 215, 216, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 283, 349, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 397, 399, 400, 401, 402, 403, 405, 407, 408], "here": [16, 18, 34, 173, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 397, 399, 400, 402, 403, 407, 408], "overview": [16, 18, 34, 397, 401, 403], "chosen": [16, 18, 34, 182], "thei": [16, 18, 34, 118, 124, 185, 230, 357, 398, 399, 400, 401, 402, 403, 405, 406, 407], "underscor": [16, 18, 34], "end": [16, 18, 34, 99, 119, 292, 366, 400, 402, 403, 406], "reduct": [16, 188, 400, 403], "If": [16, 18, 19, 25, 39, 61, 62, 64, 66, 69, 73, 77, 80, 83, 90, 91, 118, 119, 120, 124, 128, 129, 130, 131, 132, 133, 174, 176, 178, 181, 182, 183, 185, 188, 191, 192, 198, 199, 200, 212, 213, 220, 241, 250, 251, 266, 272, 283, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 349, 350, 357, 358, 366, 397, 400, 401, 402, 403, 406, 407, 409], "count": [16, 39, 40, 331, 348, 349, 400, 401, 402, 403], "step": [17, 36, 189, 191, 224, 399, 400, 401, 402, 403], "number": [17, 50, 55, 59, 101, 118, 192, 283, 304, 314, 331, 339, 348, 349, 361, 362, 366, 374, 382, 400, 403, 406], "int": [17, 18, 80, 118, 125, 191, 192, 266, 283, 347, 358, 359, 366, 367, 368, 370, 398, 400, 401], "amount": [17, 191, 403], "A": [17, 40, 41, 42, 43, 44, 61, 90, 91, 124, 127, 191, 283, 347, 358, 366, 390, 391, 392, 394, 396, 397, 399, 400, 401, 402, 403, 405, 406], "neg": [17, 118, 191, 283, 366, 401, 403], "left": [17, 18, 191, 192, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 402, 403], "follow": [17, 191, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 397, 399, 400, 403, 405, 406], "order": [17, 174, 191, 220, 230, 399, 400, 401, 403], "cr": [17, 40, 118, 190, 191, 193, 198, 199, 207, 283, 366, 397, 398, 399, 400, 401, 403], "top": [17, 191, 403], "move": [17, 18, 191, 399, 400, 402, 403], "down": [17, 191, 403], "coord": [17, 302, 308, 309, 310, 317, 318, 319, 333, 338, 339, 348, 358, 400, 403], "reduc": [18, 34, 37, 39, 40, 96, 104, 108, 192, 220, 225, 236, 238, 245, 251, 271, 348, 349, 350, 398, 399, 401, 402], "size": [18, 37, 118, 192, 225, 283, 366, 403, 405], "window": [18, 192, 403], "k": [18, 192, 403], "extent": [18, 40, 65, 70, 78, 84, 93, 99, 130, 133, 192, 236, 282, 283, 366, 397, 398, 399, 403], "roll": [18, 192], "being": [18, 25, 90, 91, 100, 192, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 366, 398, 399, 400, 401, 403], "alwai": [18, 101, 189, 192, 199, 303, 320, 348, 349, 397, 399, 400, 401, 402, 403, 406], "center": [18, 192, 403], "its": [18, 92, 95, 125, 185, 192, 213, 348, 349, 366, 367, 395, 397, 399, 400, 401, 402, 403, 406, 407], "over": [18, 97, 188, 192, 397, 398, 399, 400], "both": [18, 118, 119, 125, 137, 147, 192, 283, 293, 303, 350, 366, 367, 395, 401, 403, 407], "form": [18, 111, 192, 366, 399, 402, 403, 406], "squar": [18, 168, 192, 324, 400, 403], "middl": [18, 192, 403], "remov": [19, 66, 73, 80, 174, 200, 310, 366, 400, 403, 405, 406], "edg": [19, 66, 73, 80, 182, 200, 366, 400, 403], "arrayproxi": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 61, 90, 91, 127, 390, 391, 392, 396], "creat": [25, 118, 120, 212, 397, 398, 399, 400, 401, 403, 407, 409], "categor": [25, 128, 131, 212, 347, 357, 358, 397, 399, 400, 401, 402, 403], "composit": [25, 212, 402, 403], "et": [25, 118, 403], "cetera": [25, 118, 403], "more": [25, 92, 97, 101, 111, 174, 178, 199, 347, 358, 397, 399, 400, 401, 402, 403, 410], "than": [25, 92, 95, 101, 105, 125, 126, 150, 151, 155, 156, 174, 192, 199, 207, 208, 292, 294, 306, 307, 311, 312, 330, 340, 347, 367, 395, 397, 398, 399, 400, 401, 402, 403], "those": [25, 174, 176, 399, 400, 402, 403, 405, 406, 410], "priorit": 25, "get": [25, 118, 120, 399, 400, 402, 403, 406], "ic": [25, 26, 34, 397], "To": [26, 176, 213, 397, 399, 400, 401, 402, 403, 406], "member": [26, 152, 162, 213, 308, 318, 393, 399, 400, 403, 405, 406], "concept": [26, 40, 90, 91, 103, 128, 129, 130, 131, 132, 133, 257, 283, 398, 399, 400, 401, 403, 408], "per": [34, 196, 197, 198, 220, 398, 401, 403], "like": [39, 94, 111, 119, 397, 398, 399, 400, 401, 402, 405], "store": [39, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 207, 208, 209, 232, 236, 348, 357, 358, 397, 398, 399, 400, 403], "instruct": [39, 248, 282, 400, 401, 402, 403], "dictionari": [39, 40, 114, 115, 116, 117, 128, 129, 130, 131, 132, 133, 348, 349, 357, 397, 399, 400, 401, 402], "kei": [39, 40, 94, 128, 131, 233, 235, 241, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 397, 399, 400, 401], "empti": [39, 62, 66, 73, 80, 128, 131, 186, 219, 399, 401], "map": [39, 40, 61, 66, 73, 80, 90, 91, 103, 236, 283, 347, 366, 397, 400, 402, 403], "seri": [39, 40, 401, 403, 405], "datacub": [40, 130, 133, 236, 283, 397, 398, 399, 400, 401, 402, 403], "run_preview": 40, "fals": [40, 96, 192, 207, 208, 225, 236, 330, 397, 398, 399, 400, 401, 403], "cache_data": [40, 400], "config": [40, 66, 73, 80, 130, 133, 283], "initi": [40, 99, 111, 114, 115, 116, 117, 118, 119, 124, 133, 190, 198, 199, 207, 283, 366, 394, 395, 397, 399, 400, 401, 403, 404], "core": [40, 133, 400, 401, 403], "queryprocessor": [40, 133, 400], "It": [40, 66, 96, 226, 248, 283, 292, 294, 301, 304, 309, 314, 315, 347, 349, 358, 369, 397, 399, 400, 401, 402, 403], "run": [40, 236, 397, 400], "phase": [40, 282, 400], "pars": [40, 365, 366, 399, 402], "optim": [40, 199, 397], "against": [40, 61, 90, 91, 103, 106, 236, 247, 281, 283, 401, 402], "spatialext": [40, 124, 283, 366, 397, 398, 399, 400, 401, 403], "temporalext": [40, 283, 366, 394, 395, 397, 398, 399, 400, 401, 403], "preview": [40, 236, 400], "perform": [40, 359, 397, 400, 401, 403], "befor": [40, 294, 348, 366, 397, 400, 402, 403, 406], "resolut": [40, 66, 73, 80, 118, 120, 189, 193, 236, 283, 287, 366, 397, 400, 401, 403], "test": [40, 136, 137, 138, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 236, 292, 293, 294, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 329, 330, 340, 359, 372, 373, 383, 403, 406, 407], "succe": 40, "cach": [40, 236], "enabl": 40, "increas": [40, 400], "memori": [40, 397, 400], "footprint": [40, 397, 398, 399, 400, 401, 403], "o": [40, 347, 400], "retriev": [40, 66, 67, 73, 74, 80, 81, 93, 97, 130, 133, 230, 366, 397, 399, 400, 401], "Will": [40, 80], "layer": [40, 41, 42, 43, 64, 65, 66, 69, 70, 71, 73, 77, 78, 80, 83, 84, 106, 230, 233, 236, 240, 267, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 308, 309, 311, 312, 313, 315, 317, 318, 320, 321, 325, 348, 390, 396, 397, 399, 401, 403], "referenc": [40, 61, 64, 69, 77, 83, 90, 91, 102, 103, 104, 105, 106, 109, 110, 129, 130, 132, 133, 272, 283, 398, 399, 400, 401], "requir": [40, 96, 97, 98, 101, 283, 397, 399, 400, 401, 403, 407, 408], "automat": [40, 406], "configur": [40, 62, 66, 67, 73, 74, 80, 81, 128, 131, 283, 398, 400, 401, 402, 403, 407], "forward": [40, 111, 114, 115, 116, 117, 119, 133, 242, 283, 400, 401, 403], "xarrai": [40, 65, 70, 78, 80, 84, 118, 120, 130, 133, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 194, 195, 200, 202, 203, 204, 207, 208, 209, 212, 213, 220, 226, 236, 241, 242, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 356, 359, 361, 362, 363, 364, 365, 366, 369, 397, 398, 399, 400, 401, 403], "dataarrai": [40, 65, 70, 78, 84, 118, 120, 130, 133, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 194, 195, 200, 202, 203, 204, 207, 208, 209, 212, 213, 220, 226, 236, 241, 242, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 356, 359, 361, 362, 363, 364, 365, 366, 369, 397, 398, 399, 400, 401, 403], "respons": [40, 248, 398, 401, 402], "geopanda": [40, 111, 113, 114, 115, 116, 117, 124, 184, 198, 263, 358, 397, 398, 399, 400, 401, 402, 403], "pd": [40, 398, 400, 403], "dc": [40, 397, 398, 399, 400, 401, 402, 403], "geotiffarch": [40, 398, 399, 400, 401, 402, 403], "file": [40, 63, 66, 68, 73, 76, 80, 82, 124, 196, 199, 397, 398, 399, 400, 401, 402, 403, 406, 408, 409], "layout_gtiff": [40, 397, 398, 399, 400, 401, 402, 403], "json": [40, 124, 125, 126, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403], "src": [40, 66, 80, 397, 398, 399, 400, 401, 402, 403], "layers_gtiff": [40, 397, 398, 399, 400, 401, 402, 403], "zip": [40, 66, 71, 397, 398, 399, 400, 401, 402, 403], "geojson": [40, 114, 115, 116, 117, 124, 397, 398, 399, 400, 401, 403], "2019": [40, 397, 398, 399, 400, 401, 403], "01": [40, 361, 395, 397, 398, 399, 400, 401, 403], "3035": [40, 397, 398, 399, 400, 401, 403], "tz": [40, 66, 73, 120, 202, 208, 283, 360, 366, 398, 400, 401, 403], "utc": [40, 66, 73, 397, 398, 400, 401, 403], "spatial_resolut": [40, 283, 366, 397, 398, 399, 400, 401, 403], "1800": [40, 403], "describ": [41, 42, 43, 62, 66, 73, 80, 347, 357, 358, 390, 396, 397, 399, 400, 401, 402, 403], "within": [41, 42, 43, 90, 91, 93, 118, 120, 310, 367, 390, 396, 397, 399, 400, 401, 403, 405, 408, 410], "categori": [41, 42, 43, 90, 91, 357, 390, 396, 397, 399, 401, 402, 403, 410], "layout": [41, 42, 43, 62, 64, 65, 66, 69, 70, 73, 77, 78, 80, 83, 84, 127, 390, 396, 397, 399, 400, 401, 402], "eo": [41, 42, 43, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 76, 77, 78, 79, 80, 82, 83, 84, 93, 97, 106, 127, 128, 131, 390, 396, 398, 399, 400, 402, 403], "cube": [41, 42, 43, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 93, 97, 106, 127, 128, 131, 143, 299, 390, 396, 398, 399, 400, 402, 403, 407], "bright": [41, 127, 397], "color": [43, 397, 398, 399, 400, 401, 402, 403, 405], "element": [44, 185, 209, 219, 358, 359, 397, 401, 402, 403], "attribut": [45, 49, 62, 66, 73, 80, 111, 119, 173, 207, 208, 209, 230, 236, 349, 367, 397, 399, 400, 401, 403], "tupl": [46, 47, 48, 309, 358, 366, 400, 403], "timestamp": [50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 119, 121, 122, 310, 343, 358, 360, 394, 395, 398, 400, 401, 403], "dayofweek": 51, "week": 51, "consid": [51, 174, 399, 402, 403, 405], "mondai": 51, "0": [51, 118, 339, 348, 364, 397, 398, 399, 400, 401, 403, 408], "dayofyear": 52, "There": [56, 57, 397, 400, 401, 402, 403, 406], "four": [56, 57, 400, 402], "januari": [56, 57, 398, 403], "februari": [56, 57, 398, 403], "march": [56, 57, 398, 403], "april": [56, 57, 398, 403], "june": [56, 57, 398, 403], "3": [56, 57, 199, 397, 398, 399, 400, 401, 402, 403], "juli": [56, 57, 398, 403], "august": [56, 57, 398, 403], "septemb": [56, 57, 398, 403], "4": [56, 57, 397, 398, 399, 400, 401, 402, 403], "octob": [56, 57, 398, 403], "novemb": [56, 57, 398, 403, 404], "decemb": [56, 57, 398, 403], "properti": [61, 63, 67, 68, 71, 72, 74, 75, 76, 79, 81, 82, 85, 90, 91, 103, 112, 113, 121, 122, 123, 130, 133, 177, 184, 186, 193, 201, 205, 206, 219, 226, 232, 234, 240, 243, 244, 245, 246, 247, 248, 249, 281, 282, 284, 285, 286, 287, 288, 289, 347, 351, 352, 353, 354, 355, 356, 365, 368, 369, 370, 371, 397, 399, 400, 402], "semant": [61, 90, 91, 103, 128, 129, 130, 131, 132, 133, 230, 236, 248, 257, 282, 283, 286, 399, 400, 401, 403], "translat": [61, 90, 91, 399, 400, 401, 403, 405], "combin": [61, 90, 91, 130, 133, 174, 283, 350, 399, 400, 401, 402, 407], "metadata": [64, 69, 77, 83, 179, 397, 401], "rais": [64, 69, 77, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 119, 129, 132, 165, 174, 176, 178, 181, 182, 183, 185, 188, 191, 192, 199, 200, 212, 213, 220, 241, 250, 251, 266, 272, 321, 350, 403], "except": [64, 69, 77, 83, 119, 129, 132, 174, 176, 178, 181, 182, 183, 185, 188, 191, 192, 199, 200, 212, 213, 220, 241, 250, 251, 266, 272, 350, 400, 403, 408], "unknownlayererror": [64, 69, 77, 83], "abstract": [65, 130, 397, 399], "parse_ext": [65, 70, 78, 84, 130, 133, 236, 283, 397, 399, 400], "geotiff": [66, 199, 397, 400, 401], "simpl": [66, 401, 403], "assum": [66, 119, 140, 141, 142, 166, 167, 170, 171, 172, 296, 297, 298, 322, 323, 326, 327, 328, 397, 403, 408], "bundl": 66, "archiv": [66, 71, 397, 401], "meant": [66, 292, 294, 301, 309, 397, 399, 402, 403, 406, 407, 410], "demonstr": [66, 397, 400, 401, 405], "purpos": [66, 397, 401, 403, 406, 407], "path": [66, 71, 196, 199, 401], "timezon": [66, 72, 73, 79, 119, 120, 123, 202, 208, 283, 292, 294, 301, 360, 366, 397], "databas": [66, 73, 120, 202, 208, 283, 360, 366, 397, 400], "inherit": [66, 73, 120, 173, 202, 208, 283, 360, 366, 397, 399], "datetim": [66, 72, 73, 79, 120, 123, 201, 202, 208, 283, 289, 292, 294, 301, 302, 306, 307, 308, 310, 311, 312, 317, 318, 319, 332, 333, 334, 337, 338, 339, 343, 347, 348, 358, 360, 362, 365, 366, 397, 400, 403], "tzinfo": [66, 72, 73, 79, 120, 123, 201, 202, 208, 283, 289, 360, 366], "tune": [66, 73, 80, 397, 401, 403], "trim": [66, 73, 80, 279, 366, 400], "maintain": [66, 73, 80, 366, 400, 406], "default": [66, 73, 80, 397, 400, 403], "value_type_map": [66, 73, 80], "how": [66, 73, 80, 282, 341, 397, 398, 399, 400, 401, 402, 403, 406], "encod": [66, 73, 80, 399, 400], "nomin": [66, 73, 80, 213, 302, 308, 310, 317, 318, 319, 332, 333, 338, 339, 347, 348, 358, 400, 403], "ordin": [66, 73, 80, 125, 213, 302, 306, 307, 308, 310, 311, 312, 317, 318, 319, 332, 333, 334, 337, 338, 339, 347, 348, 358, 367, 397, 399, 400, 401, 403], "continu": [66, 73, 80, 213, 290, 291, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 350, 358, 367, 399, 400, 403, 405], "discret": [66, 73, 80, 213, 290, 291, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 350, 358, 367, 400, 401, 403], "resampl": [66, 73, 80], "differ": [66, 73, 80, 98, 99, 119, 159, 174, 190, 202, 310, 315, 343, 347, 358, 360, 366, 386, 394, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 410], "techniqu": [66, 73, 80], "separ": [66, 73, 80, 203, 204, 282, 398, 400, 401, 402, 403], "possibl": [66, 73, 80, 92, 371, 399, 400, 401, 402, 403], "averag": [66, 73, 80, 397, 398, 400, 403], "bilinear": [66, 73, 80, 182, 403], "cubic_splin": [66, 73, 80], "lanczo": [66, 73, 80], "mode": [66, 73, 80, 284, 348, 398, 400, 403], "gauss": [66, 73, 80], "max": [66, 73, 80, 348, 397, 398, 401, 403], "min": [66, 73, 80, 348, 397, 403], "med": [66, 73, 80], "q1": [66, 73, 80], "q3": [66, 73, 80], "interfac": [73, 75, 397, 399], "backend": 73, "manual": [73, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 400], "detail": [73, 397, 400, 401, 403, 407], "allow": [73, 75, 96, 98, 101, 131, 226, 369, 397, 399, 400, 401, 402, 403, 405], "read": [73, 75, 111, 119, 283, 400, 401, 403], "group_by_solar_dai": [73, 80], "level": [73, 80, 347, 358, 397, 398, 399, 400, 401, 402, 405], "solar": [73, 80], "keep": [73, 80, 179, 236, 288, 400, 403], "scene": [73, 80], "stac": [80, 85, 397], "search": [80, 85, 349, 397, 408], "load": [80, 282, 397, 398, 399, 400, 401, 402, 403], "item": [80, 85, 397], "fetch": [80, 397], "pystac": [80, 85, 397], "item_collect": [80, 85, 397], "itemcollect": [80, 85, 397], "previou": [80, 85], "build": [80, 94, 131, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 399, 400, 401, 402, 403, 406, 407], "dtype": [80, 347, 358, 397, 399, 400, 401, 403], "convert": [80, 197, 198, 202, 283, 327, 328, 360, 361, 363, 364, 397, 400, 403], "float32": [80, 397], "float64": [80, 397, 399, 400, 401, 403], "prior": 80, "na_valu": [80, 397], "na": 80, "origin": [80, 403, 406], "np": [80, 397, 398, 400, 401, 403], "nan": [80, 362, 398, 400, 403], "dask_param": 80, "via": [80, 405], "stackstac": [80, 397], "api": [80, 397, 399, 400], "control": 80, "parallel": 80, "thread": 80, "schedul": 80, "dask": 80, "reserv": [86, 87, 88, 89, 100, 188, 192, 213, 400, 403], "flood": [91, 402], "cannot": [92, 174, 241, 250, 251, 403], "occur": [92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 310, 338, 381, 400, 402, 403], "involv": [92, 348, 349, 400, 403, 405, 406], "ha": [92, 96, 101, 118, 174, 176, 178, 180, 183, 199, 213, 266, 283, 291, 293, 300, 302, 303, 306, 307, 311, 312, 313, 315, 317, 320, 321, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 366, 397, 398, 399, 400, 401, 402, 403], "some": [92, 213, 282, 365, 397, 399, 400, 401, 402, 403, 407], "common": [92, 173, 174, 315, 400, 402, 405, 406], "happen": [93, 400, 401], "erron": [93, 310, 402], "invalid": [94, 400, 403], "block": [94, 105, 131, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 399, 400, 401, 402, 403, 406], "handler": [94, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "interv": [95, 99, 119, 145, 265, 278, 292, 294, 301, 395, 398, 400, 401, 403], "upper": [95, 121, 125, 367, 395, 401, 403, 406], "bound": [95, 99, 118, 119, 120, 121, 122, 125, 292, 294, 301, 309, 367, 368, 370, 395, 397, 400, 401, 403], "smaller": [95, 125, 367, 395, 403], "lower": [95, 122, 125, 367, 395, 401, 403], "These": [96, 100, 118, 120, 188, 192, 199, 282, 283, 366, 399, 400, 401, 402, 403, 406], "choos": [96, 403], "wide": 96, "rang": [96, 348, 397, 398, 401, 403], "sensibli": 96, "certain": [96, 282, 398, 400, 402], "concaten": [96, 97, 100, 256, 398], "compos": [96, 255, 398], "disabl": [96, 400, 405], "track": [96, 230, 236, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346], "present": [97, 106, 109, 174, 181, 182, 185, 188, 191, 192, 200, 272, 403, 406], "includ": [97, 98, 101, 111, 118, 119, 124, 188, 190, 192, 198, 199, 207, 283, 365, 366, 394, 395, 398, 399, 400, 401, 403, 405, 406], "often": [97, 398], "least": [97, 164, 212, 320, 330, 343, 373, 397, 400, 403, 406], "exactli": [98, 174, 403], "zone": [99, 201, 283, 289, 366, 400, 401], "instant": [99, 119, 120, 277, 292, 294, 366, 394, 395, 403], "put": [101, 397, 399], "limit": [101, 192, 225, 397, 399, 400, 402, 403, 408], "document": [101, 179, 397, 401, 406, 407, 408, 410], "clearli": [101, 403], "mention": [101, 399, 403], "unexist": [102, 103, 104, 106, 109], "want": [102, 104, 400, 402, 403, 406, 407], "try": [102, 104, 349, 400, 406], "rather": [105, 126, 207, 208, 330, 340, 399, 403], "itself": [105, 118, 126, 198, 199, 207, 208, 282, 392, 400, 401, 402, 403, 409], "attach": [105, 119], "undefin": [107, 108, 110], "becaus": [107, 108, 110, 310], "nor": [107, 108, 178, 397, 401], "ad": [107, 108, 174, 237, 238, 239, 365, 397, 401, 402, 406], "custom": [107, 108, 110, 175, 398, 399, 403, 410], "did": [110, 399], "represent": [111, 119, 173, 209, 241, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 394, 395, 397, 401], "boundari": [111, 119, 400], "geodatafram": [111, 113, 114, 115, 116, 117, 124, 198, 263, 358, 397, 400, 401, 403], "themselv": [111, 118, 119, 185, 190, 198, 199, 207, 283, 366, 397, 401, 402, 403], "system": [112, 118, 177, 190, 198, 199, 207, 243, 283, 309, 366, 397, 399, 400, 401, 403, 407], "pyproj": [112, 118, 177, 190, 198, 199, 207, 243, 283, 366], "classmethod": [114, 115, 116, 117, 283, 400], "format": [114, 115, 116, 117, 118, 119, 124, 283, 366, 394, 395, 397, 399, 400, 401, 403, 406], "accord": [114, 115, 116, 117, 402, 403], "standard": [114, 115, 116, 117, 344, 387, 397, 399, 403], "featurecollect": 115, "from_featur": [115, 116, 117, 397], "rectangular": [118, 400, 401], "grid": [118, 120, 184, 400], "cover": [118, 120, 400, 402, 403], "box": [118, 292, 294, 301, 309, 397, 400, 403], "cell": [118, 120, 283, 366, 400], "locat": [118, 310, 397, 398, 399, 401, 403], "depend": [118, 397, 399, 400, 401, 402, 403, 406, 407, 409], "where": [118, 174, 283, 310, 366, 397, 398, 399, 400, 402, 403], "axi": [118, 283, 359, 366, 397, 399, 400, 401, 403], "float": [118, 125, 266, 283, 347, 358, 366, 367, 368, 370, 398, 400], "unit": [118, 193, 283, 366, 397, 399, 400, 401, 403], "ax": [118, 283, 366, 398, 401], "most": [118, 283, 338, 343, 366, 381, 398, 400, 401, 402, 403], "crss": [118, 283, 366], "henc": [118, 283, 366, 397, 399, 400, 401, 402, 403], "understood": [118, 124, 125, 126, 190, 198, 199, 207, 283, 366, 393, 394, 395], "well": [118, 119, 190, 198, 199, 207, 283, 365, 366, 394, 395, 397, 399, 400, 401, 403, 405, 406], "epsg": [118, 190, 198, 199, 207, 283, 366, 397, 399, 400, 401, 403], "code": [118, 190, 198, 199, 207, 283, 366, 397, 400, 401, 402, 407, 408], "wkt": [118, 190, 198, 199, 207, 283, 366], "string": [118, 190, 198, 199, 207, 283, 357, 366], "panda": [119, 120, 121, 122, 197, 360, 366, 394, 395, 398, 400, 401, 403], "text": [119, 394, 395, 402, 403], "close": [119, 125, 367, 395, 401, 403, 406], "mixedtimezoneserror": 119, "inform": [119, 207, 208, 397, 399, 401, 402, 405], "entir": [120, 397, 399, 400, 401], "numpi": [120, 347, 358, 359, 360, 361, 362, 363, 364, 397, 398, 400, 401, 403], "datetime64": [120, 360, 361, 397, 399, 400, 401, 403], "belong": [120, 125, 266, 367, 395, 400, 401, 402, 403, 406], "tseri": [120, 366], "offset": [120, 366, 403], "dateoffset": [120, 366], "alia": [120, 366], "d": [120, 366, 397, 400], "daili": [120, 366], "frequenc": [120, 366], "alias": [120, 366], "5d": [120, 366], "repres": [123, 124, 125, 126, 198, 343, 347, 366, 367, 393, 394, 395, 398, 399, 400, 403, 405], "vector": [124, 263], "point": [124, 184, 198, 309, 400, 401, 402, 403], "line": [124, 402, 403, 406], "polygon": [124, 397, 403], "union": [124, 399, 403], "linestr": 124, "serializ": [124, 125, 126, 393, 394, 395], "parcel": [124, 403], "b": [125, 347, 367, 395, 400, 403, 406], "numer": [125, 126, 343, 397, 399, 401, 403], "fall": [125, 301, 395, 397, 401, 402], "insid": [125, 192, 207, 208, 301, 395, 397, 399, 400, 402, 407], "By": [125, 367, 395, 397, 400, 403, 406, 407], "definit": [125, 367, 391, 395, 398, 399, 402], "21": [125, 393, 397, 398, 399, 400, 403], "24": [125, 393, 397, 398, 399, 400, 403], "charact": [126, 187, 205, 357, 400, 401, 406], "interest": [126, 310, 397, 403, 410], "high": [126, 397, 403], "appear": [127, 397, 399, 400, 402, 403, 405], "rule": [128, 129, 130, 131, 132, 133, 398, 399, 401, 402, 403, 406], "them": [128, 131, 174, 236, 248, 338, 365, 397, 398, 399, 400, 401, 402, 403, 406, 407], "nest": [128, 131, 397, 399, 401, 402], "structur": [128, 131, 173, 401, 402, 406, 408], "formal": [128, 131, 397, 399, 401, 402], "unknownconcepterror": [129, 132], "eval_obj": [130, 133], "logic": [130, 133, 399, 406], "chain": [130, 131, 133, 270, 399, 400, 401, 402, 403], "quantifi": [130, 133, 399, 401], "between": [130, 133, 159, 189, 315, 343, 347, 358, 360, 386, 399, 400, 403], "formul": [131, 399, 400, 401, 402, 403], "absolute_": 134, "add_": 135, "come": [136, 138, 292, 294, 401, 403, 406], "after_": 136, "and_": [137, 400], "before_": 138, "ceiling_": 139, "angl": [140, 141, 142, 166, 167, 170, 171, 172, 296, 297, 298, 322, 323, 326, 327, 328, 403], "radian": [140, 141, 142, 166, 167, 170, 171, 172, 296, 297, 298, 322, 323, 326, 327, 328, 403], "cosecant_": 140, "cosine_": 141, "cotangent_": 142, "root": [143, 168, 299, 324, 403], "cube_root_": 143, "divide_": 144, "during_": 145, "equal_": 146, "exclusive_or_": 147, "exponential_": [148, 314], "floor_": 149, "greater_": 150, "greater_equal_": 151, "in_": 152, "intersects_": 153, "is_missing_": 154, "less_": 155, "less": [156, 192, 311, 312, 348, 398, 402, 403, 406], "less_equal_": 156, "multiply_": 157, "natur": [158, 314, 397, 403, 405], "logarithm": [158, 314, 403], "natural_logarithm_": [158, 304], "normalized_difference_": 159, "not_": 160, "not_equal_": 161, "not_in_": 162, "not_missing_": 163, "or_": 164, "yth": [165, 321], "power_": 165, "secant_": 166, "sine_": 167, "square_root_": 168, "subtract_": 169, "tangent_": 170, "degre": [171, 172, 327, 328, 397, 399, 400, 401, 403], "to_degrees_": 171, "to_radians_": 172, "xarray_obj": 173, "intern": [173, 209, 283, 366, 399, 401, 402, 403, 410], "model": [173, 226, 369, 397, 399, 400, 401, 403], "accessor": [173, 226, 365, 369, 400], "recommend": [173, 400], "develop": [173, 397, 400, 408, 410], "practic": [173, 310, 397, 399, 400, 401, 403], "prefix": [173, 226, 369, 400], "content": [173, 196, 199, 235], "aling": 174, "done": [174, 400, 402, 403, 406, 409], "sever": [174, 310, 397, 400, 401, 402, 403, 407, 409], "wai": [174, 399, 400, 401, 402, 403, 405, 409], "simpli": [174, 399, 400, 403], "re": [174, 365, 398, 401, 402, 403], "match": [174, 403], "duplic": [174, 403], "alignmenterror": 174, "callabl": [175, 180, 188, 192, 237, 238, 239, 250, 251, 400], "pipe": [175, 400], "unless": [176, 403, 408], "state": [176, 399, 401, 403], "everi": [176, 399, 402], "latter": [176, 180, 291, 292, 293, 294, 300, 301, 302, 303, 306, 307, 309, 311, 312, 313, 315, 317, 320, 321, 325, 400, 401, 403], "invalidvaluetypeerror": [176, 178, 182, 183, 199, 212, 213, 220, 350, 400], "delini": 178, "toomanydimensionserror": [178, 199], "besid": [178, 399, 400], "missingdimensionerror": [178, 185, 213], "neither": 178, "drop": [179, 183, 403], "auxiliari": 179, "storag": [179, 397], "unknowndimensionerror": [181, 182, 185, 188, 191, 192, 200], "unknowncomponenterror": 181, "extrapol": [182, 403], "version": [182, 199, 282, 400, 403, 405, 406, 408], "neighbour": [182, 403], "bicub": [182, 403], "interpolate_na": 182, "funtion": 182, "rioxarrai": [182, 190], "raster_arrai": 182, "rasterarrai": 182, "support": [182, 199, 236, 250, 251, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 360, 397, 399, 400, 401, 402, 403, 408], "kept": [183, 403], "otherwis": [183, 397, 403, 405], "geoseri": 184, "labels_as_nam": 185, "zero": [185, 399, 403], "mixeddimensionserror": 185, "don": [185, 399, 400, 401, 403, 406], "t": [185, 397, 399, 400, 401, 403, 406], "sting": 187, "dim": [188, 192, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 400], "make": [189, 358, 398, 399, 400, 401, 402, 403, 405, 406, 407], "sure": [189, 406], "subsequ": [189, 397, 400, 403], "target": [190, 202, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 397], "xrasterbas": 190, "fill": [192, 225, 261, 310, 399, 400, 401, 402], "minimum": [192, 337, 338, 343, 380, 386, 403], "exclud": [192, 399], "__all__": 194, "write": [196, 199, 399, 402, 408], "csv": [196, 400], "disk": [196, 199, 400], "written": [196, 199, 399, 401, 405, 406], "datafram": [197, 400], "frame": [197, 198], "output_cr": [198, 199], "geospati": 198, "centroid": 198, "cloud_optim": 199, "compress": [199, 401], "cog": [199, 397, 400], "gdal": [199, 401, 403], "driver": 199, "lzw": 199, "export": [199, 399], "unstack": [199, 203, 204, 229, 400], "current": [199, 282, 358, 400, 401, 403], "rasterio": 199, "convert_datetime64": 202, "back": [203, 403], "inplac": [207, 208], "spatial_ref": [207, 397, 399, 400, 401, 403], "guarante": [207, 208], "dure": [207, 208, 235, 248, 282, 283, 301, 348, 349, 366, 398, 400, 402, 403, 405], "kind": [207, 208, 347, 358, 400, 402, 405, 408, 410], "mere": [207, 208, 226, 369, 400], "modifi": [207, 208, 235], "temporal_ref": [208, 397, 399, 400, 401, 403], "list_obj": 209, "vtype": 213, "reserveddimensionerror": 213, "ensur": [226, 369, 397, 400], "compat": [226, 369, 400], "behaviour": [226, 369, 400, 401, 403, 406], "take": [230, 236, 283, 349, 399, 400, 402, 403, 405, 406, 407], "care": [230, 236, 283, 349, 397, 399, 400, 403], "retain": 230, "ram": [230, 400], "still": [230, 399, 401, 407], "further": [230, 283, 399, 400, 401], "ref": [231, 402, 406], "sequenc": [231, 234, 397, 400], "custom_oper": [236, 400], "custom_reduc": [236, 400], "worker": [236, 349, 400], "queryrecip": [236, 283, 285, 398, 399, 400, 401, 402, 403], "overwritten": 236, "necessari": 236, "throw": [236, 400, 403], "error": [236, 400, 403, 406], "identifi": [241, 399], "invalidbuildingblockerror": 241, "found": [241, 250, 251, 397, 408], "param": [242, 401], "activ": [242, 266, 392, 398, 399, 400, 406, 409], "updat": [248, 282, 356, 397, 400, 403, 406], "unknownoperatorerror": [250, 400], "unknownreducererror": [251, 400], "apply_custom": [252, 400], "delin": 258, "unknownlabelerror": 266, "merg": [268, 399, 402, 406], "processing_chain": [270, 401], "unknownresulterror": 272, "shift": 275, "smooth": 276, "time_interv": [278, 292, 294, 301, 403], "scan": [282, 400], "influenc": [282, 400], "tweak": [282, 400], "behav": [282, 400], "dispers": [282, 400], "sub": [282, 397, 399, 400], "area": [282, 310, 397, 399, 400, 401, 402, 403], "might": [282, 348, 349, 400, 401, 402, 403, 406], "full": [282, 397, 398, 400, 403], "afterward": [282, 399, 400], "yet": [282, 283, 400], "raster": [283, 400, 401], "util": [283, 397, 399, 400], "ideal": [283, 400], "interrel": [283, 400], "actual": [283, 397, 400, 403, 406], "Such": [283, 397, 399, 400, 401, 402, 403], "absolut": [290, 348, 403], "later": [292, 401], "expect": [292, 294, 301, 309, 397, 400, 401, 403, 406], "earlier": 294, "ceil": [295, 348, 403], "smallest": [295, 338, 403], "cosec": [296, 348, 403], "cosin": [297, 348, 403], "cotang": [298, 348, 403], "divid": [300, 348, 403], "That": [303, 320, 330, 332, 333, 339, 340, 341, 399, 400, 401, 402, 403], "null": [303, 310, 320, 330, 332, 333, 339, 340, 341, 359, 363, 364, 397], "matter": [303, 320], "exponenti": [304, 348, 403], "power": [304, 321, 348, 403], "euler": [304, 314], "approxim": [304, 314, 399, 402], "718": [304, 314], "invers": [304, 314], "floor": [305, 348, 400, 403], "largest": [305, 403], "remain": [308, 318, 403], "among": [308, 318, 403], "reason": [310, 400, 405], "span": 310, "orbit": 310, "made": [310, 398, 399, 401, 403], "wa": [310, 398, 399, 400, 401, 403, 405, 406], "mark": [310, 403, 406], "calcul": [315, 335, 341, 342, 344, 345, 346, 378, 379, 384, 385, 387, 388, 389, 398, 400, 403], "remot": 315, "sens": [315, 398, 399], "ndvi": 315, "ndwi": 315, "secant": [322, 348, 403], "sine": [323, 348, 403], "subtract": [325, 348, 403], "tangent": [326, 348, 403], "last": [333, 348, 403], "maximum": [334, 343, 377, 386], "median": [336, 348, 398, 403], "modal": 338, "percentag": [341, 348, 398, 399, 403], "much": [341, 401, 402], "percent": [341, 398], "product": [342, 348, 397, 403], "recent": 343, "nanosecond": 343, "deviat": [344, 387, 403], "sum": [345, 348, 400, 402, 403], "varianc": [346, 348, 403], "m": [347, 400, 406], "u": [347, 399, 400, 402, 403, 405, 406], "f": [347, 397, 398, 400, 401, 406, 409], "veri": [347, 358, 397, 399, 400, 401, 406], "technic": [347, 358, 400, 410], "orient": [347, 358, 400, 405, 410], "etc": [347, 358, 400, 403], "gener": [347, 358, 397, 400, 402, 408, 410], "__preserve_labels__": [348, 400], "assign_at": 348, "cube_root": [348, 403], "exclusive_or": [348, 403], "greater_equ": [348, 403], "is_miss": [348, 403], "less_equ": [348, 403], "n": [348, 397, 399, 400, 401, 403], "natural_logarithm": [348, 403], "normalized_differ": [348, 403], "not_equ": [348, 399, 403], "not_in": [348, 398, 403], "not_miss": [348, 403], "square_root": [348, 403], "standard_devi": [348, 403], "to_degre": [348, 403], "to_radian": [348, 403], "chang": [348, 349, 400, 403, 406], "comparison": [348, 349, 400, 403], "accept": [348, 397, 399, 400, 403, 405, 406], "extra": [348, 400], "ye": [349, 400], "determin": [349, 350, 358, 400, 403, 405], "type_promotion_manu": [349, 400], "any_": [350, 373], "sum_": [350, 388], "quantit": [350, 358, 400], "valueerror": 350, "mainli": [357, 397, 399, 403, 410], "pair": [357, 397, 399, 403], "five": [358, 402], "main": [358, 400, 402, 403, 406], "qualit": [358, 400], "could": [358, 400, 402, 403, 405], "whether": 359, "tz_from": 360, "tz_to": 360, "nativ": [360, 399, 401, 402, 403], "anymor": [360, 403], "therefor": [360, 397, 400, 401], "tz_convert": 360, "unix": [361, 398], "sinc": [361, 397, 399, 400, 401, 402, 403], "1970": 361, "appropri": [362, 405], "nat": 362, "infinit": 363, "treat": [365, 366, 400, 401, 403], "value_typ": [365, 397, 399, 400, 401, 403], "value_label": [365, 397, 400, 403], "organ": [365, 397, 401], "spatial_ext": [366, 400], "temporal_ext": [366, 400], "temporal_resolut": 366, "templat": [366, 400, 406], "thu": [366, 397, 399, 400, 403], "all_": 372, "count_": [374, 400], "first_": 375, "last_": 376, "max_": 377, "mean_": 378, "median_": 379, "min_": 380, "mode_": 381, "n_": 382, "none_": 383, "percentage_": 384, "product_": 385, "range_": 386, "standard_deviation_": 387, "variance_": 389, "s2_band01": 390, "water_count": [391, 398, 400, 402], "finit": [393, 403], "22": [393, 397, 398, 399, 400, 401, 403], "23": [393, 397, 398, 399, 400, 403], "elev": 396, "explor": [397, 398, 399, 400, 401, 402, 403, 407], "notebook": [397, 398, 399, 400, 401, 402, 403, 407], "interact": [397, 398, 399, 400, 401, 402, 403, 405, 407], "possibli": 397, "digit": 397, "surfac": [397, 399, 402], "imag": [397, 399, 401, 402], "domain": [397, 399, 401, 402], "framework": [397, 399, 408], "manag": 397, "softwar": [397, 401, 408], "expert": [397, 399, 401, 402], "semantiqu": [397, 398, 400, 401, 402, 403, 406, 408, 409, 410], "packag": [397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409], "mani": [397, 398, 399, 400, 401, 402, 403, 406], "approach": [397, 399], "we": [397, 398, 399, 400, 401, 402, 403, 405, 406, 408], "flexibl": [397, 399, 400], "own": [397, 399, 400, 401, 403, 407], "seen": [397, 399, 400], "blueprint": [397, 399], "note": [397, 399, 400, 401, 403], "never": [397, 400, 401, 403, 406], "access": [397, 399, 400, 407, 408], "look": [397, 398, 399, 400, 401, 402], "interoper": 397, "repositori": [397, 406, 409], "descript": [397, 399, 402, 403], "spectral": 397, "band": [397, 398], "uniqu": 397, "about": [397, 399, 400, 401, 402, 405, 406], "python": [397, 399, 401, 403, 406, 408], "blue": [397, 398, 401], "reflect": [397, 398, 400, 402], "hasattr": [397, 399], "expos": [397, 399], "abl": [397, 399, 400, 403, 406], "exact": [397, 399, 403], "independ": [397, 399, 401, 402, 403], "5": [397, 398, 399, 400, 401, 402, 403], "deploi": 397, "open": [397, 398, 399, 400, 401, 402, 403, 405, 406, 408], "terminologi": [397, 401, 402], "measur": 397, "below": [397, 399, 400, 402, 403, 406, 407], "precis": 397, "id": 397, "additionali": 397, "our": [397, 398, 399, 400, 401, 402, 403], "environ": [397, 405, 407, 409], "show": [397, 398, 399, 400, 401, 402, 403, 406], "snippet": [397, 402, 403], "odc_obj": 397, "somedir": 397, "r": [397, 398, 399, 400, 401, 402, 403], "As": [397, 399, 401, 403, 410], "so": [397, 400, 401, 402, 406], "small": [397, 401, 402, 403], "noth": [397, 401, 402, 403], "recogn": 397, "Be": 397, "awar": [397, 403], "filepath": 397, "filenam": [397, 400], "now": [397, 399, 400, 401, 402], "demo": [397, 399, 400, 407], "6": [397, 398, 399, 400, 401, 402, 403], "7": [397, 398, 399, 400, 401, 402, 403], "isinst": [397, 399], "request": [397, 400, 405], "8": [397, 398, 399, 400, 401, 402, 403], "9": [397, 398, 399, 400, 401, 402, 403], "10": [397, 398, 399, 400, 401, 402, 403, 406], "colortyp": [397, 399, 400, 403], "11": [397, 398, 399, 400, 401, 402, 403], "lt": [397, 399, 400, 401, 403], "x27": [397, 399, 400, 401, 403], "563": [397, 399, 401], "576": [397, 399, 401], "gt": [397, 399, 400, 401, 403], "29": [397, 399, 400, 403], "27": [397, 398, 399, 400, 403], "int32": 397, "53e": [397, 399, 401], "06": [397, 399, 400, 401, 403], "536e": [397, 399, 401], "697e": [397, 399, 401], "691e": [397, 399, 401], "15t10": [397, 399, 400, 401, 403], "17": [397, 398, 399, 400, 401, 403], "33": [397, 398, 399, 400, 401, 403], "408715": [397, 398, 399, 400, 401, 403], "spatial_feat": [397, 399, 400, 401, 403], "area_or_point": [397, 399, 400, 403], "scale_factor": [397, 399, 400, 403], "add_offset": [397, 399, 400, 403], "_fillvalu": [397, 399, 400, 403], "7976931348623157e": [397, 399, 400, 403], "308": [397, 399, 400, 403], "svhnir": [397, 400, 403], "svlnir": [397, 400, 403], "avhnir": [397, 400, 403], "avlnir": [397, 400, 403], "3y": [397, 399, 400, 403], "563x": [397, 399, 401], "57629": 397, "0arrai": [397, 399, 400, 401, 403], "int320crs_wkt": 397, "projc": [397, 399, 400, 401, 403], "quot": [397, 399, 400, 401, 403], "etrs89": [397, 399, 400, 401, 403], "extend": [397, 399, 400, 401, 403, 406, 407], "laea": [397, 399, 400, 401, 403], "europ": [397, 399, 400, 401, 403], "geogc": [397, 399, 400, 401, 403], "datum": [397, 399, 400, 401, 403], "european_terrestrial_reference_system_1989": [397, 399, 400, 401, 403], "spheroid": [397, 399, 400, 401, 403], "gr": [397, 399, 400, 401, 403], "1980": [397, 399, 400, 401, 403], "6378137": [397, 399, 400, 401, 403], "298": [397, 399, 400, 401, 403], "257222101": [397, 399, 400, 401, 403], "author": [397, 399, 400, 401, 403], "7019": [397, 399, 400, 401, 403], "6258": [397, 399, 400, 401, 403], "primem": [397, 399, 400, 401, 403], "greenwich": [397, 399, 400, 401, 403], "8901": [397, 399, 400, 401, 403], "0174532925199433": [397, 399, 400, 401, 403], "9122": [397, 399, 400, 401, 403], "4258": [397, 399, 400, 401, 403], "project": [397, 399, 400, 401, 403, 406, 408], "lambert_azimuthal_equal_area": [397, 399, 400, 401, 403], "latitude_of_cent": [397, 399, 400, 401, 403], "52": [397, 399, 400, 401, 403], "longitude_of_cent": [397, 399, 400, 401, 403], "false_east": [397, 399, 400, 401, 403], "4321000": [397, 399, 400, 401, 403], "false_north": [397, 399, 400, 401, 403], "3210000": [397, 399, 400, 401, 403], "metr": [397, 399, 400, 401, 403], "9001": [397, 399, 400, 401, 403], "north": [397, 399, 400, 401, 403], "east": [397, 399, 400, 401, 403], "semi_major_axi": [397, 399, 400, 401, 403], "0semi_minor_axi": [397, 399, 400, 401, 403], "6356752": [397, 399, 400, 401, 403], "314140356inverse_flatten": [397, 399, 400, 401, 403], "257222101reference_ellipsoid_nam": [397, 399, 400, 401, 403], "1980longitude_of_prime_meridian": [397, 399, 400, 401, 403], "0prime_meridian_nam": [397, 399, 400, 401, 403], "greenwichgeographic_crs_nam": [397, 399, 400, 401, 403], "etrs89horizontal_datum_nam": [397, 399, 400, 401, 403], "european": [397, 399, 400, 401, 403], "terrestri": [397, 399, 400, 401, 403], "1989projected_crs_nam": [397, 399, 400, 401, 403], "europegrid_mapping_nam": [397, 399, 400, 401, 403], "lambert_azimuthal_equal_arealatitude_of_projection_origin": [397, 399, 400, 401, 403], "0longitude_of_projection_origin": [397, 399, 400, 401, 403], "0false_east": [397, 399, 400, 401, 403], "0false_north": [397, 399, 400, 401, 403], "0spatial_ref": [397, 399, 400, 401, 403], "geotransform": [397, 399, 400, 401, 403], "4530110": [397, 399, 401], "2696630": [397, 399, 401], "float644": [397, 399, 400, 401, 403], "06axi": [397, 399, 400, 401, 403], "xlong_nam": [397, 399, 400, 401, 403], "projectionstandard_nam": [397, 399, 400, 401, 403], "projection_x_coordinateunit": [397, 399, 400, 401, 403], "metreresolut": [397, 399, 400, 401, 403], "10value_typ": [397, 399, 401], "continuousarrai": [397, 399, 400, 401, 403], "4530115": [397, 399, 401], "4530125": [397, 399, 401], "4530135": [397, 399, 401], "4535845": [397, 399, 401], "4535855": [397, 399, 401], "4535865": [397, 399, 401], "float642": [397, 399, 400, 401, 403], "ylong_nam": [397, 399, 400, 401, 403], "projection_y_coordinateunit": [397, 399, 400, 401, 403], "2696625": [397, 399, 401], "2696615": [397, 399, 401], "2696605": [397, 399, 401], "2691025": [397, 399, 401], "2691015": [397, 399, 401], "2691005": [397, 399, 401], "int320zon": 397, "utcarrai": [397, 399, 400, 401, 403], "datetimearrai": [397, 399, 400, 401, 403], "408715000": [397, 399, 400, 401, 403], "09": [397, 398, 399, 400, 401, 403], "05t10": [397, 399, 400, 401, 403], "43": [397, 398, 399, 400, 401, 403], "167942000": [397, 399, 400, 401, 403], "19t10": [397, 399, 400, 401, 403], "34": [397, 398, 399, 400, 401, 402, 403], "610661000": [397, 399, 400, 401, 403], "float641": [397, 399, 400, 401, 403], "0value_typ": [397, 399, 400, 401, 403], "nominalvalue_label": [397, 399, 400, 401, 403], "feature_1": [397, 399, 400, 401, 403], "xpandasindexpandasindex": [397, 399, 400, 401, 403], "4530145": [397, 399, 401], "4530155": [397, 399, 401], "4530165": [397, 399, 401], "4530175": [397, 399, 401], "4530185": [397, 399, 401], "4530195": [397, 399, 401], "4530205": [397, 399, 401], "4535775": [397, 399, 401], "4535785": [397, 399, 401], "4535795": [397, 399, 401], "4535805": [397, 399, 401], "4535815": [397, 399, 401], "4535825": [397, 399, 401], "4535835": [397, 399, 401], "length": [397, 399, 401], "ypandasindexpandasindex": [397, 399, 400, 401, 403], "2696595": [397, 399, 401], "2696585": [397, 399, 401], "2696575": [397, 399, 401], "2696565": [397, 399, 401], "2696555": [397, 399, 401], "2696545": [397, 399, 401], "2696535": [397, 399, 401], "2691095": [397, 399, 401], "2691085": [397, 399, 401], "2691075": [397, 399, 401], "2691065": [397, 399, 401], "2691055": [397, 399, 401], "2691045": [397, 399, 401], "2691035": [397, 399, 401], "timepandasindexpandasindex": [397, 399, 400, 401, 403], "datetimeindex": [397, 399, 400, 401, 403], "15": [397, 398, 399, 400, 401, 402, 403], "05": [397, 398, 399, 400, 401, 403], "167942": [397, 398, 399, 400, 401, 403], "19": [397, 398, 399, 400, 401, 403], "610661": [397, 398, 399, 400, 401, 403], "freq": [397, 399, 400, 401, 403], "areascale_factor": [397, 399, 400, 403], "0add_offset": [397, 399, 400, 403], "0_fillvalu": [397, 399, 400, 403], "308value_typ": [397, 399, 400, 403], "ordinalvalue_label": [397, 403], "wv": [397, 400, 403], "shv": [397, 400, 403], "shrbrhnir": [397, 400, 403], "shrbrlnir": [397, 400, 403], "hrbcr": [397, 400, 403], "wr": [397, 400, 403], "pb": [397, 400, 403], "gh": [397, 400, 403], "13": [397, 398, 399, 400, 401, 402, 403], "vbbb": [397, 400, 403], "14": [397, 398, 399, 400, 401, 402, 403], "bbb": [397, 400, 403], "sbb": [397, 400, 403], "16": [397, 398, 399, 400, 401, 403, 404], "abb": [397, 400, 403], "dbb": [397, 400, 403], "18": [397, 398, 399, 400, 401, 403], "wbborshb": [397, 400, 403], "nirpbb": [397, 400, 403], "20": [397, 398, 399, 400, 403], "ba": [397, 400, 403], "dpwash": [397, 400, 403], "slwash": [397, 400, 403], "twash": [397, 400, 403], "saslwa": [397, 400, 403], "tnclv": [397, 400, 403], "28": [397, 399, 400, 403], "tnclwa_bb": [397, 400, 403], "sn": [397, 400, 403], "30": [397, 399, 400, 401, 403], "shsn": [397, 400, 403], "sh": [397, 400, 403], "32": [397, 400, 403], "flame": [397, 400, 403], "strong": 397, "nir": [397, 400], "darkgreen": 397, "low": 397, "forestgreen": 397, "limegreen": 397, "mediumseagreen": 397, "weak": 397, "springgreen": 397, "shadow": [397, 399], "palegreen": 397, "shrub": 397, "rangeland": 397, "darkgoldenrod": 397, "goldenrod": 397, "herbac": 397, "gold": 397, "khaki": 397, "pit": 397, "bog": 397, "oliv": 397, "greenhous": 397, "yellowgreen": 397, "barren": 397, "land": [397, 401, 402], "up": [397, 400, 402, 403], "darkr": 397, "firebrick": 397, "red": [397, 400], "tomato": 397, "dark": 397, "salmon": 397, "lightsalmon": 397, "Near": 397, "infrar": 397, "peak": 397, "coral": 397, "burn": 397, "yellow": 397, "deep": [397, 399, 400], "dodgerblu": 397, "shallow": [397, 399], "deepskyblu": [397, 399], "turbid": [397, 399], "lightskyblu": 397, "salti": [397, 399], "lightblu": 397, "lightgrei": [397, 399], "smoke": 397, "plume": 397, "dimgrei": 397, "thin": 397, "aquamarin": 397, "paleturquois": 397, "snow": [397, 399, 403], "mistyros": 397, "slategrei": 397, "plum": 397, "unknown": 397, "black": 397, "legend": [397, 399, 401], "tick": [397, 398, 399, 401], "plot": [397, 398, 399, 401], "col": [397, 399], "cbar_kwarg": [397, 398, 399, 401], "facetgrid": [397, 399], "0x1e7da91caf0": 397, "third": [397, 403], "hoc": 397, "contrari": 397, "doesn": [397, 403], "pre": 397, "organis": 397, "ingest": 397, "asset": 397, "link": 397, "offer": [397, 400, 401, 403, 407], "earth": 397, "timespan": [397, 399], "iter": [397, 399, 400], "upon": 397, "proj": 397, "bbox": 397, "transform": 397, "addition": 397, "infer": [397, 399, 401], "sentinel": 397, "registri": 397, "aw": 397, "pystac_cli": 397, "client": 397, "xmin": 397, "ymin": 397, "xmax": 397, "ymax": 397, "75": [397, 403], "47": [397, 400, 403], "25": [397, 398, 399, 400, 403], "aoi": 397, "t_rang": 397, "07": [397, 400], "08": [397, 400], "catalog": 397, "http": [397, 405, 406, 408, 409], "element84": 397, "com": [397, 406, 409], "v1": 397, "l2a": 397, "100": [397, 400, 403], "item_col": 397, "part": [397, 399, 400, 401, 403], "print": [397, 400, 401, 402], "len": 397, "ii": [397, 400], "stac_json": 397, "item_collection_as_dict": 397, "gdf": 397, "4326": [397, 398], "platform": 397, "constel": 397, "instrument": 397, "cloud_cov": [397, 398], "mgr": 397, "utm_zon": 397, "latitude_band": 397, "grid_squar": 397, "s2": 397, "datastrip_id": 397, "granule_id": 397, "reflectance_conversion_factor": 397, "earthsearch": 397, "s3_path": 397, "payload_id": 397, "boa_offset_appli": 397, "00025": 397, "85369": 397, "46": [397, 400, 403], "86571": 397, "2023": 397, "09t07": 397, "535z": 397, "2b": 397, "msi": 397, "000680": 397, "32630": 397, "wt": 397, "s2b_oper_msi_l2a_ds_s2rp_20230503t232911_s2020": 397, "s2b_oper_msi_l2a_tl_s2rp_20230503t232911_a0177": 397, "969660": 397, "30t11": 397, "218000z": 397, "s3": 397, "w": [397, 399, 400, 401, 403], "roda": 397, "sentinel2": 397, "workflow": [397, 400, 406], "b2b3": 397, "53274": 397, "84432": 397, "2022": 397, "06t09": 397, "59": [397, 400, 403], "398z": 397, "044423": 397, "s2b_oper_msi_l2a_ds_epae_20200730t131922_s2020": 397, "s2b_oper_msi_l2a_tl_epae_20200730t131922_a0177": 397, "217000z": 397, "2aa2": 397, "18t00": 397, "159z": 397, "2a": 397, "82": [397, 403], "378161": 397, "s2a_oper_msi_l2a_ds_s2rp_20230323t230825_s2020": 397, "s2a_oper_msi_l2a_tl_s2rp_20230323t230825_a0265": 397, "968747": 397, "25t11": 397, "991000z": 397, "e73f": 397, "219z": 397, "76": [397, 403], "555313": 397, "s2a_oper_msi_l2a_ds_mps__20200725t120536_s2020": 397, "s2a_oper_msi_l2a_tl_mps__20200725t120536_a0265": 397, "1ede": 397, "09t03": 397, "50": [397, 400, 403, 406], "038z": 397, "680962": 397, "s2b_oper_msi_l2a_ds_s2rp_20230423t113853_s2020": 397, "s2b_oper_msi_l2a_tl_s2rp_20230423t113853_a0176": 397, "968061": 397, "20t11": 397, "203000z": 397, "d045": 397, "06t05": 397, "55": [397, 400, 403], "629z": 397, "963404": 397, "s2b_oper_msi_l2a_ds_epae_20200720t131521_s2020": 397, "s2b_oper_msi_l2a_tl_epae_20200720t131521_a0176": 397, "202000z": 397, "ba8f": 397, "09t09": 397, "384z": 397, "85": [397, 403], "173172": 397, "s2a_oper_msi_l2a_ds_s2rp_20230423t090139_s2020": 397, "s2a_oper_msi_l2a_tl_s2rp_20230423t090139_a0264": 397, "967606": 397, "15t11": 397, "131000z": 397, "61a3": 397, "863z": 397, "81": [397, 403], "696101": 397, "s2a_oper_msi_l2a_ds_sgs__20200715t140105_s2020": 397, "s2a_oper_msi_l2a_tl_sgs__20200715t140105_a0264": 397, "130000z": 397, "cbfa": 397, "row": 397, "42": [397, 400, 403], "warn": 397, "layout_stac": 397, "int8": 397, "context": [397, 398, 400, 403, 410], "001": 397, "catch_warn": 397, "simplefilt": 397, "userwarn": 397, "scl": 397, "e4a20ff0df5f8779104284b323af0f6b": 397, "500": 397, "749": 397, "748": 397, "253": 397, "252": 397, "251": 397, "spec": 397, "rasterspec": 397, "00": [397, 400], "mask": 397, "satur": 397, "ve": 397, "4y": 397, "500x": 397, "5009": 397, "251resolut": 397, "001value_typ": 397, "float6447": 397, "25resolut": 397, "30value_typ": 397, "15t00": 397, "000000000": [397, 400], "20t00": 397, "25t00": 397, "30t00": 397, "747": 397, "746": 397, "745": 397, "744": 397, "743": 397, "742": 397, "741": 397, "26": [397, 398, 399, 400, 403], "259": 397, "258": 397, "257": 397, "2560000000000002": 397, "255": [397, 400], "254": 397, "256": 397, "resolutions_xi": 397, "4326transform": 397, "bare": 397, "cl_med": 397, "cl_high": 397, "cl_cirru": 397, "defect": 397, "64": [397, 400, 403], "131": [397, 403], "60": [397, 400, 403], "204": 397, "unclassifi": 397, "117": [397, 403], "113": [397, 403], "medium": 397, "prob": 397, "174": [397, 403], "170": [397, 403], "cirru": 397, "102": [397, 403], "xr": [398, 400, 401, 403], "matplotlib": [398, 400, 401], "pyplot": [398, 400, 401], "plt": [398, 400, 401], "copi": [398, 400, 403, 408], "were": [398, 401, 405], "water_count_tim": 398, "vegetation_count_tim": 398, "water_count_spac": [398, 400], "vegetation_count_spac": 398, "ax1": [398, 401], "ax2": [398, 401], "subplot": [398, 401], "figsiz": [398, 401], "nanmin": [398, 401], "nanmax": [398, 401], "cm": [398, 401], "cmap": [398, 401], "set_titl": [398, 401], "vegetation_count": [398, 402], "green": [398, 401], "tight_layout": [398, 401], "draw": [398, 401, 403], "water_count_df": 398, "to_datafram": [398, 400], "vegetation_count_df": 398, "join": 398, "6045": 398, "44804": [398, 401], "243234": 398, "78607": [398, 401], "89174": 398, "red_band": 398, "s2_band04": [398, 400], "green_band": 398, "s2_band03": 398, "blue_band": 398, "s2_band02": [398, 402], "imshow": 398, "rgb": 398, "robust": 398, "land_cov": [398, 403], "builtup": [398, 399], "0066cc": 398, "00cc00": 398, "cc0000": 398, "snow_cov": 398, "cloud_free_imag": 398, "astyp": 398, "overlap": [398, 400, 401], "to_cr": 398, "trust": [398, 401, 403], "new_context": [398, 400, 403], "deepcopi": [398, 400, 403], "avg_water_count_per_parcel": 398, "df": 398, "northern": [398, 403], "939145": 398, "southern": [398, 403], "175439": 398, "water_count_per_season": 398, "autumn": 398, "sel": 398, "winter": 398, "conceptu": [398, 402], "even": [398, 400, 401, 406], "easili": [398, 399, 401], "achiev": 398, "let": [398, 400, 401, 402, 403], "imaginari": 398, "wet": 398, "dry": 398, "newmap": 398, "wet_season": 398, "period": [398, 405], "dry_season": 398, "newcontext": 398, "vegetation_count_per_season": 398, "date": [398, 401, 403], "assign_tim": [398, 403], "isfinit": 398, "ontologi": [399, 400, 401, 402, 408], "scratch": 399, "probabl": [399, 401], "emphas": 399, "accur": 399, "exploit": 399, "analyz": 399, "pattern": [399, 405], "around": [399, 401, 405, 406], "larg": [399, 401], "decid": 399, "knowledg": [399, 401], "driven": 399, "hybrid": 399, "interpret": 399, "predict": 399, "machin": 399, "learn": [399, 405, 406], "classifi": 399, "depth": [399, 401, 402], "fix": [399, 403, 406], "directli": [399, 400, 401, 402, 403, 406, 409], "lake": [399, 402], "blueish": [399, 402], "textur": 399, "flat": [399, 402], "whole": [399, 400, 403], "avail": [399, 403, 405], "complex": [399, 401], "heavili": 399, "simplifi": [399, 400, 402], "idea": [399, 400, 406, 408], "work": [399, 403, 406], "focu": 399, "sole": [399, 402], "Its": [399, 400], "relationship": 399, "meet": 399, "said": [399, 403], "enrich": 399, "abov": [399, 400, 401, 402, 403], "furthermor": [399, 402], "topographi": [399, 402], "slope": 399, "auto": [399, 402, 410], "complet": [399, 401, 402, 403], "friendli": [399, 403, 406], "river": 399, "sai": 399, "twice": [399, 402, 403], "intuit": [399, 401, 403], "Or": 399, "basic": [399, 401, 402, 403], "plain": 399, "again": [399, 400, 401, 402, 403], "oversimplifi": 399, "natural_area": 399, "80": [399, 403], "ruleset": 399, "moment": [399, 401, 409], "sound": [399, 406], "slighlti": 399, "overwhelm": 399, "season": [399, 403], "harvest_season": 399, "vegetation_during_harvest": 399, "go": [399, 403], "simpler": 399, "resourc": [399, 407], "atmospher": [399, 402], "dump": [399, 401, 402], "indent": [399, 401, 402, 406], "worri": [399, 400], "your": [399, 400, 403, 407], "int64": [399, 400, 401, 403], "binaryxarrai": [399, 400, 403], "5760": 399, "int640crs_wkt": [399, 400, 401, 403], "int640zon": [399, 400, 401, 403], "is_wat": 399, "0x7f5a66999090": 399, "task": [400, 401], "explain": [400, 402, 403], "1500": 400, "parser": 400, "reproject": 400, "orgin": 400, "disconnect": [400, 403], "expand": 400, "due": 400, "696e": [400, 403], "695e": 400, "693e": 400, "692e": [400, 403], "531e": 400, "532e": [400, 403], "534e": 400, "535e": [400, 403], "long_nam": [400, 403], "2y": [400, 403], "4x": 400, "41": [400, 403], "31value_typ": 400, "01t00": 400, "31t00": 400, "metrevalue_typ": 400, "continuousresolut": 400, "1500arrai": 400, "2696250": 400, "2694750": 400, "2693250": 400, "2691750": 400, "4530750": 400, "4532250": 400, "4533750": 400, "4535250": 400, "4530000": 400, "2697000": 400, "indexlong_nam": 400, "index_fillvalu": 400, "nanvalue_typ": 400, "39": [400, 401, 403], "blue_map": [400, 401], "green_map": [400, 401], "blue_curv": [400, 401], "green_curv": [400, 401], "blue_stat": [400, 401], "green_stat": [400, 401], "reach": 400, "call_handl": 400, "handle_concept": 400, "handle_reduc": 400, "40": [400, 403], "1500value_typ": 400, "xarray_object": 400, "convers": [400, 403], "wrangl": [400, 402], "And": [400, 401, 403], "preserve_label": 400, "thrown": 400, "detect": 400, "unsupport": 400, "attr": 400, "just": [400, 401, 402, 403, 405], "dtype_map": 400, "typepromot": 400, "next": [400, 402, 403], "section": [400, 403], "35": [400, 403], "36": [400, 403], "37": [400, 401, 403], "38": [400, 403], "why": [400, 402, 403, 405], "strict": 400, "out": [400, 403], "cours": [400, 402], "decreas": [400, 402], "No": [400, 405, 406, 407], "easi": [400, 402], "tell": [400, 406], "must": 400, "realli": [400, 406], "trivial": [400, 402, 403], "def": [400, 401], "make_tru": 400, "newobj": 400, "ones_lik": 400, "del": 400, "new_recip": 400, "val": 400, "ones": 400, "unknownverberror": 400, "44": [400, 403], "45": [400, 403], "compar": [400, 403], "etcetera": [400, 402], "taken": [400, 403], "modul": [400, 403, 408], "plan": 400, "good": [400, 402], "apply_ufunc": 400, "shown": [400, 402], "forget": [400, 406], "receiv": 400, "bar": [400, 403, 406], "modulu": 400, "__preserve_label": 400, "lambda": 400, "mod": 400, "align_with": 400, "replac": 400, "s2_band08": 400, "48": [400, 403], "49": [400, 403], "51": [400, 403], "434": 400, "530": 400, "553": 400, "856": 400, "499": 400, "725": 400, "291": 400, "378": 400, "427": 400, "2690": 400, "310": 400, "644": 400, "231": 400, "317": 400, "656": 400, "211": 400, "273": 400, "195": [400, 403], "245": 400, "61": [400, 403], "367": 400, "229": 400, "210": 400, "188": [400, 403], "288": 400, "77": [400, 403], "709": 400, "136": [400, 403], "172": [400, 403], "314": 400, "161": [400, 403], "737": 400, "101": [400, 403], "752": 400, "340": 400, "409": 400, "247": 400, "344": 400, "724": 400, "1085": 400, "387": 400, "1549": 400, "556": 400, "369": 400, "aggreg": [400, 401, 403], "slice": [400, 403], "variabl": [400, 406], "sum_of_squar": 400, "53": [400, 403], "54": [400, 403], "56": [400, 403], "57": [400, 403], "1983427e": 400, "3802670e": 400, "9970504e": 400, "58": [400, 403], "to_geodatafram": 400, "000": 400, "to_csv": 400, "to_geotiff": 400, "proport": 400, "intermedi": 400, "downstream": 400, "foresight": 400, "accordingli": 400, "preced": 400, "drastic": 400, "5x5": 400, "resolv": 400, "dynam": 400, "basi": [400, 408], "initialis": 400, "fed": 400, "qp": 400, "seq": 400, "62": [400, 403], "lead": [400, 402, 403, 405], "effect": [400, 403], "redund": 400, "overal": [400, 405], "significantli": 400, "local": 400, "analys": 400, "sort": [400, 405], "worst": 400, "benefit": 400, "quickli": 400, "optimis": 400, "mind": 400, "design": [400, 403], "particularli": [400, 403], "benefici": 400, "staccub": 400, "internet": 400, "debug": 400, "help": [400, 403, 406], "63": [400, 403], "sy": 400, "logger": 400, "getlogg": 400, "setlevel": 400, "addhandl": 400, "filehandl": 400, "txt": 400, "real": [401, 402], "world": [401, 402], "stabl": 401, "event": [401, 402, 405], "desir": 401, "conveni": [401, 402], "commonli": [401, 402], "analyt": 401, "word": [401, 403], "increasingli": 401, "galleri": [401, 407], "shareabl": 401, "peopl": [401, 405], "constructr": 401, "term": [401, 402, 405], "distribut": [401, 408], "alongsid": 401, "opendatacub": 401, "primivit": 401, "intend": [401, 403], "paramat": 401, "odc": 401, "session": 401, "With": [401, 402], "multip": 401, "zell": 401, "am": 401, "salzbug": 401, "austria": 401, "geodf": 401, "iso8601": [401, 403], "31t14": [401, 403], "long": [401, 402, 403], "understand": [401, 403], "meter": 401, "geograph": 401, "readi": 401, "hoorai": 401, "quit": 401, "bit": 401, "patient": 401, "backbon": 401, "analysi": 401, "discretexarrai": [401, 403], "5761": 401, "48e": 401, "04": 401, "861e": 401, "04arrai": 401, "dimensionless": [401, 403], "123411": 401, "234e": 401, "05arrai": 401, "additon": 401, "themat": 401, "visual": 401, "lot": 401, "impress": 401, "make_plot": 401, "titl": 401, "rememb": [402, 403], "At": [402, 403, 409], "piec": [402, 403], "someth": [402, 403, 406], "hierarchi": 402, "lowest": 402, "forest": 402, "phenonemon": 402, "bodi": [402, 405], "place": 402, "fire": 402, "produc": [402, 403], "intens": 402, "radiat": 402, "artifact": 402, "jupyt": 402, "although": 402, "advanc": [402, 403, 405, 407, 410], "free": [402, 405, 406], "too": 402, "complic": [402, 407], "broken": 402, "summed_count": 402, "previous": 402, "introduc": 402, "slightli": 402, "constantli": 402, "But": 402, "would": [402, 403], "longer": 402, "readabl": 402, "onc": [402, 403, 407], "came": 402, "improv": [402, 406], "speed": 402, "Of": 402, "talk": 402, "someon": [402, 406], "easier": [402, 403], "impli": [402, 403, 408], "feel": [402, 406], "singular": 402, "autocomplet": 403, "NOT": 403, "simplest": 403, "x_": 403, "usag": 403, "leq": 403, "geq": 403, "neq": 403, "trigonometr": 403, "sun": 403, "zenith": 403, "frac": 403, "co": 403, "sin": 403, "tan": 403, "not_wat": 403, "533e": 403, "694e": 403, "3x": 403, "1800value_typ": 403, "4531500": 403, "4533300": 403, "4535100": 403, "2695500": 403, "2693700": 403, "2691900": 403, "4530600": 403, "2696400": 403, "y_": 403, "subdivid": 403, "algebra": 403, "th": 403, "hold": 403, "membership": 403, "special": 403, "anywher": 403, "notin": 403, "329": 403, "live": 403, "deal": 403, "earliest": 403, "latest": 403, "earli": 403, "late": 403, "in_parcel": 403, "home": 403, "luuk": 403, "miniconda3": 403, "env": [403, 406, 409], "lib": 403, "python3": 403, "site": 403, "py": 403, "407": 403, "runtimewarn": 403, "encount": 403, "cast": [403, 405], "multiarrai": 403, "copyto": 403, "fill_valu": 403, "unsaf": 403, "necessarili": 403, "vice": 403, "versa": 403, "secondli": 403, "clear": 403, "yourself": 403, "equival": 403, "datetimexarrai": 403, "32019": 403, "610661arrai": 403, "standard_nam": 403, "projection_x_coordin": 403, "continuousxarrai": 403, "06arrai": 403, "coordsxarrai": 403, "hour": 403, "2020arrai": 403, "especi": [403, 406], "feat": [403, 406], "unchang": 403, "not_cloud": 403, "65": 403, "66": 403, "67": 403, "68": 403, "69": 403, "70": 403, "71": 403, "72": 403, "73": 403, "74": 403, "3nan": 403, "handi": 403, "filter_tim": 403, "explicitli": 403, "filter_spac": 403, "78": 403, "79": 403, "true_veget": 403, "83": 403, "84": 403, "99": 403, "86": 403, "87": 403, "88": 403, "89": 403, "90": 403, "91": 403, "92": 403, "93": 403, "94": 403, "95": 403, "96": 403, "97": 403, "98": 403, "312": 403, "assign_spac": 403, "sophist": 403, "103": 403, "999": 403, "104": 403, "105": 403, "106": 403, "eq": 403, "107": 403, "108": 403, "109": 403, "110": 403, "111": 403, "112": 403, "stat": 403, "114": 403, "115": 403, "lag": 403, "past": 403, "futur": 403, "west": 403, "south": 403, "corner": 403, "preceed": 403, "succeed": 403, "116": 403, "118": 403, "119": 403, "120": 403, "neighbourhood": 403, "enough": 403, "toward": [403, 405], "surround": 403, "121": 403, "122": 403, "time_smooth": 403, "space_smooth": 403, "123": 403, "124": 403, "125": 403, "126": 403, "nanarrai": 403, "treatment": 403, "127": 403, "128": 403, "129": 403, "130": 403, "2nan": 403, "132": 403, "time_trim": 403, "133": 403, "134": 403, "criterion": 403, "135": 403, "137": 403, "138": 403, "139": 403, "ordinalxarrai": 403, "straight": 403, "polynomi": 403, "figur": 403, "140": 403, "141": 403, "142": 403, "143": 403, "144": 403, "145": 403, "146": 403, "147": 403, "148": 403, "149": 403, "nanxarrai": 403, "discrete_fillvalu": 403, "j": 403, "150": 403, "151": 403, "152": 403, "153": 403, "154": 403, "155": 403, "156": 403, "157": 403, "158": 403, "159": 403, "1y": 403, "167942value_typ": 403, "160": 403, "groupby_tim": 403, "groupby_spac": 403, "162": 403, "163": 403, "164": 403, "z": 403, "z_": 403, "165": 403, "166": 403, "multigroup": 403, "167": 403, "168": 403, "408715value_typ": 403, "169": 403, "610661value_typ": 403, "shorter": 403, "statement": 403, "171": 403, "pecular": 403, "summar": 403, "c_": 403, "rel": 403, "becom": 403, "gamma": 403, "delta": 403, "c": 403, "gamma_": 403, "delta_": 403, "epsilon": 403, "173": 403, "175": 403, "3time": 403, "conceptpandasindexpandasindex": 403, "176": 403, "177": 403, "178": 403, "179": 403, "primarili": 403, "180": 403, "181": 403, "182": 403, "183": 403, "184": 403, "185": 403, "any_concept": 403, "186": 403, "187": 403, "ident": [403, 405], "unrestrict": 403, "seper": 403, "189": 403, "avg_count": 403, "190": 403, "191": 403, "int642019": 403, "2020value_typ": 403, "yearpandasindexpandasindex": 403, "192": 403, "193": 403, "count_per_feat": 403, "194": 403, "196": 403, "2time": 403, "4532800": 403, "2695600": 403, "featpandasindexpandasindex": 403, "affect": [403, 405], "197": 403, "198": 403, "v": 403, "199": 403, "200": 403, "releas": [404, 406], "leader": 405, "particip": [405, 406], "commun": [405, 406], "harass": 405, "experi": 405, "everyon": [405, 406], "regardless": 405, "ag": 405, "visibl": 405, "invis": 405, "ethnic": 405, "sex": 405, "characterist": 405, "gender": 405, "educ": 405, "socio": 405, "econom": 405, "statu": 405, "nation": 405, "person": 405, "race": 405, "religion": 405, "sexual": 405, "act": 405, "contribut": 405, "welcom": [405, 406], "divers": 405, "inclus": 405, "healthi": 405, "behavior": [405, 406], "empathi": 405, "Being": 405, "opinion": 405, "viewpoint": 405, "gracefulli": 405, "feedback": [405, 406], "apolog": 405, "mistak": 405, "focus": 405, "best": [405, 406], "individu": 405, "unaccept": [405, 406], "languag": [405, 408], "imageri": 405, "attent": 405, "troll": 405, "insult": 405, "derogatori": 405, "comment": [405, 406], "polit": 405, "attack": 405, "public": 405, "privat": 405, "publish": [405, 408], "physic": 405, "email": 405, "address": 405, "explicit": 405, "permiss": [405, 408], "inappropri": 405, "profession": 405, "clarifi": 405, "fair": 405, "deem": 405, "threaten": 405, "offens": 405, "harm": 405, "edit": 405, "reject": 405, "commit": 405, "wiki": 405, "issu": 405, "moder": 405, "decis": 405, "offici": 405, "mail": 405, "post": 405, "social": 405, "media": 405, "account": 405, "appoint": 405, "onlin": [405, 407], "offlin": 405, "abus": 405, "report": [405, 406], "luca": 405, "vanderm": 405, "sbg": 405, "ac": 405, "complaint": 405, "review": [405, 406], "investig": 405, "promptli": 405, "fairli": 405, "oblig": 405, "privaci": 405, "secur": 405, "incid": 405, "impact": 405, "consequ": 405, "violat": 405, "unprofession": 405, "unwelcom": 405, "clariti": 405, "explan": [405, 407], "apologi": 405, "unsolicit": 405, "avoid": 405, "extern": 405, "channel": 405, "seriou": 405, "sustain": 405, "aggress": 405, "disparag": 405, "adapt": [405, 406], "www": [405, 406, 408], "org": [405, 406, 408], "code_of_conduct": 405, "html": 405, "inspir": 405, "mozilla": 405, "ladder": 405, "answer": [405, 406], "question": [405, 406], "faq": 405, "thank": 406, "greatli": 406, "appreci": 406, "guidelin": 406, "mostli": 406, "judgment": 406, "propos": 406, "govern": [406, 408], "conduct": 406, "uphold": 406, "pleas": 406, "outlin": 406, "qualiti": 406, "bug": 406, "alreadi": 406, "broader": 406, "discusss": 406, "who": 406, "q": 406, "tag": 406, "cool": 406, "desper": 406, "beg": 406, "fork": 406, "enter": 406, "directori": 406, "git": [406, 409], "zgi": [406, 409], "cd": [406, 409], "checkout": 406, "my_new_branch": 406, "conda": [406, 409], "disturb": 406, "yml": [406, 409], "googl": 406, "style": 406, "guid": 406, "messag": 406, "conventionalcommit": 406, "short": 406, "prefer": [406, 409], "tens": 406, "artist": 406, "emoji": 406, "gift": 406, "wrench": 406, "program": 406, "art": 406, "refactor": 406, "renam": 406, "doc": 406, "book": 406, "log": 406, "test_tub": 406, "cicd": 406, "ci": 406, "robot": 406, "dep": 406, "coupl": 406, "prepar": 406, "bookmark": 406, "happi": 406, "chunk": 407, "suit": 407, "under": [407, 408], "render": 407, "static": 407, "binder": 407, "click": 407, "badg": 407, "instal": 407, "setup": 407, "web": 407, "browser": 407, "tini": 407, "few": 407, "minut": 407, "plu": 407, "behind": 408, "academ": 408, "paper": 408, "throughout": 408, "familiar": 408, "underli": 408, "austrian": 408, "research": 408, "agenc": 408, "ffg": 408, "programm": 408, "asap": 408, "sen2cub": 408, "semantix": 408, "sim": 408, "depart": 408, "geoinformat": 408, "z_gi": 408, "licens": 408, "apach": 408, "complianc": 408, "law": 408, "agre": 408, "AS": 408, "warranti": 408, "OR": 408, "OF": 408, "page": 408, "pip": 409, "github": 409, "clone": 409, "concis": 410}, "objects": {"semantique": [[0, 0, 1, "", "ArrayProxy"], [20, 0, 1, "", "CollectionProxy"], [39, 0, 1, "", "QueryRecipe"], [41, 2, 1, "", "appearance"], [42, 2, 1, "", "artifacts"], [43, 2, 1, "", "atmosphere"], [44, 2, 1, "", "collection"], [61, 2, 1, "", "concept"], [90, 2, 1, "", "entity"], [91, 2, 1, "", "event"], [124, 2, 1, "", "geometry"], [125, 2, 1, "", "interval"], [126, 2, 1, "", "label"], [127, 2, 1, "", "layer"], [390, 2, 1, "", "reflectance"], [391, 2, 1, "", "result"], [392, 2, 1, "", "self"], [393, 2, 1, "", "set"], [394, 2, 1, "", "time_instant"], [395, 2, 1, "", "time_interval"], [396, 2, 1, "", "topography"]], "semantique.ArrayProxy": [[0, 1, 1, "", "__init__"], [1, 1, 1, "", "apply_custom"], [2, 1, 1, "", "assign"], [3, 1, 1, "", "assign_space"], [4, 1, 1, "", "assign_time"], [5, 1, 1, "", "delineate"], [6, 1, 1, "", "evaluate"], [7, 1, 1, "", "extract"], [8, 1, 1, "", "fill"], [9, 1, 1, "", "filter"], [10, 1, 1, "", "filter_space"], [11, 1, 1, "", "filter_time"], [12, 1, 1, "", "groupby"], [13, 1, 1, "", "groupby_space"], [14, 1, 1, "", "groupby_time"], [15, 1, 1, "", "name"], [16, 1, 1, "", "reduce"], [17, 1, 1, "", "shift"], [18, 1, 1, "", "smooth"], [19, 1, 1, "", "trim"]], "semantique.CollectionProxy": [[20, 1, 1, "", "__init__"], [21, 1, 1, "", "apply_custom"], [22, 1, 1, "", "assign"], [23, 1, 1, "", "assign_space"], [24, 1, 1, "", "assign_time"], [25, 1, 1, "", "compose"], [26, 1, 1, "", "concatenate"], [27, 1, 1, "", "delineate"], [28, 1, 1, "", "evaluate"], [29, 1, 1, "", "extract"], [30, 1, 1, "", "fill"], [31, 1, 1, "", "filter"], [32, 1, 1, "", "filter_space"], [33, 1, 1, "", "filter_time"], [34, 1, 1, "", "merge"], [35, 1, 1, "", "reduce"], [36, 1, 1, "", "shift"], [37, 1, 1, "", "smooth"], [38, 1, 1, "", "trim"]], "semantique.QueryRecipe": [[39, 1, 1, "", "__init__"], [40, 1, 1, "", "execute"]], "semantique.components": [[45, 0, 1, "", "space"], [49, 0, 1, "", "time"]], "semantique.components.space": [[46, 3, 1, "", "FEATURE"], [47, 3, 1, "", "X"], [48, 3, 1, "", "Y"], [45, 1, 1, "", "__init__"]], "semantique.components.time": [[50, 3, 1, "", "DAY"], [51, 3, 1, "", "DAY_OF_WEEK"], [52, 3, 1, "", "DAY_OF_YEAR"], [53, 3, 1, "", "HOUR"], [54, 3, 1, "", "MINUTE"], [55, 3, 1, "", "MONTH"], [56, 3, 1, "", "QUARTER"], [57, 3, 1, "", "SEASON"], [58, 3, 1, "", "SECOND"], [59, 3, 1, "", "WEEK"], [60, 3, 1, "", "YEAR"], [49, 1, 1, "", "__init__"]], "semantique.datacube": [[62, 0, 1, "", "Datacube"], [66, 0, 1, "", "GeotiffArchive"], [73, 0, 1, "", "Opendatacube"], [80, 0, 1, "", "STACCube"]], "semantique.datacube.Datacube": [[62, 1, 1, "", "__init__"], [63, 4, 1, "", "layout"], [64, 1, 1, "", "lookup"], [65, 1, 1, "", "retrieve"]], "semantique.datacube.GeotiffArchive": [[66, 1, 1, "", "__init__"], [67, 4, 1, "", "config"], [68, 4, 1, "", "layout"], [69, 1, 1, "", "lookup"], [70, 1, 1, "", "retrieve"], [71, 4, 1, "", "src"], [72, 4, 1, "", "tz"]], "semantique.datacube.Opendatacube": [[73, 1, 1, "", "__init__"], [74, 4, 1, "", "config"], [75, 4, 1, "", "connection"], [76, 4, 1, "", "layout"], [77, 1, 1, "", "lookup"], [78, 1, 1, "", "retrieve"], [79, 4, 1, "", "tz"]], "semantique.datacube.STACCube": [[80, 1, 1, "", "__init__"], [81, 4, 1, "", "config"], [82, 4, 1, "", "layout"], [83, 1, 1, "", "lookup"], [84, 1, 1, "", "retrieve"], [85, 4, 1, "", "src"]], "semantique.dimensions": [[86, 5, 1, "", "SPACE"], [87, 5, 1, "", "TIME"], [88, 5, 1, "", "X"], [89, 5, 1, "", "Y"]], "semantique.exceptions": [[92, 6, 1, "", "AlignmentError"], [93, 6, 1, "", "EmptyDataError"], [94, 6, 1, "", "InvalidBuildingBlockError"], [95, 6, 1, "", "InvalidIntervalError"], [96, 6, 1, "", "InvalidValueTypeError"], [97, 6, 1, "", "MissingDimensionError"], [98, 6, 1, "", "MixedDimensionsError"], [99, 6, 1, "", "MixedTimeZonesError"], [100, 6, 1, "", "ReservedDimensionError"], [101, 6, 1, "", "TooManyDimensionsError"], [102, 6, 1, "", "UnknownComponentError"], [103, 6, 1, "", "UnknownConceptError"], [104, 6, 1, "", "UnknownDimensionError"], [105, 6, 1, "", "UnknownLabelError"], [106, 6, 1, "", "UnknownLayerError"], [107, 6, 1, "", "UnknownOperatorError"], [108, 6, 1, "", "UnknownReducerError"], [109, 6, 1, "", "UnknownResultError"], [110, 6, 1, "", "UnknownVerbError"]], "semantique.extent": [[111, 0, 1, "", "SpatialExtent"], [119, 0, 1, "", "TemporalExtent"]], "semantique.extent.SpatialExtent": [[111, 1, 1, "", "__init__"], [112, 4, 1, "", "crs"], [113, 4, 1, "", "features"], [114, 1, 1, "", "from_feature"], [115, 1, 1, "", "from_featurecollection"], [116, 1, 1, "", "from_geojson"], [117, 1, 1, "", "from_geometry"], [118, 1, 1, "", "rasterize"]], "semantique.extent.TemporalExtent": [[119, 1, 1, "", "__init__"], [120, 1, 1, "", "discretize"], [121, 4, 1, "", "end"], [122, 4, 1, "", "start"], [123, 4, 1, "", "tz"]], "semantique.mapping": [[128, 0, 1, "", "Mapping"], [131, 0, 1, "", "Semantique"]], "semantique.mapping.Mapping": [[128, 1, 1, "", "__init__"], [129, 1, 1, "", "lookup"], [130, 1, 1, "", "translate"]], "semantique.mapping.Semantique": [[131, 1, 1, "", "__init__"], [132, 1, 1, "", "lookup"], [133, 1, 1, "", "translate"]], "semantique.operators": [[134, 5, 1, "", "ABSOLUTE"], [135, 5, 1, "", "ADD"], [136, 5, 1, "", "AFTER"], [137, 5, 1, "", "AND"], [138, 5, 1, "", "BEFORE"], [139, 5, 1, "", "CEILING"], [140, 5, 1, "", "COSECANT"], [141, 5, 1, "", "COSINE"], [142, 5, 1, "", "COTANGENT"], [143, 5, 1, "", "CUBE_ROOT"], [144, 5, 1, "", "DIVIDE"], [145, 5, 1, "", "DURING"], [146, 5, 1, "", "EQUAL"], [147, 5, 1, "", "EXCLUSIVE_OR"], [148, 5, 1, "", "EXPONENTIAL"], [149, 5, 1, "", "FLOOR"], [150, 5, 1, "", "GREATER"], [151, 5, 1, "", "GREATER_EQUAL"], [152, 5, 1, "", "IN"], [153, 5, 1, "", "INTERSECTS"], [154, 5, 1, "", "IS_MISSING"], [155, 5, 1, "", "LESS"], [156, 5, 1, "", "LESS_EQUAL"], [157, 5, 1, "", "MULTIPLY"], [158, 5, 1, "", "NATURAL_LOGARITHM"], [159, 5, 1, "", "NORMALIZED_DIFFERENCE"], [160, 5, 1, "", "NOT"], [161, 5, 1, "", "NOT_EQUAL"], [162, 5, 1, "", "NOT_IN"], [163, 5, 1, "", "NOT_MISSING"], [164, 5, 1, "", "OR"], [165, 5, 1, "", "POWER"], [166, 5, 1, "", "SECANT"], [167, 5, 1, "", "SINE"], [168, 5, 1, "", "SQUARE_ROOT"], [169, 5, 1, "", "SUBTRACT"], [170, 5, 1, "", "TANGENT"], [171, 5, 1, "", "TO_DEGREES"], [172, 5, 1, "", "TO_RADIANS"]], "semantique.processor.arrays": [[173, 0, 1, "", "Array"], [209, 0, 1, "", "Collection"]], "semantique.processor.arrays.Array": [[173, 1, 1, "", "__init__"], [174, 1, 1, "", "align_with"], [175, 1, 1, "", "apply_custom"], [176, 1, 1, "", "assign"], [177, 4, 1, "", "crs"], [178, 1, 1, "", "delineate"], [179, 1, 1, "", "drop_non_dimension_coords"], [180, 1, 1, "", "evaluate"], [181, 1, 1, "", "extract"], [182, 1, 1, "", "fill"], [183, 1, 1, "", "filter"], [184, 4, 1, "", "grid_points"], [185, 1, 1, "", "groupby"], [186, 4, 1, "", "is_empty"], [187, 1, 1, "", "name"], [188, 1, 1, "", "reduce"], [189, 1, 1, "", "regularize"], [190, 1, 1, "", "reproject"], [191, 1, 1, "", "shift"], [192, 1, 1, "", "smooth"], [193, 4, 1, "", "spatial_resolution"], [194, 1, 1, "", "stack_all_dims"], [195, 1, 1, "", "stack_spatial_dims"], [196, 1, 1, "", "to_csv"], [197, 1, 1, "", "to_dataframe"], [198, 1, 1, "", "to_geodataframe"], [199, 1, 1, "", "to_geotiff"], [200, 1, 1, "", "trim"], [201, 4, 1, "", "tz"], [202, 1, 1, "", "tz_convert"], [203, 1, 1, "", "unstack_all_dims"], [204, 1, 1, "", "unstack_spatial_dims"], [205, 4, 1, "", "value_labels"], [206, 4, 1, "", "value_type"], [207, 1, 1, "", "write_crs"], [208, 1, 1, "", "write_tz"]], "semantique.processor.arrays.Collection": [[209, 1, 1, "", "__init__"], [210, 1, 1, "", "apply_custom"], [211, 1, 1, "", "assign"], [212, 1, 1, "", "compose"], [213, 1, 1, "", "concatenate"], [214, 1, 1, "", "delineate"], [215, 1, 1, "", "evaluate"], [216, 1, 1, "", "extract"], [217, 1, 1, "", "fill"], [218, 1, 1, "", "filter"], [219, 4, 1, "", "is_empty"], [220, 1, 1, "", "merge"], [221, 1, 1, "", "name"], [222, 1, 1, "", "reduce"], [223, 1, 1, "", "regularize"], [224, 1, 1, "", "shift"], [225, 1, 1, "", "smooth"], [226, 4, 1, "", "sq"], [227, 1, 1, "", "stack_spatial_dims"], [228, 1, 1, "", "trim"], [229, 1, 1, "", "unstack_spatial_dims"]], "semantique.processor.core": [[230, 0, 1, "", "Cache"], [236, 0, 1, "", "QueryProcessor"]], "semantique.processor.core.Cache": [[230, 1, 1, "", "__init__"], [231, 1, 1, "", "build"], [232, 4, 1, "", "data"], [233, 1, 1, "", "load"], [234, 4, 1, "", "seq"], [235, 1, 1, "", "update"]], "semantique.processor.core.QueryProcessor": [[236, 1, 1, "", "__init__"], [237, 1, 1, "", "add_custom_operator"], [238, 1, 1, "", "add_custom_reducer"], [239, 1, 1, "", "add_custom_verb"], [240, 4, 1, "", "cache"], [241, 1, 1, "", "call_handler"], [242, 1, 1, "", "call_verb"], [243, 4, 1, "", "crs"], [244, 4, 1, "", "custom_operators"], [245, 4, 1, "", "custom_reducers"], [246, 4, 1, "", "custom_verbs"], [247, 4, 1, "", "datacube"], [248, 1, 1, "", "execute"], [249, 4, 1, "", "extent"], [250, 1, 1, "", "get_operator"], [251, 1, 1, "", "get_reducer"], [252, 1, 1, "", "handle_apply_custom"], [253, 1, 1, "", "handle_assign"], [254, 1, 1, "", "handle_collection"], [255, 1, 1, "", "handle_compose"], [256, 1, 1, "", "handle_concatenate"], [257, 1, 1, "", "handle_concept"], [258, 1, 1, "", "handle_delineate"], [259, 1, 1, "", "handle_evaluate"], [260, 1, 1, "", "handle_extract"], [261, 1, 1, "", "handle_fill"], [262, 1, 1, "", "handle_filter"], [263, 1, 1, "", "handle_geometry"], [264, 1, 1, "", "handle_groupby"], [265, 1, 1, "", "handle_interval"], [266, 1, 1, "", "handle_label"], [267, 1, 1, "", "handle_layer"], [268, 1, 1, "", "handle_merge"], [269, 1, 1, "", "handle_name"], [270, 1, 1, "", "handle_processing_chain"], [271, 1, 1, "", "handle_reduce"], [272, 1, 1, "", "handle_result"], [273, 1, 1, "", "handle_self"], [274, 1, 1, "", "handle_set"], [275, 1, 1, "", "handle_shift"], [276, 1, 1, "", "handle_smooth"], [277, 1, 1, "", "handle_time_instant"], [278, 1, 1, "", "handle_time_interval"], [279, 1, 1, "", "handle_trim"], [280, 1, 1, "", "handle_verb"], [281, 4, 1, "", "mapping"], [282, 1, 1, "", "optimize"], [283, 1, 1, "", "parse"], [284, 4, 1, "", "preview"], [285, 4, 1, "", "recipe"], [286, 4, 1, "", "response"], [287, 4, 1, "", "spatial_resolution"], [288, 4, 1, "", "track_types"], [289, 4, 1, "", "tz"]], "semantique.processor.operators": [[290, 2, 1, "", "absolute_"], [291, 2, 1, "", "add_"], [292, 2, 1, "", "after_"], [293, 2, 1, "", "and_"], [294, 2, 1, "", "before_"], [295, 2, 1, "", "ceiling_"], [296, 2, 1, "", "cosecant_"], [297, 2, 1, "", "cosine_"], [298, 2, 1, "", "cotangent_"], [299, 2, 1, "", "cube_root_"], [300, 2, 1, "", "divide_"], [301, 2, 1, "", "during_"], [302, 2, 1, "", "equal_"], [303, 2, 1, "", "exclusive_or_"], [304, 2, 1, "", "exponential_"], [305, 2, 1, "", "floor_"], [306, 2, 1, "", "greater_"], [307, 2, 1, "", "greater_equal_"], [308, 2, 1, "", "in_"], [309, 2, 1, "", "intersects_"], [310, 2, 1, "", "is_missing_"], [311, 2, 1, "", "less_"], [312, 2, 1, "", "less_equal_"], [313, 2, 1, "", "multiply_"], [314, 2, 1, "", "natural_logarithm_"], [315, 2, 1, "", "normalized_difference_"], [316, 2, 1, "", "not_"], [317, 2, 1, "", "not_equal_"], [318, 2, 1, "", "not_in_"], [319, 2, 1, "", "not_missing_"], [320, 2, 1, "", "or_"], [321, 2, 1, "", "power_"], [322, 2, 1, "", "secant_"], [323, 2, 1, "", "sine_"], [324, 2, 1, "", "square_root_"], [325, 2, 1, "", "subtract_"], [326, 2, 1, "", "tangent_"], [327, 2, 1, "", "to_degrees_"], [328, 2, 1, "", "to_radians_"]], "semantique.processor.reducers": [[329, 2, 1, "", "all_"], [330, 2, 1, "", "any_"], [331, 2, 1, "", "count_"], [332, 2, 1, "", "first_"], [333, 2, 1, "", "last_"], [334, 2, 1, "", "max_"], [335, 2, 1, "", "mean_"], [336, 2, 1, "", "median_"], [337, 2, 1, "", "min_"], [338, 2, 1, "", "mode_"], [339, 2, 1, "", "n_"], [340, 2, 1, "", "none_"], [341, 2, 1, "", "percentage_"], [342, 2, 1, "", "product_"], [343, 2, 1, "", "range_"], [344, 2, 1, "", "standard_deviation_"], [345, 2, 1, "", "sum_"], [346, 2, 1, "", "variance_"]], "semantique.processor.types": [[347, 5, 1, "", "DTYPE_MAPPING"], [348, 5, 1, "", "TYPE_PROMOTION_MANUALS"], [349, 0, 1, "", "TypePromoter"], [357, 2, 1, "", "get_value_labels"], [358, 2, 1, "", "get_value_type"]], "semantique.processor.types.TypePromoter": [[349, 1, 1, "", "__init__"], [350, 1, 1, "", "check"], [351, 4, 1, "", "input_labels"], [352, 4, 1, "", "input_types"], [353, 4, 1, "", "manual"], [354, 4, 1, "", "output_labels"], [355, 4, 1, "", "output_type"], [356, 1, 1, "", "promote"]], "semantique.processor.utils": [[359, 2, 1, "", "allnull"], [360, 2, 1, "", "convert_datetime64"], [361, 2, 1, "", "datetime64_as_unix"], [362, 2, 1, "", "get_null"], [363, 2, 1, "", "inf_as_null"], [364, 2, 1, "", "null_as_zero"], [365, 2, 1, "", "parse_datetime_component"], [366, 2, 1, "", "parse_extent"]], "semantique.processor.values": [[367, 0, 1, "", "Interval"]], "semantique.processor.values.Interval": [[367, 1, 1, "", "__init__"], [368, 4, 1, "", "lower"], [369, 4, 1, "", "sq"], [370, 4, 1, "", "upper"], [371, 4, 1, "", "value_type"]], "semantique.reducers": [[372, 5, 1, "", "ALL"], [373, 5, 1, "", "ANY"], [374, 5, 1, "", "COUNT"], [375, 5, 1, "", "FIRST"], [376, 5, 1, "", "LAST"], [377, 5, 1, "", "MAX"], [378, 5, 1, "", "MEAN"], [379, 5, 1, "", "MEDIAN"], [380, 5, 1, "", "MIN"], [381, 5, 1, "", "MODE"], [382, 5, 1, "", "N"], [383, 5, 1, "", "NONE"], [384, 5, 1, "", "PERCENTAGE"], [385, 5, 1, "", "PRODUCT"], [386, 5, 1, "", "RANGE"], [387, 5, 1, "", "STANDARD_DEVIATION"], [388, 5, 1, "", "SUM"], [389, 5, 1, "", "VARIANCE"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:attribute", "4": "py:property", "5": "py:data", "6": "py:exception"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "data", "Python data"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"semantiqu": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399], "arrayproxi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "apply_custom": [1, 21, 175, 210], "assign": [2, 22, 176, 211, 403], "assign_spac": [3, 23], "assign_tim": [4, 24], "delin": [5, 27, 178, 214, 403], "evalu": [6, 28, 180, 215, 402, 403], "extract": [7, 29, 181, 216, 403], "fill": [8, 30, 182, 217, 403], "filter": [9, 31, 183, 218, 403], "filter_spac": [10, 32], "filter_tim": [11, 33], "groupbi": [12, 185, 403], "groupby_spac": 13, "groupby_tim": 14, "name": [15, 187, 221, 403, 410], "reduc": [16, 35, 188, 222, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 400, 403, 410], "shift": [17, 36, 191, 224, 403], "smooth": [18, 37, 192, 225, 403], "trim": [19, 38, 200, 228, 403], "collectionproxi": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "compos": [25, 212, 403], "concaten": [26, 213, 403], "merg": [34, 220, 403], "queryrecip": [39, 40], "execut": [40, 248, 400, 401], "appear": 41, "artifact": 42, "atmospher": 43, "collect": [44, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 401, 402, 403, 410], "compon": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 403, 410], "space": [45, 46, 47, 48, 86], "featur": [46, 113], "x": [47, 88], "y": [48, 89], "time": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 87, 398], "dai": 50, "day_of_week": 51, "day_of_year": 52, "hour": 53, "minut": 54, "month": 55, "quarter": 56, "season": [57, 398], "second": 58, "week": 59, "year": 60, "concept": [61, 402], "datacub": [62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 247], "layout": [63, 68, 76, 82], "lookup": [64, 69, 77, 83, 129, 132], "retriev": [65, 70, 78, 84, 398], "geotiffarch": [66, 67, 68, 69, 70, 71, 72, 397], "config": [67, 74, 81], "src": [71, 85], "tz": [72, 79, 123, 201, 289], "opendatacub": [73, 74, 75, 76, 77, 78, 79, 397], "connect": 75, "staccub": [80, 81, 82, 83, 84, 85, 397], "dimens": [86, 87, 88, 89, 403, 410], "entiti": 90, "event": 91, "except": [92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 410], "alignmenterror": 92, "emptydataerror": 93, "invalidbuildingblockerror": 94, "invalidintervalerror": 95, "invalidvaluetypeerror": 96, "missingdimensionerror": 97, "mixeddimensionserror": 98, "mixedtimezoneserror": 99, "reserveddimensionerror": 100, "toomanydimensionserror": 101, "unknowncomponenterror": 102, "unknownconcepterror": 103, "unknowndimensionerror": 104, "unknownlabelerror": 105, "unknownlayererror": 106, "unknownoperatorerror": 107, "unknownreducererror": 108, "unknownresulterror": 109, "unknownverberror": 110, "extent": [111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 249, 400, 401, 410], "spatialext": [111, 112, 113, 114, 115, 116, 117, 118], "cr": [112, 177, 243], "from_featur": 114, "from_featurecollect": 115, "from_geojson": 116, "from_geometri": 117, "raster": 118, "temporalext": [119, 120, 121, 122, 123], "discret": 120, "end": 121, "start": 122, "geometri": 124, "interv": [125, 367, 368, 369, 370, 371], "label": 126, "layer": [127, 400, 402], "map": [128, 129, 130, 131, 132, 133, 281, 398, 399, 401, 410], "translat": [130, 133], "oper": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 400, 410], "absolut": 134, "add": 135, "after": 136, "AND": 137, "befor": 138, "ceil": 139, "cosec": 140, "cosin": 141, "cotang": 142, "cube_root": 143, "divid": 144, "dure": 145, "equal": 146, "exclusive_or": 147, "exponenti": 148, "floor": 149, "greater": 150, "greater_equ": 151, "IN": 152, "intersect": 153, "is_miss": 154, "less": 155, "less_equ": 156, "multipli": 157, "natural_logarithm": 158, "normalized_differ": 159, "NOT": 160, "not_equ": 161, "not_in": 162, "not_miss": 163, "OR": 164, "power": 165, "secant": 166, "sine": 167, "square_root": 168, "subtract": 169, "tangent": 170, "to_degre": 171, "to_radian": 172, "processor": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 410], "arrai": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 403, 410], "align_with": 174, "drop_non_dimension_coord": 179, "grid_point": 184, "is_empti": [186, 219], "regular": [189, 223], "reproject": 190, "spatial_resolut": [193, 287], "stack_all_dim": 194, "stack_spatial_dim": [195, 227], "to_csv": 196, "to_datafram": 197, "to_geodatafram": 198, "to_geotiff": 199, "tz_convert": 202, "unstack_all_dim": 203, "unstack_spatial_dim": [204, 229], "value_label": 205, "value_typ": [206, 371], "write_cr": 207, "write_tz": 208, "sq": [226, 369], "core": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 410], "cach": [230, 231, 232, 233, 234, 235, 240, 400], "build": [231, 410], "data": [232, 397, 400, 401, 402, 408, 410], "load": 233, "seq": 234, "updat": 235, "queryprocessor": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289], "add_custom_oper": 237, "add_custom_reduc": 238, "add_custom_verb": 239, "call_handl": 241, "call_verb": 242, "custom_oper": 244, "custom_reduc": 245, "custom_verb": 246, "get_oper": 250, "get_reduc": 251, "handle_apply_custom": 252, "handle_assign": 253, "handle_collect": 254, "handle_compos": 255, "handle_concaten": 256, "handle_concept": 257, "handle_delin": 258, "handle_evalu": 259, "handle_extract": 260, "handle_fil": 261, "handle_filt": 262, "handle_geometri": 263, "handle_groupbi": 264, "handle_interv": 265, "handle_label": 266, "handle_lay": 267, "handle_merg": 268, "handle_nam": 269, "handle_processing_chain": 270, "handle_reduc": 271, "handle_result": 272, "handle_self": 273, "handle_set": 274, "handle_shift": 275, "handle_smooth": 276, "handle_time_inst": 277, "handle_time_interv": 278, "handle_trim": 279, "handle_verb": 280, "optim": [282, 400], "pars": [283, 400], "preview": 284, "recip": [285, 401, 410], "respons": [286, 400, 405], "track_typ": 288, "absolute_": 290, "add_": 291, "after_": 292, "and_": 293, "before_": 294, "ceiling_": 295, "cosecant_": 296, "cosine_": 297, "cotangent_": 298, "cube_root_": 299, "divide_": 300, "during_": 301, "equal_": 302, "exclusive_or_": 303, "exponential_": 304, "floor_": 305, "greater_": 306, "greater_equal_": 307, "in_": 308, "intersects_": 309, "is_missing_": 310, "less_": 311, "less_equal_": 312, "multiply_": 313, "natural_logarithm_": 314, "normalized_difference_": 315, "not_": 316, "not_equal_": 317, "not_in_": 318, "not_missing_": 319, "or_": 320, "power_": 321, "secant_": 322, "sine_": 323, "square_root_": 324, "subtract_": 325, "tangent_": 326, "to_degrees_": 327, "to_radians_": 328, "all_": 329, "any_": 330, "count_": 331, "first_": 332, "last_": 333, "max_": 334, "mean_": 335, "median_": 336, "min_": 337, "mode_": 338, "n_": 339, "none_": 340, "percentage_": 341, "product_": 342, "range_": 343, "standard_deviation_": 344, "sum_": 345, "variance_": 346, "type": [347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 400, 410], "dtype_map": 347, "type_promotion_manu": 348, "typepromot": [349, 350, 351, 352, 353, 354, 355, 356], "check": 350, "input_label": 351, "input_typ": 352, "manual": 353, "output_label": 354, "output_typ": 355, "promot": 356, "get_value_label": 357, "get_value_typ": 358, "util": [359, 360, 361, 362, 363, 364, 365, 366, 403, 410], "allnul": 359, "convert_datetime64": 360, "datetime64_as_unix": 361, "get_nul": 362, "inf_as_nul": 363, "null_as_zero": 364, "parse_datetime_compon": 365, "parse_ext": 366, "valu": [367, 368, 369, 370, 371, 400, 403, 410], "lower": 368, "upper": 370, "all": 372, "ani": 373, "count": [374, 398], "first": [375, 398], "last": 376, "max": 377, "mean": 378, "median": 379, "min": 380, "mode": 381, "n": 382, "none": 383, "percentag": 384, "product": 385, "rang": 386, "standard_devi": 387, "sum": 388, "varianc": 389, "reflect": 390, "result": [391, 402], "self": [392, 403], "set": [393, 401], "time_inst": 394, "time_interv": 395, "topographi": 396, "repres": [397, 401], "an": [397, 401, 403], "eo": [397, 401, 410], "cube": [397, 401, 408, 410], "content": [397, 398, 399, 400, 401, 402, 403], "prepar": [397, 398, 399, 400, 401, 402, 403], "structur": [397, 399, 400, 403], "The": [397, 399], "configur": [397, 399], "galleri": 398, "water": 398, "veget": 398, "presenc": 398, "cloud": 398, "free": 398, "composit": 398, "land": 398, "cover": 398, "snow": 398, "semant": [398, 402, 408], "base": 398, "imag": 398, "parcel": 398, "statist": [398, 410], "aggreg": 398, "observ": [398, 408], "construct": 399, "intern": 400, "queri": [400, 401, 408], "process": 400, "spatial": [400, 410], "tempor": [400, 401, 410], "handler": 400, "function": [400, 410], "track": 400, "ad": 400, "custom": 400, "verb": [400, 403, 410], "export": 400, "log": 400, "progress": 400, "write": [401, 406], "context": 401, "import": 401, "spatio": [401, 410], "full": 401, "refer": [402, 410], "referenc": 402, "activ": 402, "object": [402, 410], "singl": [403, 410], "univari": [403, 410], "express": 403, "bivari": 403, "align": 403, "two": 403, "coordin": 403, "nodata": 403, "group": 403, "multipl": 403, "grouper": 403, "along": 403, "new": 403, "over": 403, "exist": 403, "split": 403, "appli": 403, "combin": 403, "changelog": 404, "version": 404, "0": 404, "1": [404, 405, 406], "barmstein": 404, "contributor": 405, "coven": 405, "code": [405, 406], "conduct": 405, "our": 405, "pledg": 405, "standard": 405, "enforc": 405, "scope": 405, "guidelin": 405, "correct": 405, "2": [405, 406], "warn": 405, "3": [405, 406], "temporari": 405, "ban": 405, "4": [405, 406], "perman": 405, "attribut": 405, "contribut": 406, "creat": 406, "issu": 406, "discuss": 406, "solv": 406, "clone": 406, "github": 406, "repo": 406, "local": 406, "develop": 406, "environ": 406, "commit": 406, "your": 406, "branch": 406, "5": 406, "push": 406, "6": 406, "pull": 406, "request": 406, "user": 407, "guid": 407, "earth": 408, "acknowledg": 408, "copyright": 408, "indic": 408, "tabl": 408, "instal": 409, "api": 410, "block": 410, "special": 410, "reserv": 410, "algebra": 410, "boolean": 410, "relat": 410, "occur": 410, "posit": 410, "handl": 410}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"semantique.ArrayProxy": [[0, "semantique-arrayproxy"]], "semantique.ArrayProxy.apply_custom": [[1, "semantique-arrayproxy-apply-custom"]], "semantique.ArrayProxy.assign": [[2, "semantique-arrayproxy-assign"]], "semantique.ArrayProxy.assign_space": [[3, "semantique-arrayproxy-assign-space"]], "semantique.ArrayProxy.assign_time": [[4, "semantique-arrayproxy-assign-time"]], "semantique.ArrayProxy.delineate": [[5, "semantique-arrayproxy-delineate"]], "semantique.ArrayProxy.evaluate": [[6, "semantique-arrayproxy-evaluate"]], "semantique.ArrayProxy.extract": [[7, "semantique-arrayproxy-extract"]], "semantique.ArrayProxy.fill": [[8, "semantique-arrayproxy-fill"]], "semantique.ArrayProxy.filter": [[9, "semantique-arrayproxy-filter"]], "semantique.ArrayProxy.filter_space": [[10, "semantique-arrayproxy-filter-space"]], "semantique.ArrayProxy.filter_time": [[11, "semantique-arrayproxy-filter-time"]], "semantique.ArrayProxy.groupby": [[12, "semantique-arrayproxy-groupby"]], "semantique.ArrayProxy.groupby_space": [[13, "semantique-arrayproxy-groupby-space"]], "semantique.ArrayProxy.groupby_time": [[14, "semantique-arrayproxy-groupby-time"]], "semantique.ArrayProxy.name": [[15, "semantique-arrayproxy-name"]], "semantique.ArrayProxy.reduce": [[16, "semantique-arrayproxy-reduce"]], "semantique.ArrayProxy.shift": [[17, "semantique-arrayproxy-shift"]], "semantique.ArrayProxy.smooth": [[18, "semantique-arrayproxy-smooth"]], "semantique.ArrayProxy.trim": [[19, "semantique-arrayproxy-trim"]], "semantique.CollectionProxy": [[20, "semantique-collectionproxy"]], "semantique.CollectionProxy.apply_custom": [[21, "semantique-collectionproxy-apply-custom"]], "semantique.CollectionProxy.assign": [[22, "semantique-collectionproxy-assign"]], "semantique.CollectionProxy.assign_space": [[23, "semantique-collectionproxy-assign-space"]], "semantique.CollectionProxy.assign_time": [[24, "semantique-collectionproxy-assign-time"]], "semantique.CollectionProxy.compose": [[25, "semantique-collectionproxy-compose"]], "semantique.CollectionProxy.concatenate": [[26, "semantique-collectionproxy-concatenate"]], "semantique.CollectionProxy.delineate": [[27, "semantique-collectionproxy-delineate"]], "semantique.CollectionProxy.evaluate": [[28, "semantique-collectionproxy-evaluate"]], "semantique.CollectionProxy.extract": [[29, "semantique-collectionproxy-extract"]], "semantique.CollectionProxy.fill": [[30, "semantique-collectionproxy-fill"]], "semantique.CollectionProxy.filter": [[31, "semantique-collectionproxy-filter"]], "semantique.CollectionProxy.filter_space": [[32, "semantique-collectionproxy-filter-space"]], "semantique.CollectionProxy.filter_time": [[33, "semantique-collectionproxy-filter-time"]], "semantique.CollectionProxy.merge": [[34, "semantique-collectionproxy-merge"]], "semantique.CollectionProxy.reduce": [[35, "semantique-collectionproxy-reduce"]], "semantique.CollectionProxy.shift": [[36, "semantique-collectionproxy-shift"]], "semantique.CollectionProxy.smooth": [[37, "semantique-collectionproxy-smooth"]], "semantique.CollectionProxy.trim": [[38, "semantique-collectionproxy-trim"]], "semantique.QueryRecipe": [[39, "semantique-queryrecipe"]], "semantique.QueryRecipe.execute": [[40, "semantique-queryrecipe-execute"]], "semantique.appearance": [[41, "semantique-appearance"]], "semantique.artifacts": [[42, "semantique-artifacts"]], "semantique.atmosphere": [[43, "semantique-atmosphere"]], "semantique.collection": [[44, "semantique-collection"]], "semantique.components.space": [[45, "semantique-components-space"]], "semantique.components.space.FEATURE": [[46, "semantique-components-space-feature"]], "semantique.components.space.X": [[47, "semantique-components-space-x"]], "semantique.components.space.Y": [[48, "semantique-components-space-y"]], "semantique.components.time": [[49, "semantique-components-time"]], "semantique.components.time.DAY": [[50, "semantique-components-time-day"]], "semantique.components.time.DAY_OF_WEEK": [[51, "semantique-components-time-day-of-week"]], "semantique.components.time.DAY_OF_YEAR": [[52, "semantique-components-time-day-of-year"]], "semantique.components.time.HOUR": [[53, "semantique-components-time-hour"]], "semantique.components.time.MINUTE": [[54, "semantique-components-time-minute"]], "semantique.components.time.MONTH": [[55, "semantique-components-time-month"]], "semantique.components.time.QUARTER": [[56, "semantique-components-time-quarter"]], "semantique.components.time.SEASON": [[57, "semantique-components-time-season"]], "semantique.components.time.SECOND": [[58, "semantique-components-time-second"]], "semantique.components.time.WEEK": [[59, "semantique-components-time-week"]], "semantique.components.time.YEAR": [[60, "semantique-components-time-year"]], "semantique.concept": [[61, "semantique-concept"]], "semantique.datacube.Datacube": [[62, "semantique-datacube-datacube"]], "semantique.datacube.Datacube.layout": [[63, "semantique-datacube-datacube-layout"]], "semantique.datacube.Datacube.lookup": [[64, "semantique-datacube-datacube-lookup"]], "semantique.datacube.Datacube.retrieve": [[65, "semantique-datacube-datacube-retrieve"]], "semantique.datacube.GeotiffArchive": [[66, "semantique-datacube-geotiffarchive"]], "semantique.datacube.GeotiffArchive.config": [[67, "semantique-datacube-geotiffarchive-config"]], "semantique.datacube.GeotiffArchive.layout": [[68, "semantique-datacube-geotiffarchive-layout"]], "semantique.datacube.GeotiffArchive.lookup": [[69, "semantique-datacube-geotiffarchive-lookup"]], "semantique.datacube.GeotiffArchive.retrieve": [[70, "semantique-datacube-geotiffarchive-retrieve"]], "semantique.datacube.GeotiffArchive.src": [[71, "semantique-datacube-geotiffarchive-src"]], "semantique.datacube.GeotiffArchive.tz": [[72, "semantique-datacube-geotiffarchive-tz"]], "semantique.datacube.Opendatacube": [[73, "semantique-datacube-opendatacube"]], "semantique.datacube.Opendatacube.config": [[74, "semantique-datacube-opendatacube-config"]], "semantique.datacube.Opendatacube.connection": [[75, "semantique-datacube-opendatacube-connection"]], "semantique.datacube.Opendatacube.layout": [[76, "semantique-datacube-opendatacube-layout"]], "semantique.datacube.Opendatacube.lookup": [[77, "semantique-datacube-opendatacube-lookup"]], "semantique.datacube.Opendatacube.retrieve": [[78, "semantique-datacube-opendatacube-retrieve"]], "semantique.datacube.Opendatacube.tz": [[79, "semantique-datacube-opendatacube-tz"]], "semantique.datacube.STACCube": [[80, "semantique-datacube-staccube"]], "semantique.datacube.STACCube.config": [[81, "semantique-datacube-staccube-config"]], "semantique.datacube.STACCube.layout": [[82, "semantique-datacube-staccube-layout"]], "semantique.datacube.STACCube.lookup": [[83, "semantique-datacube-staccube-lookup"]], "semantique.datacube.STACCube.retrieve": [[84, "semantique-datacube-staccube-retrieve"]], "semantique.datacube.STACCube.src": [[85, "semantique-datacube-staccube-src"]], "semantique.dimensions.SPACE": [[86, "semantique-dimensions-space"]], "semantique.dimensions.TIME": [[87, "semantique-dimensions-time"]], "semantique.dimensions.X": [[88, "semantique-dimensions-x"]], "semantique.dimensions.Y": [[89, "semantique-dimensions-y"]], "semantique.entity": [[90, "semantique-entity"]], "semantique.event": [[91, "semantique-event"]], "semantique.exceptions.AlignmentError": [[92, "semantique-exceptions-alignmenterror"]], "semantique.exceptions.EmptyDataError": [[93, "semantique-exceptions-emptydataerror"]], "semantique.exceptions.InvalidBuildingBlockError": [[94, "semantique-exceptions-invalidbuildingblockerror"]], "semantique.exceptions.InvalidIntervalError": [[95, "semantique-exceptions-invalidintervalerror"]], "semantique.exceptions.InvalidValueTypeError": [[96, "semantique-exceptions-invalidvaluetypeerror"]], "semantique.exceptions.MissingDimensionError": [[97, "semantique-exceptions-missingdimensionerror"]], "semantique.exceptions.MixedDimensionsError": [[98, "semantique-exceptions-mixeddimensionserror"]], "semantique.exceptions.MixedTimeZonesError": [[99, "semantique-exceptions-mixedtimezoneserror"]], "semantique.exceptions.ReservedDimensionError": [[100, "semantique-exceptions-reserveddimensionerror"]], "semantique.exceptions.TooManyDimensionsError": [[101, "semantique-exceptions-toomanydimensionserror"]], "semantique.exceptions.UnknownComponentError": [[102, "semantique-exceptions-unknowncomponenterror"]], "semantique.exceptions.UnknownConceptError": [[103, "semantique-exceptions-unknownconcepterror"]], "semantique.exceptions.UnknownDimensionError": [[104, "semantique-exceptions-unknowndimensionerror"]], "semantique.exceptions.UnknownLabelError": [[105, "semantique-exceptions-unknownlabelerror"]], "semantique.exceptions.UnknownLayerError": [[106, "semantique-exceptions-unknownlayererror"]], "semantique.exceptions.UnknownOperatorError": [[107, "semantique-exceptions-unknownoperatorerror"]], "semantique.exceptions.UnknownReducerError": [[108, "semantique-exceptions-unknownreducererror"]], "semantique.exceptions.UnknownResultError": [[109, "semantique-exceptions-unknownresulterror"]], "semantique.exceptions.UnknownVerbError": [[110, "semantique-exceptions-unknownverberror"]], "semantique.extent.SpatialExtent": [[111, "semantique-extent-spatialextent"]], "semantique.extent.SpatialExtent.crs": [[112, "semantique-extent-spatialextent-crs"]], "semantique.extent.SpatialExtent.features": [[113, "semantique-extent-spatialextent-features"]], "semantique.extent.SpatialExtent.from_feature": [[114, "semantique-extent-spatialextent-from-feature"]], "semantique.extent.SpatialExtent.from_featurecollection": [[115, "semantique-extent-spatialextent-from-featurecollection"]], "semantique.extent.SpatialExtent.from_geojson": [[116, "semantique-extent-spatialextent-from-geojson"]], "semantique.extent.SpatialExtent.from_geometry": [[117, "semantique-extent-spatialextent-from-geometry"]], "semantique.extent.SpatialExtent.rasterize": [[118, "semantique-extent-spatialextent-rasterize"]], "semantique.extent.TemporalExtent": [[119, "semantique-extent-temporalextent"]], "semantique.extent.TemporalExtent.discretize": [[120, "semantique-extent-temporalextent-discretize"]], "semantique.extent.TemporalExtent.end": [[121, "semantique-extent-temporalextent-end"]], "semantique.extent.TemporalExtent.start": [[122, "semantique-extent-temporalextent-start"]], "semantique.extent.TemporalExtent.tz": [[123, "semantique-extent-temporalextent-tz"]], "semantique.geometry": [[124, "semantique-geometry"]], "semantique.interval": [[125, "semantique-interval"]], "semantique.label": [[126, "semantique-label"]], "semantique.layer": [[127, "semantique-layer"]], "semantique.mapping.Mapping": [[128, "semantique-mapping-mapping"]], "semantique.mapping.Mapping.lookup": [[129, "semantique-mapping-mapping-lookup"]], "semantique.mapping.Mapping.translate": [[130, "semantique-mapping-mapping-translate"]], "semantique.mapping.Semantique": [[131, "semantique-mapping-semantique"]], "semantique.mapping.Semantique.lookup": [[132, "semantique-mapping-semantique-lookup"]], "semantique.mapping.Semantique.translate": [[133, "semantique-mapping-semantique-translate"]], "semantique.operators.ABSOLUTE": [[134, "semantique-operators-absolute"]], "semantique.operators.ADD": [[135, "semantique-operators-add"]], "semantique.operators.AFTER": [[136, "semantique-operators-after"]], "semantique.operators.AND": [[137, "semantique-operators-and"]], "semantique.operators.BEFORE": [[138, "semantique-operators-before"]], "semantique.operators.CEILING": [[139, "semantique-operators-ceiling"]], "semantique.operators.COSECANT": [[140, "semantique-operators-cosecant"]], "semantique.operators.COSINE": [[141, "semantique-operators-cosine"]], "semantique.operators.COTANGENT": [[142, "semantique-operators-cotangent"]], "semantique.operators.CUBE_ROOT": [[143, "semantique-operators-cube-root"]], "semantique.operators.DIVIDE": [[144, "semantique-operators-divide"]], "semantique.operators.DURING": [[145, "semantique-operators-during"]], "semantique.operators.EQUAL": [[146, "semantique-operators-equal"]], "semantique.operators.EXCLUSIVE_OR": [[147, "semantique-operators-exclusive-or"]], "semantique.operators.EXPONENTIAL": [[148, "semantique-operators-exponential"]], "semantique.operators.FLOOR": [[149, "semantique-operators-floor"]], "semantique.operators.GREATER": [[150, "semantique-operators-greater"]], "semantique.operators.GREATER_EQUAL": [[151, "semantique-operators-greater-equal"]], "semantique.operators.IN": [[152, "semantique-operators-in"]], "semantique.operators.INTERSECTS": [[153, "semantique-operators-intersects"]], "semantique.operators.IS_MISSING": [[154, "semantique-operators-is-missing"]], "semantique.operators.LESS": [[155, "semantique-operators-less"]], "semantique.operators.LESS_EQUAL": [[156, "semantique-operators-less-equal"]], "semantique.operators.MULTIPLY": [[157, "semantique-operators-multiply"]], "semantique.operators.NATURAL_LOGARITHM": [[158, "semantique-operators-natural-logarithm"]], "semantique.operators.NORMALIZED_DIFFERENCE": [[159, "semantique-operators-normalized-difference"]], "semantique.operators.NOT": [[160, "semantique-operators-not"]], "semantique.operators.NOT_EQUAL": [[161, "semantique-operators-not-equal"]], "semantique.operators.NOT_IN": [[162, "semantique-operators-not-in"]], "semantique.operators.NOT_MISSING": [[163, "semantique-operators-not-missing"]], "semantique.operators.OR": [[164, "semantique-operators-or"]], "semantique.operators.POWER": [[165, "semantique-operators-power"]], "semantique.operators.SECANT": [[166, "semantique-operators-secant"]], "semantique.operators.SINE": [[167, "semantique-operators-sine"]], "semantique.operators.SQUARE_ROOT": [[168, "semantique-operators-square-root"]], "semantique.operators.SUBTRACT": [[169, "semantique-operators-subtract"]], "semantique.operators.TANGENT": [[170, "semantique-operators-tangent"]], "semantique.operators.TO_DEGREES": [[171, "semantique-operators-to-degrees"]], "semantique.operators.TO_RADIANS": [[172, "semantique-operators-to-radians"]], "semantique.processor.arrays.Array": [[173, "semantique-processor-arrays-array"]], "semantique.processor.arrays.Array.align_with": [[174, "semantique-processor-arrays-array-align-with"]], "semantique.processor.arrays.Array.apply_custom": [[175, "semantique-processor-arrays-array-apply-custom"]], "semantique.processor.arrays.Array.assign": [[176, "semantique-processor-arrays-array-assign"]], "semantique.processor.arrays.Array.crs": [[177, "semantique-processor-arrays-array-crs"]], "semantique.processor.arrays.Array.delineate": [[178, "semantique-processor-arrays-array-delineate"]], "semantique.processor.arrays.Array.drop_non_dimension_coords": [[179, "semantique-processor-arrays-array-drop-non-dimension-coords"]], "semantique.processor.arrays.Array.evaluate": [[180, "semantique-processor-arrays-array-evaluate"]], "semantique.processor.arrays.Array.extract": [[181, "semantique-processor-arrays-array-extract"]], "semantique.processor.arrays.Array.fill": [[182, "semantique-processor-arrays-array-fill"]], "semantique.processor.arrays.Array.filter": [[183, "semantique-processor-arrays-array-filter"]], "semantique.processor.arrays.Array.grid_points": [[184, "semantique-processor-arrays-array-grid-points"]], "semantique.processor.arrays.Array.groupby": [[185, "semantique-processor-arrays-array-groupby"]], "semantique.processor.arrays.Array.is_empty": [[186, "semantique-processor-arrays-array-is-empty"]], "semantique.processor.arrays.Array.name": [[187, "semantique-processor-arrays-array-name"]], "semantique.processor.arrays.Array.reduce": [[188, "semantique-processor-arrays-array-reduce"]], "semantique.processor.arrays.Array.regularize": [[189, "semantique-processor-arrays-array-regularize"]], "semantique.processor.arrays.Array.reproject": [[190, "semantique-processor-arrays-array-reproject"]], "semantique.processor.arrays.Array.shift": [[191, "semantique-processor-arrays-array-shift"]], "semantique.processor.arrays.Array.smooth": [[192, "semantique-processor-arrays-array-smooth"]], "semantique.processor.arrays.Array.spatial_resolution": [[193, "semantique-processor-arrays-array-spatial-resolution"]], "semantique.processor.arrays.Array.stack_all_dims": [[194, "semantique-processor-arrays-array-stack-all-dims"]], "semantique.processor.arrays.Array.stack_spatial_dims": [[195, "semantique-processor-arrays-array-stack-spatial-dims"]], "semantique.processor.arrays.Array.to_csv": [[196, "semantique-processor-arrays-array-to-csv"]], "semantique.processor.arrays.Array.to_dataframe": [[197, "semantique-processor-arrays-array-to-dataframe"]], "semantique.processor.arrays.Array.to_geodataframe": [[198, "semantique-processor-arrays-array-to-geodataframe"]], "semantique.processor.arrays.Array.to_geotiff": [[199, "semantique-processor-arrays-array-to-geotiff"]], "semantique.processor.arrays.Array.trim": [[200, "semantique-processor-arrays-array-trim"]], "semantique.processor.arrays.Array.tz": [[201, "semantique-processor-arrays-array-tz"]], "semantique.processor.arrays.Array.tz_convert": [[202, "semantique-processor-arrays-array-tz-convert"]], "semantique.processor.arrays.Array.unstack_all_dims": [[203, "semantique-processor-arrays-array-unstack-all-dims"]], "semantique.processor.arrays.Array.unstack_spatial_dims": [[204, "semantique-processor-arrays-array-unstack-spatial-dims"]], "semantique.processor.arrays.Array.value_labels": [[205, "semantique-processor-arrays-array-value-labels"]], "semantique.processor.arrays.Array.value_type": [[206, "semantique-processor-arrays-array-value-type"]], "semantique.processor.arrays.Array.write_crs": [[207, "semantique-processor-arrays-array-write-crs"]], "semantique.processor.arrays.Array.write_tz": [[208, "semantique-processor-arrays-array-write-tz"]], "semantique.processor.arrays.Collection": [[209, "semantique-processor-arrays-collection"]], "semantique.processor.arrays.Collection.apply_custom": [[210, "semantique-processor-arrays-collection-apply-custom"]], "semantique.processor.arrays.Collection.assign": [[211, "semantique-processor-arrays-collection-assign"]], "semantique.processor.arrays.Collection.compose": [[212, "semantique-processor-arrays-collection-compose"]], "semantique.processor.arrays.Collection.concatenate": [[213, "semantique-processor-arrays-collection-concatenate"]], "semantique.processor.arrays.Collection.delineate": [[214, "semantique-processor-arrays-collection-delineate"]], "semantique.processor.arrays.Collection.evaluate": [[215, "semantique-processor-arrays-collection-evaluate"]], "semantique.processor.arrays.Collection.extract": [[216, "semantique-processor-arrays-collection-extract"]], "semantique.processor.arrays.Collection.fill": [[217, "semantique-processor-arrays-collection-fill"]], "semantique.processor.arrays.Collection.filter": [[218, "semantique-processor-arrays-collection-filter"]], "semantique.processor.arrays.Collection.is_empty": [[219, "semantique-processor-arrays-collection-is-empty"]], "semantique.processor.arrays.Collection.merge": [[220, "semantique-processor-arrays-collection-merge"]], "semantique.processor.arrays.Collection.name": [[221, "semantique-processor-arrays-collection-name"]], "semantique.processor.arrays.Collection.reduce": [[222, "semantique-processor-arrays-collection-reduce"]], "semantique.processor.arrays.Collection.regularize": [[223, "semantique-processor-arrays-collection-regularize"]], "semantique.processor.arrays.Collection.shift": [[224, "semantique-processor-arrays-collection-shift"]], "semantique.processor.arrays.Collection.smooth": [[225, "semantique-processor-arrays-collection-smooth"]], "semantique.processor.arrays.Collection.sq": [[226, "semantique-processor-arrays-collection-sq"]], "semantique.processor.arrays.Collection.stack_spatial_dims": [[227, "semantique-processor-arrays-collection-stack-spatial-dims"]], "semantique.processor.arrays.Collection.trim": [[228, "semantique-processor-arrays-collection-trim"]], "semantique.processor.arrays.Collection.unstack_spatial_dims": [[229, "semantique-processor-arrays-collection-unstack-spatial-dims"]], "semantique.processor.core.Cache": [[230, "semantique-processor-core-cache"]], "semantique.processor.core.Cache.build": [[231, "semantique-processor-core-cache-build"]], "semantique.processor.core.Cache.data": [[232, "semantique-processor-core-cache-data"]], "semantique.processor.core.Cache.load": [[233, "semantique-processor-core-cache-load"]], "semantique.processor.core.Cache.seq": [[234, "semantique-processor-core-cache-seq"]], "semantique.processor.core.Cache.update": [[235, "semantique-processor-core-cache-update"]], "semantique.processor.core.QueryProcessor": [[236, "semantique-processor-core-queryprocessor"]], "semantique.processor.core.QueryProcessor.add_custom_operator": [[237, "semantique-processor-core-queryprocessor-add-custom-operator"]], "semantique.processor.core.QueryProcessor.add_custom_reducer": [[238, "semantique-processor-core-queryprocessor-add-custom-reducer"]], "semantique.processor.core.QueryProcessor.add_custom_verb": [[239, "semantique-processor-core-queryprocessor-add-custom-verb"]], "semantique.processor.core.QueryProcessor.cache": [[240, "semantique-processor-core-queryprocessor-cache"]], "semantique.processor.core.QueryProcessor.call_handler": [[241, "semantique-processor-core-queryprocessor-call-handler"]], "semantique.processor.core.QueryProcessor.call_verb": [[242, "semantique-processor-core-queryprocessor-call-verb"]], "semantique.processor.core.QueryProcessor.crs": [[243, "semantique-processor-core-queryprocessor-crs"]], "semantique.processor.core.QueryProcessor.custom_operators": [[244, "semantique-processor-core-queryprocessor-custom-operators"]], "semantique.processor.core.QueryProcessor.custom_reducers": [[245, "semantique-processor-core-queryprocessor-custom-reducers"]], "semantique.processor.core.QueryProcessor.custom_verbs": [[246, "semantique-processor-core-queryprocessor-custom-verbs"]], "semantique.processor.core.QueryProcessor.datacube": [[247, "semantique-processor-core-queryprocessor-datacube"]], "semantique.processor.core.QueryProcessor.execute": [[248, "semantique-processor-core-queryprocessor-execute"]], "semantique.processor.core.QueryProcessor.extent": [[249, "semantique-processor-core-queryprocessor-extent"]], "semantique.processor.core.QueryProcessor.get_operator": [[250, "semantique-processor-core-queryprocessor-get-operator"]], "semantique.processor.core.QueryProcessor.get_reducer": [[251, "semantique-processor-core-queryprocessor-get-reducer"]], "semantique.processor.core.QueryProcessor.handle_apply_custom": [[252, "semantique-processor-core-queryprocessor-handle-apply-custom"]], "semantique.processor.core.QueryProcessor.handle_assign": [[253, "semantique-processor-core-queryprocessor-handle-assign"]], "semantique.processor.core.QueryProcessor.handle_collection": [[254, "semantique-processor-core-queryprocessor-handle-collection"]], "semantique.processor.core.QueryProcessor.handle_compose": [[255, "semantique-processor-core-queryprocessor-handle-compose"]], "semantique.processor.core.QueryProcessor.handle_concatenate": [[256, "semantique-processor-core-queryprocessor-handle-concatenate"]], "semantique.processor.core.QueryProcessor.handle_concept": [[257, "semantique-processor-core-queryprocessor-handle-concept"]], "semantique.processor.core.QueryProcessor.handle_delineate": [[258, "semantique-processor-core-queryprocessor-handle-delineate"]], "semantique.processor.core.QueryProcessor.handle_evaluate": [[259, "semantique-processor-core-queryprocessor-handle-evaluate"]], "semantique.processor.core.QueryProcessor.handle_extract": [[260, "semantique-processor-core-queryprocessor-handle-extract"]], "semantique.processor.core.QueryProcessor.handle_fill": [[261, "semantique-processor-core-queryprocessor-handle-fill"]], "semantique.processor.core.QueryProcessor.handle_filter": [[262, "semantique-processor-core-queryprocessor-handle-filter"]], "semantique.processor.core.QueryProcessor.handle_geometry": [[263, "semantique-processor-core-queryprocessor-handle-geometry"]], "semantique.processor.core.QueryProcessor.handle_groupby": [[264, "semantique-processor-core-queryprocessor-handle-groupby"]], "semantique.processor.core.QueryProcessor.handle_interval": [[265, "semantique-processor-core-queryprocessor-handle-interval"]], "semantique.processor.core.QueryProcessor.handle_label": [[266, "semantique-processor-core-queryprocessor-handle-label"]], "semantique.processor.core.QueryProcessor.handle_layer": [[267, "semantique-processor-core-queryprocessor-handle-layer"]], "semantique.processor.core.QueryProcessor.handle_merge": [[268, "semantique-processor-core-queryprocessor-handle-merge"]], "semantique.processor.core.QueryProcessor.handle_name": [[269, "semantique-processor-core-queryprocessor-handle-name"]], "semantique.processor.core.QueryProcessor.handle_processing_chain": [[270, "semantique-processor-core-queryprocessor-handle-processing-chain"]], "semantique.processor.core.QueryProcessor.handle_reduce": [[271, "semantique-processor-core-queryprocessor-handle-reduce"]], "semantique.processor.core.QueryProcessor.handle_result": [[272, "semantique-processor-core-queryprocessor-handle-result"]], "semantique.processor.core.QueryProcessor.handle_self": [[273, "semantique-processor-core-queryprocessor-handle-self"]], "semantique.processor.core.QueryProcessor.handle_set": [[274, "semantique-processor-core-queryprocessor-handle-set"]], "semantique.processor.core.QueryProcessor.handle_shift": [[275, "semantique-processor-core-queryprocessor-handle-shift"]], "semantique.processor.core.QueryProcessor.handle_smooth": [[276, "semantique-processor-core-queryprocessor-handle-smooth"]], "semantique.processor.core.QueryProcessor.handle_time_instant": [[277, "semantique-processor-core-queryprocessor-handle-time-instant"]], "semantique.processor.core.QueryProcessor.handle_time_interval": [[278, "semantique-processor-core-queryprocessor-handle-time-interval"]], "semantique.processor.core.QueryProcessor.handle_trim": [[279, "semantique-processor-core-queryprocessor-handle-trim"]], "semantique.processor.core.QueryProcessor.handle_verb": [[280, "semantique-processor-core-queryprocessor-handle-verb"]], "semantique.processor.core.QueryProcessor.mapping": [[281, "semantique-processor-core-queryprocessor-mapping"]], "semantique.processor.core.QueryProcessor.optimize": [[282, "semantique-processor-core-queryprocessor-optimize"]], "semantique.processor.core.QueryProcessor.parse": [[283, "semantique-processor-core-queryprocessor-parse"]], "semantique.processor.core.QueryProcessor.preview": [[284, "semantique-processor-core-queryprocessor-preview"]], "semantique.processor.core.QueryProcessor.recipe": [[285, "semantique-processor-core-queryprocessor-recipe"]], "semantique.processor.core.QueryProcessor.response": [[286, "semantique-processor-core-queryprocessor-response"]], "semantique.processor.core.QueryProcessor.spatial_resolution": [[287, "semantique-processor-core-queryprocessor-spatial-resolution"]], "semantique.processor.core.QueryProcessor.track_types": [[288, "semantique-processor-core-queryprocessor-track-types"]], "semantique.processor.core.QueryProcessor.tz": [[289, "semantique-processor-core-queryprocessor-tz"]], "semantique.processor.operators.absolute_": [[290, "semantique-processor-operators-absolute"]], "semantique.processor.operators.add_": [[291, "semantique-processor-operators-add"]], "semantique.processor.operators.after_": [[292, "semantique-processor-operators-after"]], "semantique.processor.operators.and_": [[293, "semantique-processor-operators-and"]], "semantique.processor.operators.before_": [[294, "semantique-processor-operators-before"]], "semantique.processor.operators.ceiling_": [[295, "semantique-processor-operators-ceiling"]], "semantique.processor.operators.cosecant_": [[296, "semantique-processor-operators-cosecant"]], "semantique.processor.operators.cosine_": [[297, "semantique-processor-operators-cosine"]], "semantique.processor.operators.cotangent_": [[298, "semantique-processor-operators-cotangent"]], "semantique.processor.operators.cube_root_": [[299, "semantique-processor-operators-cube-root"]], "semantique.processor.operators.divide_": [[300, "semantique-processor-operators-divide"]], "semantique.processor.operators.during_": [[301, "semantique-processor-operators-during"]], "semantique.processor.operators.equal_": [[302, "semantique-processor-operators-equal"]], "semantique.processor.operators.exclusive_or_": [[303, "semantique-processor-operators-exclusive-or"]], "semantique.processor.operators.exponential_": [[304, "semantique-processor-operators-exponential"]], "semantique.processor.operators.floor_": [[305, "semantique-processor-operators-floor"]], "semantique.processor.operators.greater_": [[306, "semantique-processor-operators-greater"]], "semantique.processor.operators.greater_equal_": [[307, "semantique-processor-operators-greater-equal"]], "semantique.processor.operators.in_": [[308, "semantique-processor-operators-in"]], "semantique.processor.operators.intersects_": [[309, "semantique-processor-operators-intersects"]], "semantique.processor.operators.is_missing_": [[310, "semantique-processor-operators-is-missing"]], "semantique.processor.operators.less_": [[311, "semantique-processor-operators-less"]], "semantique.processor.operators.less_equal_": [[312, "semantique-processor-operators-less-equal"]], "semantique.processor.operators.multiply_": [[313, "semantique-processor-operators-multiply"]], "semantique.processor.operators.natural_logarithm_": [[314, "semantique-processor-operators-natural-logarithm"]], "semantique.processor.operators.normalized_difference_": [[315, "semantique-processor-operators-normalized-difference"]], "semantique.processor.operators.not_": [[316, "semantique-processor-operators-not"]], "semantique.processor.operators.not_equal_": [[317, "semantique-processor-operators-not-equal"]], "semantique.processor.operators.not_in_": [[318, "semantique-processor-operators-not-in"]], "semantique.processor.operators.not_missing_": [[319, "semantique-processor-operators-not-missing"]], "semantique.processor.operators.or_": [[320, "semantique-processor-operators-or"]], "semantique.processor.operators.power_": [[321, "semantique-processor-operators-power"]], "semantique.processor.operators.secant_": [[322, "semantique-processor-operators-secant"]], "semantique.processor.operators.sine_": [[323, "semantique-processor-operators-sine"]], "semantique.processor.operators.square_root_": [[324, "semantique-processor-operators-square-root"]], "semantique.processor.operators.subtract_": [[325, "semantique-processor-operators-subtract"]], "semantique.processor.operators.tangent_": [[326, "semantique-processor-operators-tangent"]], "semantique.processor.operators.to_degrees_": [[327, "semantique-processor-operators-to-degrees"]], "semantique.processor.operators.to_radians_": [[328, "semantique-processor-operators-to-radians"]], "semantique.processor.reducers.all_": [[329, "semantique-processor-reducers-all"]], "semantique.processor.reducers.any_": [[330, "semantique-processor-reducers-any"]], "semantique.processor.reducers.count_": [[331, "semantique-processor-reducers-count"]], "semantique.processor.reducers.first_": [[332, "semantique-processor-reducers-first"]], "semantique.processor.reducers.last_": [[333, "semantique-processor-reducers-last"]], "semantique.processor.reducers.max_": [[334, "semantique-processor-reducers-max"]], "semantique.processor.reducers.mean_": [[335, "semantique-processor-reducers-mean"]], "semantique.processor.reducers.median_": [[336, "semantique-processor-reducers-median"]], "semantique.processor.reducers.min_": [[337, "semantique-processor-reducers-min"]], "semantique.processor.reducers.mode_": [[338, "semantique-processor-reducers-mode"]], "semantique.processor.reducers.n_": [[339, "semantique-processor-reducers-n"]], "semantique.processor.reducers.none_": [[340, "semantique-processor-reducers-none"]], "semantique.processor.reducers.percentage_": [[341, "semantique-processor-reducers-percentage"]], "semantique.processor.reducers.product_": [[342, "semantique-processor-reducers-product"]], "semantique.processor.reducers.range_": [[343, "semantique-processor-reducers-range"]], "semantique.processor.reducers.standard_deviation_": [[344, "semantique-processor-reducers-standard-deviation"]], "semantique.processor.reducers.sum_": [[345, "semantique-processor-reducers-sum"]], "semantique.processor.reducers.variance_": [[346, "semantique-processor-reducers-variance"]], "semantique.processor.types.DTYPE_MAPPING": [[347, "semantique-processor-types-dtype-mapping"]], "semantique.processor.types.TYPE_PROMOTION_MANUALS": [[348, "semantique-processor-types-type-promotion-manuals"]], "semantique.processor.types.TypePromoter": [[349, "semantique-processor-types-typepromoter"]], "semantique.processor.types.TypePromoter.check": [[350, "semantique-processor-types-typepromoter-check"]], "semantique.processor.types.TypePromoter.input_labels": [[351, "semantique-processor-types-typepromoter-input-labels"]], "semantique.processor.types.TypePromoter.input_types": [[352, "semantique-processor-types-typepromoter-input-types"]], "semantique.processor.types.TypePromoter.manual": [[353, "semantique-processor-types-typepromoter-manual"]], "semantique.processor.types.TypePromoter.output_labels": [[354, "semantique-processor-types-typepromoter-output-labels"]], "semantique.processor.types.TypePromoter.output_type": [[355, "semantique-processor-types-typepromoter-output-type"]], "semantique.processor.types.TypePromoter.promote": [[356, "semantique-processor-types-typepromoter-promote"]], "semantique.processor.types.get_value_labels": [[357, "semantique-processor-types-get-value-labels"]], "semantique.processor.types.get_value_type": [[358, "semantique-processor-types-get-value-type"]], "semantique.processor.utils.allnull": [[359, "semantique-processor-utils-allnull"]], "semantique.processor.utils.convert_datetime64": [[360, "semantique-processor-utils-convert-datetime64"]], "semantique.processor.utils.datetime64_as_unix": [[361, "semantique-processor-utils-datetime64-as-unix"]], "semantique.processor.utils.get_null": [[362, "semantique-processor-utils-get-null"]], "semantique.processor.utils.inf_as_null": [[363, "semantique-processor-utils-inf-as-null"]], "semantique.processor.utils.null_as_zero": [[364, "semantique-processor-utils-null-as-zero"]], "semantique.processor.utils.parse_datetime_component": [[365, "semantique-processor-utils-parse-datetime-component"]], "semantique.processor.utils.parse_extent": [[366, "semantique-processor-utils-parse-extent"]], "semantique.processor.values.Interval": [[367, "semantique-processor-values-interval"]], "semantique.processor.values.Interval.lower": [[368, "semantique-processor-values-interval-lower"]], "semantique.processor.values.Interval.sq": [[369, "semantique-processor-values-interval-sq"]], "semantique.processor.values.Interval.upper": [[370, "semantique-processor-values-interval-upper"]], "semantique.processor.values.Interval.value_type": [[371, "semantique-processor-values-interval-value-type"]], "semantique.reducers.ALL": [[372, "semantique-reducers-all"]], "semantique.reducers.ANY": [[373, "semantique-reducers-any"]], "semantique.reducers.COUNT": [[374, "semantique-reducers-count"]], "semantique.reducers.FIRST": [[375, "semantique-reducers-first"]], "semantique.reducers.LAST": [[376, "semantique-reducers-last"]], "semantique.reducers.MAX": [[377, "semantique-reducers-max"]], "semantique.reducers.MEAN": [[378, "semantique-reducers-mean"]], "semantique.reducers.MEDIAN": [[379, "semantique-reducers-median"]], "semantique.reducers.MIN": [[380, "semantique-reducers-min"]], "semantique.reducers.MODE": [[381, "semantique-reducers-mode"]], "semantique.reducers.N": [[382, "semantique-reducers-n"]], "semantique.reducers.NONE": [[383, "semantique-reducers-none"]], "semantique.reducers.PERCENTAGE": [[384, "semantique-reducers-percentage"]], "semantique.reducers.PRODUCT": [[385, "semantique-reducers-product"]], "semantique.reducers.RANGE": [[386, "semantique-reducers-range"]], "semantique.reducers.STANDARD_DEVIATION": [[387, "semantique-reducers-standard-deviation"]], "semantique.reducers.SUM": [[388, "semantique-reducers-sum"]], "semantique.reducers.VARIANCE": [[389, "semantique-reducers-variance"]], "semantique.reflectance": [[390, "semantique-reflectance"]], "semantique.result": [[391, "semantique-result"]], "semantique.self": [[392, "semantique-self"]], "semantique.set": [[393, "semantique-set"]], "semantique.time_instant": [[394, "semantique-time-instant"]], "semantique.time_interval": [[395, "semantique-time-interval"]], "semantique.topography": [[396, "semantique-topography"]], "Representing an EO data cube": [[397, "Representing-an-EO-data-cube"], [401, "Representing-an-EO-data-cube"]], "Content": [[397, "Content"], [398, "Content"], [399, "Content"], [400, "Content"], [401, "Content"], [402, "Content"], [403, "Content"]], "Prepare": [[397, "Prepare"], [398, "Prepare"], [399, "Prepare"], [400, "Prepare"], [401, "Prepare"], [402, "Prepare"], [403, "Prepare"]], "Structure": [[397, "Structure"], [399, "Structure"]], "The Opendatacube configuration": [[397, "The-Opendatacube-configuration"]], "The Geotiffarchive configuration": [[397, "The-Geotiffarchive-configuration"]], "The STACCube configuration": [[397, "The-STACCube-configuration"]], "Gallery": [[398, "Gallery"]], "Count water and vegetation presence": [[398, "Count-water-and-vegetation-presence"]], "Cloud-free composite": [[398, "Cloud-free-composite"]], "Land cover map": [[398, "Land-cover-map"]], "Cloud and snow cover maps": [[398, "Cloud-and-snow-cover-maps"]], "Semantic content based image retrieval": [[398, "Semantic-content-based-image-retrieval"]], "Parcel statistics": [[398, "Parcel-statistics"]], "Seasonal aggregates": [[398, "Seasonal-aggregates"]], "Time of first vegetation observation": [[398, "Time-of-first-vegetation-observation"]], "Constructing a mapping": [[399, "Constructing-a-mapping"]], "The Semantique configuration": [[399, "The-Semantique-configuration"]], "Internal query processing": [[400, "Internal-query-processing"]], "Query parsing": [[400, "Query-parsing"]], "Parsing the spatial and temporal extent": [[400, "Parsing-the-spatial-and-temporal-extent"]], "Query optimization": [[400, "Query-optimization"]], "Query execution": [[400, "Query-execution"]], "Handler functions": [[400, "Handler-functions"]], "Data structures": [[400, "Data-structures"]], "Tracking value types": [[400, "Tracking-value-types"]], "Adding custom verbs": [[400, "Adding-custom-verbs"]], "Adding custom operators": [[400, "Adding-custom-operators"]], "Adding custom reducers": [[400, "Adding-custom-reducers"]], "Exporting the response": [[400, "Exporting-the-response"]], "Caching data layers": [[400, "Caching-data-layers"]], "Logging progress": [[400, "Logging-progress"]], "Writing and executing query recipes": [[401, "Writing-and-executing-query-recipes"]], "Writing the recipe": [[401, "Writing-the-recipe"]], "Setting the context": [[401, "Setting-the-context"]], "Importing a mapping": [[401, "Importing-a-mapping"]], "Setting the spatio-temporal extent": [[401, "Setting-the-spatio-temporal-extent"]], "Collecting the full context": [[401, "Collecting-the-full-context"]], "Executing the recipe": [[401, "Executing-the-recipe"]], "References": [[402, "References"], [410, "references"]], "Referencing semantic concepts": [[402, "Referencing-semantic-concepts"]], "Referencing data layers": [[402, "Referencing-data-layers"]], "Referencing results": [[402, "Referencing-results"]], "Referencing the active evaluation object": [[402, "Referencing-the-active-evaluation-object"]], "Referencing collections": [[402, "Referencing-collections"]], "Verbs": [[403, "Verbs"], [410, "verbs"]], "Verbs for single arrays": [[403, "Verbs-for-single-arrays"], [410, "verbs-for-single-arrays"]], "Evaluate": [[403, "Evaluate"]], "Univariate expressions": [[403, "Univariate-expressions"]], "Bivariate expressions": [[403, "Bivariate-expressions"]], "Aligning two arrays": [[403, "Aligning-two-arrays"]], "Extract": [[403, "Extract"]], "Extracting a component of dimension coordinates": [[403, "Extracting-a-component-of-dimension-coordinates"]], "Filter": [[403, "Filter"]], "Filtering by dimension coordinates": [[403, "Filtering-by-dimension-coordinates"]], "Self-filtering": [[403, "Self-filtering"]], "Assign": [[403, "Assign"]], "Assigning dimension coordinates": [[403, "Assigning-dimension-coordinates"]], "Assigning to nodata values": [[403, "Assigning-to-nodata-values"]], "Reduce": [[403, "Reduce"]], "Shift": [[403, "Shift"]], "Smooth": [[403, "Smooth"]], "Trim": [[403, "Trim"]], "Delineate": [[403, "Delineate"]], "Fill": [[403, "Fill"]], "Groupby": [[403, "Groupby"]], "Grouping by dimension coordinates": [[403, "Grouping-by-dimension-coordinates"]], "Multiple groupers": [[403, "Multiple-groupers"]], "Verbs for collections of arrays": [[403, "Verbs-for-collections-of-arrays"]], "Concatenate": [[403, "Concatenate"]], "Concatenating along a new dimension": [[403, "Concatenating-along-a-new-dimension"]], "Concatenating over an existing dimension": [[403, "Concatenating-over-an-existing-dimension"]], "Compose": [[403, "Compose"]], "Merge": [[403, "Merge"]], "Split-apply-combine structures": [[403, "Split-apply-combine-structures"]], "Utility verbs": [[403, "Utility-verbs"], [410, "utility-verbs"]], "Name": [[403, "Name"]], "Changelog": [[404, "changelog"]], "Version 0.1.0 \u201cBarmstein\u201d": [[404, "version-0-1-0-barmstein"]], "Contributor Covenant Code of Conduct": [[405, "contributor-covenant-code-of-conduct"]], "Our Pledge": [[405, "our-pledge"]], "Our Standards": [[405, "our-standards"]], "Enforcement Responsibilities": [[405, "enforcement-responsibilities"]], "Scope": [[405, "scope"]], "Enforcement": [[405, "enforcement"]], "Enforcement Guidelines": [[405, "enforcement-guidelines"]], "1. Correction": [[405, "correction"]], "2. Warning": [[405, "warning"]], "3. Temporary Ban": [[405, "temporary-ban"]], "4. Permanent Ban": [[405, "permanent-ban"]], "Attribution": [[405, "attribution"]], "Contributing": [[406, "contributing"]], "Creating issues and discussions": [[406, "creating-issues-and-discussions"]], "Solving issues": [[406, "solving-issues"]], "1. Cloning the GitHub repo": [[406, "cloning-the-github-repo"]], "2. Creating a local development environment": [[406, "creating-a-local-development-environment"]], "3. Writing code": [[406, "writing-code"]], "4. Commiting code to your local branch": [[406, "commiting-code-to-your-local-branch"]], "5. Pushing your branch to the GitHub repo": [[406, "pushing-your-branch-to-the-github-repo"]], "6. Creating a pull request": [[406, "creating-a-pull-request"]], "User Guide": [[407, "user-guide"]], "Semantic querying in Earth observation data cubes": [[408, "semantic-querying-in-earth-observation-data-cubes"]], "Acknowledgements": [[408, "acknowledgements"]], "Copyright": [[408, "copyright"]], "Indices and tables": [[408, "indices-and-tables"]], "Installation": [[409, "installation"]], "API Reference": [[410, "api-reference"]], "Components": [[410, "components"]], "Recipe": [[410, "recipe"]], "Mapping": [[410, "mapping"]], "EO data cube": [[410, "eo-data-cube"]], "Spatio-temporal extent": [[410, "spatio-temporal-extent"]], "Building blocks": [[410, "building-blocks"]], "Verbs for array collections": [[410, "verbs-for-array-collections"]], "Special values": [[410, "special-values"]], "Dimensions": [[410, "dimensions"]], "Reserved dimension names": [[410, "reserved-dimension-names"]], "Dimension components": [[410, "dimension-components"]], "Operators": [[410, "operators"]], "Univariate operators": [[410, "univariate-operators"], [410, "id1"]], "Algebraic operators": [[410, "algebraic-operators"], [410, "id2"]], "Boolean operators": [[410, "boolean-operators"], [410, "id3"]], "Relational operators": [[410, "relational-operators"], [410, "id4"]], "Spatial relational operators": [[410, "spatial-relational-operators"], [410, "id5"]], "Temporal relational operators": [[410, "temporal-relational-operators"], [410, "id6"]], "Reducers": [[410, "reducers"]], "Statistical reducers": [[410, "statistical-reducers"], [410, "id7"]], "Boolean reducers": [[410, "boolean-reducers"], [410, "id8"]], "Occurence reducers": [[410, "occurence-reducers"], [410, "id9"]], "Positional reducers": [[410, "positional-reducers"], [410, "id10"]], "Processor": [[410, "processor"]], "Core": [[410, "core"]], "Array objects": [[410, "array-objects"]], "Special value objects": [[410, "special-value-objects"]], "Operator functions": [[410, "operator-functions"]], "Reducer functions": [[410, "reducer-functions"]], "Utils": [[410, "utils"]], "Value type handling": [[410, "value-type-handling"]], "Exceptions": [[410, "exceptions"]]}, "indexentries": {"arrayproxy (class in semantique)": [[0, "semantique.ArrayProxy"]], "__init__() (semantique.arrayproxy method)": [[0, "semantique.ArrayProxy.__init__"]], "apply_custom() (semantique.arrayproxy method)": [[1, "semantique.ArrayProxy.apply_custom"]], "assign() (semantique.arrayproxy method)": [[2, "semantique.ArrayProxy.assign"]], "assign_space() (semantique.arrayproxy method)": [[3, "semantique.ArrayProxy.assign_space"]], "assign_time() (semantique.arrayproxy method)": [[4, "semantique.ArrayProxy.assign_time"]], "delineate() (semantique.arrayproxy method)": [[5, "semantique.ArrayProxy.delineate"]], "evaluate() (semantique.arrayproxy method)": [[6, "semantique.ArrayProxy.evaluate"]], "extract() (semantique.arrayproxy method)": [[7, "semantique.ArrayProxy.extract"]], "fill() (semantique.arrayproxy method)": [[8, "semantique.ArrayProxy.fill"]], "filter() (semantique.arrayproxy method)": [[9, "semantique.ArrayProxy.filter"]], "filter_space() (semantique.arrayproxy method)": [[10, "semantique.ArrayProxy.filter_space"]], "filter_time() (semantique.arrayproxy method)": [[11, "semantique.ArrayProxy.filter_time"]], "groupby() (semantique.arrayproxy method)": [[12, "semantique.ArrayProxy.groupby"]], "groupby_space() (semantique.arrayproxy method)": [[13, "semantique.ArrayProxy.groupby_space"]], "groupby_time() (semantique.arrayproxy method)": [[14, "semantique.ArrayProxy.groupby_time"]], "name() (semantique.arrayproxy method)": [[15, "semantique.ArrayProxy.name"]], "reduce() (semantique.arrayproxy method)": [[16, "semantique.ArrayProxy.reduce"]], "shift() (semantique.arrayproxy method)": [[17, "semantique.ArrayProxy.shift"]], "smooth() (semantique.arrayproxy method)": [[18, "semantique.ArrayProxy.smooth"]], "trim() (semantique.arrayproxy method)": [[19, "semantique.ArrayProxy.trim"]], "collectionproxy (class in semantique)": [[20, "semantique.CollectionProxy"]], "__init__() (semantique.collectionproxy method)": [[20, "semantique.CollectionProxy.__init__"]], "apply_custom() (semantique.collectionproxy method)": [[21, "semantique.CollectionProxy.apply_custom"]], "assign() (semantique.collectionproxy method)": [[22, "semantique.CollectionProxy.assign"]], "assign_space() (semantique.collectionproxy method)": [[23, "semantique.CollectionProxy.assign_space"]], "assign_time() (semantique.collectionproxy method)": [[24, "semantique.CollectionProxy.assign_time"]], "compose() (semantique.collectionproxy method)": [[25, "semantique.CollectionProxy.compose"]], "concatenate() (semantique.collectionproxy method)": [[26, "semantique.CollectionProxy.concatenate"]], "delineate() (semantique.collectionproxy method)": [[27, "semantique.CollectionProxy.delineate"]], "evaluate() (semantique.collectionproxy method)": [[28, "semantique.CollectionProxy.evaluate"]], "extract() (semantique.collectionproxy method)": [[29, "semantique.CollectionProxy.extract"]], "fill() (semantique.collectionproxy method)": [[30, "semantique.CollectionProxy.fill"]], "filter() (semantique.collectionproxy method)": [[31, "semantique.CollectionProxy.filter"]], "filter_space() (semantique.collectionproxy method)": [[32, "semantique.CollectionProxy.filter_space"]], "filter_time() (semantique.collectionproxy method)": [[33, "semantique.CollectionProxy.filter_time"]], "merge() (semantique.collectionproxy method)": [[34, "semantique.CollectionProxy.merge"]], "reduce() (semantique.collectionproxy method)": [[35, "semantique.CollectionProxy.reduce"]], "shift() (semantique.collectionproxy method)": [[36, "semantique.CollectionProxy.shift"]], "smooth() (semantique.collectionproxy method)": [[37, "semantique.CollectionProxy.smooth"]], "trim() (semantique.collectionproxy method)": [[38, "semantique.CollectionProxy.trim"]], "queryrecipe (class in semantique)": [[39, "semantique.QueryRecipe"]], "__init__() (semantique.queryrecipe method)": [[39, "semantique.QueryRecipe.__init__"]], "execute() (semantique.queryrecipe method)": [[40, "semantique.QueryRecipe.execute"]], "appearance() (in module semantique)": [[41, "semantique.appearance"]], "artifacts() (in module semantique)": [[42, "semantique.artifacts"]], "atmosphere() (in module semantique)": [[43, "semantique.atmosphere"]], "collection() (in module semantique)": [[44, "semantique.collection"]], "__init__() (semantique.components.space method)": [[45, "semantique.components.space.__init__"]], "space (class in semantique.components)": [[45, "semantique.components.space"]], "feature (semantique.components.space attribute)": [[46, "semantique.components.space.FEATURE"]], "x (semantique.components.space attribute)": [[47, "semantique.components.space.X"]], "y (semantique.components.space attribute)": [[48, "semantique.components.space.Y"]], "__init__() (semantique.components.time method)": [[49, "semantique.components.time.__init__"]], "time (class in semantique.components)": [[49, "semantique.components.time"]], "day (semantique.components.time attribute)": [[50, "semantique.components.time.DAY"]], "day_of_week (semantique.components.time attribute)": [[51, "semantique.components.time.DAY_OF_WEEK"]], "day_of_year (semantique.components.time attribute)": [[52, "semantique.components.time.DAY_OF_YEAR"]], "hour (semantique.components.time attribute)": [[53, "semantique.components.time.HOUR"]], "minute (semantique.components.time attribute)": [[54, "semantique.components.time.MINUTE"]], "month (semantique.components.time attribute)": [[55, "semantique.components.time.MONTH"]], "quarter (semantique.components.time attribute)": [[56, "semantique.components.time.QUARTER"]], "season (semantique.components.time attribute)": [[57, "semantique.components.time.SEASON"]], "second (semantique.components.time attribute)": [[58, "semantique.components.time.SECOND"]], "week (semantique.components.time attribute)": [[59, "semantique.components.time.WEEK"]], "year (semantique.components.time attribute)": [[60, "semantique.components.time.YEAR"]], "concept() (in module semantique)": [[61, "semantique.concept"]], "datacube (class in semantique.datacube)": [[62, "semantique.datacube.Datacube"]], "__init__() (semantique.datacube.datacube method)": [[62, "semantique.datacube.Datacube.__init__"]], "layout (semantique.datacube.datacube property)": [[63, "semantique.datacube.Datacube.layout"]], "lookup() (semantique.datacube.datacube method)": [[64, "semantique.datacube.Datacube.lookup"]], "retrieve() (semantique.datacube.datacube method)": [[65, "semantique.datacube.Datacube.retrieve"]], "geotiffarchive (class in semantique.datacube)": [[66, "semantique.datacube.GeotiffArchive"]], "__init__() (semantique.datacube.geotiffarchive method)": [[66, "semantique.datacube.GeotiffArchive.__init__"]], "config (semantique.datacube.geotiffarchive property)": [[67, "semantique.datacube.GeotiffArchive.config"]], "layout (semantique.datacube.geotiffarchive property)": [[68, "semantique.datacube.GeotiffArchive.layout"]], "lookup() (semantique.datacube.geotiffarchive method)": [[69, "semantique.datacube.GeotiffArchive.lookup"]], "retrieve() (semantique.datacube.geotiffarchive method)": [[70, "semantique.datacube.GeotiffArchive.retrieve"]], "src (semantique.datacube.geotiffarchive property)": [[71, "semantique.datacube.GeotiffArchive.src"]], "tz (semantique.datacube.geotiffarchive property)": [[72, "semantique.datacube.GeotiffArchive.tz"]], "opendatacube (class in semantique.datacube)": [[73, "semantique.datacube.Opendatacube"]], "__init__() (semantique.datacube.opendatacube method)": [[73, "semantique.datacube.Opendatacube.__init__"]], "config (semantique.datacube.opendatacube property)": [[74, "semantique.datacube.Opendatacube.config"]], "connection (semantique.datacube.opendatacube property)": [[75, "semantique.datacube.Opendatacube.connection"]], "layout (semantique.datacube.opendatacube property)": [[76, "semantique.datacube.Opendatacube.layout"]], "lookup() (semantique.datacube.opendatacube method)": [[77, "semantique.datacube.Opendatacube.lookup"]], "retrieve() (semantique.datacube.opendatacube method)": [[78, "semantique.datacube.Opendatacube.retrieve"]], "tz (semantique.datacube.opendatacube property)": [[79, "semantique.datacube.Opendatacube.tz"]], "staccube (class in semantique.datacube)": [[80, "semantique.datacube.STACCube"]], "__init__() (semantique.datacube.staccube method)": [[80, "semantique.datacube.STACCube.__init__"]], "config (semantique.datacube.staccube property)": [[81, "semantique.datacube.STACCube.config"]], "layout (semantique.datacube.staccube property)": [[82, "semantique.datacube.STACCube.layout"]], "lookup() (semantique.datacube.staccube method)": [[83, "semantique.datacube.STACCube.lookup"]], "retrieve() (semantique.datacube.staccube method)": [[84, "semantique.datacube.STACCube.retrieve"]], "src (semantique.datacube.staccube property)": [[85, "semantique.datacube.STACCube.src"]], "space (in module semantique.dimensions)": [[86, "semantique.dimensions.SPACE"]], "time (in module semantique.dimensions)": [[87, "semantique.dimensions.TIME"]], "x (in module semantique.dimensions)": [[88, "semantique.dimensions.X"]], "y (in module semantique.dimensions)": [[89, "semantique.dimensions.Y"]], "entity() (in module semantique)": [[90, "semantique.entity"]], "event() (in module semantique)": [[91, "semantique.event"]], "alignmenterror": [[92, "semantique.exceptions.AlignmentError"]], "emptydataerror": [[93, "semantique.exceptions.EmptyDataError"]], "invalidbuildingblockerror": [[94, "semantique.exceptions.InvalidBuildingBlockError"]], "invalidintervalerror": [[95, "semantique.exceptions.InvalidIntervalError"]], "invalidvaluetypeerror": [[96, "semantique.exceptions.InvalidValueTypeError"]], "missingdimensionerror": [[97, "semantique.exceptions.MissingDimensionError"]], "mixeddimensionserror": [[98, "semantique.exceptions.MixedDimensionsError"]], "mixedtimezoneserror": [[99, "semantique.exceptions.MixedTimeZonesError"]], "reserveddimensionerror": [[100, "semantique.exceptions.ReservedDimensionError"]], "toomanydimensionserror": [[101, "semantique.exceptions.TooManyDimensionsError"]], "unknowncomponenterror": [[102, "semantique.exceptions.UnknownComponentError"]], "unknownconcepterror": [[103, "semantique.exceptions.UnknownConceptError"]], "unknowndimensionerror": [[104, "semantique.exceptions.UnknownDimensionError"]], "unknownlabelerror": [[105, "semantique.exceptions.UnknownLabelError"]], "unknownlayererror": [[106, "semantique.exceptions.UnknownLayerError"]], "unknownoperatorerror": [[107, "semantique.exceptions.UnknownOperatorError"]], "unknownreducererror": [[108, "semantique.exceptions.UnknownReducerError"]], "unknownresulterror": [[109, "semantique.exceptions.UnknownResultError"]], "unknownverberror": [[110, "semantique.exceptions.UnknownVerbError"]], "spatialextent (class in semantique.extent)": [[111, "semantique.extent.SpatialExtent"]], "__init__() (semantique.extent.spatialextent method)": [[111, "semantique.extent.SpatialExtent.__init__"]], "crs (semantique.extent.spatialextent property)": [[112, "semantique.extent.SpatialExtent.crs"]], "features (semantique.extent.spatialextent property)": [[113, "semantique.extent.SpatialExtent.features"]], "from_feature() (semantique.extent.spatialextent class method)": [[114, "semantique.extent.SpatialExtent.from_feature"]], "from_featurecollection() (semantique.extent.spatialextent class method)": [[115, "semantique.extent.SpatialExtent.from_featurecollection"]], "from_geojson() (semantique.extent.spatialextent class method)": [[116, "semantique.extent.SpatialExtent.from_geojson"]], "from_geometry() (semantique.extent.spatialextent class method)": [[117, "semantique.extent.SpatialExtent.from_geometry"]], "rasterize() (semantique.extent.spatialextent method)": [[118, "semantique.extent.SpatialExtent.rasterize"]], "temporalextent (class in semantique.extent)": [[119, "semantique.extent.TemporalExtent"]], "__init__() (semantique.extent.temporalextent method)": [[119, "semantique.extent.TemporalExtent.__init__"]], "discretize() (semantique.extent.temporalextent method)": [[120, "semantique.extent.TemporalExtent.discretize"]], "end (semantique.extent.temporalextent property)": [[121, "semantique.extent.TemporalExtent.end"]], "start (semantique.extent.temporalextent property)": [[122, "semantique.extent.TemporalExtent.start"]], "tz (semantique.extent.temporalextent property)": [[123, "semantique.extent.TemporalExtent.tz"]], "geometry() (in module semantique)": [[124, "semantique.geometry"]], "interval() (in module semantique)": [[125, "semantique.interval"]], "label() (in module semantique)": [[126, "semantique.label"]], "layer() (in module semantique)": [[127, "semantique.layer"]], "mapping (class in semantique.mapping)": [[128, "semantique.mapping.Mapping"]], "__init__() (semantique.mapping.mapping method)": [[128, "semantique.mapping.Mapping.__init__"]], "lookup() (semantique.mapping.mapping method)": [[129, "semantique.mapping.Mapping.lookup"]], "translate() (semantique.mapping.mapping method)": [[130, "semantique.mapping.Mapping.translate"]], "semantique (class in semantique.mapping)": [[131, "semantique.mapping.Semantique"]], "__init__() (semantique.mapping.semantique method)": [[131, "semantique.mapping.Semantique.__init__"]], "lookup() (semantique.mapping.semantique method)": [[132, "semantique.mapping.Semantique.lookup"]], "translate() (semantique.mapping.semantique method)": [[133, "semantique.mapping.Semantique.translate"]], "absolute (in module semantique.operators)": [[134, "semantique.operators.ABSOLUTE"]], "add (in module semantique.operators)": [[135, "semantique.operators.ADD"]], "after (in module semantique.operators)": [[136, "semantique.operators.AFTER"]], "and (in module semantique.operators)": [[137, "semantique.operators.AND"]], "before (in module semantique.operators)": [[138, "semantique.operators.BEFORE"]], "ceiling (in module semantique.operators)": [[139, "semantique.operators.CEILING"]], "cosecant (in module semantique.operators)": [[140, "semantique.operators.COSECANT"]], "cosine (in module semantique.operators)": [[141, "semantique.operators.COSINE"]], "cotangent (in module semantique.operators)": [[142, "semantique.operators.COTANGENT"]], "cube_root (in module semantique.operators)": [[143, "semantique.operators.CUBE_ROOT"]], "divide (in module semantique.operators)": [[144, "semantique.operators.DIVIDE"]], "during (in module semantique.operators)": [[145, "semantique.operators.DURING"]], "equal (in module semantique.operators)": [[146, "semantique.operators.EQUAL"]], "exclusive_or (in module semantique.operators)": [[147, "semantique.operators.EXCLUSIVE_OR"]], "exponential (in module semantique.operators)": [[148, "semantique.operators.EXPONENTIAL"]], "floor (in module semantique.operators)": [[149, "semantique.operators.FLOOR"]], "greater (in module semantique.operators)": [[150, "semantique.operators.GREATER"]], "greater_equal (in module semantique.operators)": [[151, "semantique.operators.GREATER_EQUAL"]], "in (in module semantique.operators)": [[152, "semantique.operators.IN"]], "intersects (in module semantique.operators)": [[153, "semantique.operators.INTERSECTS"]], "is_missing (in module semantique.operators)": [[154, "semantique.operators.IS_MISSING"]], "less (in module semantique.operators)": [[155, "semantique.operators.LESS"]], "less_equal (in module semantique.operators)": [[156, "semantique.operators.LESS_EQUAL"]], "multiply (in module semantique.operators)": [[157, "semantique.operators.MULTIPLY"]], "natural_logarithm (in module semantique.operators)": [[158, "semantique.operators.NATURAL_LOGARITHM"]], "normalized_difference (in module semantique.operators)": [[159, "semantique.operators.NORMALIZED_DIFFERENCE"]], "not (in module semantique.operators)": [[160, "semantique.operators.NOT"]], "not_equal (in module semantique.operators)": [[161, "semantique.operators.NOT_EQUAL"]], "not_in (in module semantique.operators)": [[162, "semantique.operators.NOT_IN"]], "not_missing (in module semantique.operators)": [[163, "semantique.operators.NOT_MISSING"]], "or (in module semantique.operators)": [[164, "semantique.operators.OR"]], "power (in module semantique.operators)": [[165, "semantique.operators.POWER"]], "secant (in module semantique.operators)": [[166, "semantique.operators.SECANT"]], "sine (in module semantique.operators)": [[167, "semantique.operators.SINE"]], "square_root (in module semantique.operators)": [[168, "semantique.operators.SQUARE_ROOT"]], "subtract (in module semantique.operators)": [[169, "semantique.operators.SUBTRACT"]], "tangent (in module semantique.operators)": [[170, "semantique.operators.TANGENT"]], "to_degrees (in module semantique.operators)": [[171, "semantique.operators.TO_DEGREES"]], "to_radians (in module semantique.operators)": [[172, "semantique.operators.TO_RADIANS"]], "array (class in semantique.processor.arrays)": [[173, "semantique.processor.arrays.Array"]], "__init__() (semantique.processor.arrays.array method)": [[173, "semantique.processor.arrays.Array.__init__"]], "align_with() (semantique.processor.arrays.array method)": [[174, "semantique.processor.arrays.Array.align_with"]], "apply_custom() (semantique.processor.arrays.array method)": [[175, "semantique.processor.arrays.Array.apply_custom"]], "assign() (semantique.processor.arrays.array method)": [[176, "semantique.processor.arrays.Array.assign"]], "crs (semantique.processor.arrays.array property)": [[177, "semantique.processor.arrays.Array.crs"]], "delineate() (semantique.processor.arrays.array method)": [[178, "semantique.processor.arrays.Array.delineate"]], "drop_non_dimension_coords() (semantique.processor.arrays.array method)": [[179, "semantique.processor.arrays.Array.drop_non_dimension_coords"]], "evaluate() (semantique.processor.arrays.array method)": [[180, "semantique.processor.arrays.Array.evaluate"]], "extract() (semantique.processor.arrays.array method)": [[181, "semantique.processor.arrays.Array.extract"]], "fill() (semantique.processor.arrays.array method)": [[182, "semantique.processor.arrays.Array.fill"]], "filter() (semantique.processor.arrays.array method)": [[183, "semantique.processor.arrays.Array.filter"]], "grid_points (semantique.processor.arrays.array property)": [[184, "semantique.processor.arrays.Array.grid_points"]], "groupby() (semantique.processor.arrays.array method)": [[185, "semantique.processor.arrays.Array.groupby"]], "is_empty (semantique.processor.arrays.array property)": [[186, "semantique.processor.arrays.Array.is_empty"]], "name() (semantique.processor.arrays.array method)": [[187, "semantique.processor.arrays.Array.name"]], "reduce() (semantique.processor.arrays.array method)": [[188, "semantique.processor.arrays.Array.reduce"]], "regularize() (semantique.processor.arrays.array method)": [[189, "semantique.processor.arrays.Array.regularize"]], "reproject() (semantique.processor.arrays.array method)": [[190, "semantique.processor.arrays.Array.reproject"]], "shift() (semantique.processor.arrays.array method)": [[191, "semantique.processor.arrays.Array.shift"]], "smooth() (semantique.processor.arrays.array method)": [[192, "semantique.processor.arrays.Array.smooth"]], "spatial_resolution (semantique.processor.arrays.array property)": [[193, "semantique.processor.arrays.Array.spatial_resolution"]], "stack_all_dims() (semantique.processor.arrays.array method)": [[194, "semantique.processor.arrays.Array.stack_all_dims"]], "stack_spatial_dims() (semantique.processor.arrays.array method)": [[195, "semantique.processor.arrays.Array.stack_spatial_dims"]], "to_csv() (semantique.processor.arrays.array method)": [[196, "semantique.processor.arrays.Array.to_csv"]], "to_dataframe() (semantique.processor.arrays.array method)": [[197, "semantique.processor.arrays.Array.to_dataframe"]], "to_geodataframe() (semantique.processor.arrays.array method)": [[198, "semantique.processor.arrays.Array.to_geodataframe"]], "to_geotiff() (semantique.processor.arrays.array method)": [[199, "semantique.processor.arrays.Array.to_geotiff"]], "trim() (semantique.processor.arrays.array method)": [[200, "semantique.processor.arrays.Array.trim"]], "tz (semantique.processor.arrays.array property)": [[201, "semantique.processor.arrays.Array.tz"]], "tz_convert() (semantique.processor.arrays.array method)": [[202, "semantique.processor.arrays.Array.tz_convert"]], "unstack_all_dims() (semantique.processor.arrays.array method)": [[203, "semantique.processor.arrays.Array.unstack_all_dims"]], "unstack_spatial_dims() (semantique.processor.arrays.array method)": [[204, "semantique.processor.arrays.Array.unstack_spatial_dims"]], "value_labels (semantique.processor.arrays.array property)": [[205, "semantique.processor.arrays.Array.value_labels"]], "value_type (semantique.processor.arrays.array property)": [[206, "semantique.processor.arrays.Array.value_type"]], "write_crs() (semantique.processor.arrays.array method)": [[207, "semantique.processor.arrays.Array.write_crs"]], "write_tz() (semantique.processor.arrays.array method)": [[208, "semantique.processor.arrays.Array.write_tz"]], "collection (class in semantique.processor.arrays)": [[209, "semantique.processor.arrays.Collection"]], "__init__() (semantique.processor.arrays.collection method)": [[209, "semantique.processor.arrays.Collection.__init__"]], "apply_custom() (semantique.processor.arrays.collection method)": [[210, "semantique.processor.arrays.Collection.apply_custom"]], "assign() (semantique.processor.arrays.collection method)": [[211, "semantique.processor.arrays.Collection.assign"]], "compose() (semantique.processor.arrays.collection method)": [[212, "semantique.processor.arrays.Collection.compose"]], "concatenate() (semantique.processor.arrays.collection method)": [[213, "semantique.processor.arrays.Collection.concatenate"]], "delineate() (semantique.processor.arrays.collection method)": [[214, "semantique.processor.arrays.Collection.delineate"]], "evaluate() (semantique.processor.arrays.collection method)": [[215, "semantique.processor.arrays.Collection.evaluate"]], "extract() (semantique.processor.arrays.collection method)": [[216, "semantique.processor.arrays.Collection.extract"]], "fill() (semantique.processor.arrays.collection method)": [[217, "semantique.processor.arrays.Collection.fill"]], "filter() (semantique.processor.arrays.collection method)": [[218, "semantique.processor.arrays.Collection.filter"]], "is_empty (semantique.processor.arrays.collection property)": [[219, "semantique.processor.arrays.Collection.is_empty"]], "merge() (semantique.processor.arrays.collection method)": [[220, "semantique.processor.arrays.Collection.merge"]], "name() (semantique.processor.arrays.collection method)": [[221, "semantique.processor.arrays.Collection.name"]], "reduce() (semantique.processor.arrays.collection method)": [[222, "semantique.processor.arrays.Collection.reduce"]], "regularize() (semantique.processor.arrays.collection method)": [[223, "semantique.processor.arrays.Collection.regularize"]], "shift() (semantique.processor.arrays.collection method)": [[224, "semantique.processor.arrays.Collection.shift"]], "smooth() (semantique.processor.arrays.collection method)": [[225, "semantique.processor.arrays.Collection.smooth"]], "sq (semantique.processor.arrays.collection property)": [[226, "semantique.processor.arrays.Collection.sq"]], "stack_spatial_dims() (semantique.processor.arrays.collection method)": [[227, "semantique.processor.arrays.Collection.stack_spatial_dims"]], "trim() (semantique.processor.arrays.collection method)": [[228, "semantique.processor.arrays.Collection.trim"]], "unstack_spatial_dims() (semantique.processor.arrays.collection method)": [[229, "semantique.processor.arrays.Collection.unstack_spatial_dims"]], "cache (class in semantique.processor.core)": [[230, "semantique.processor.core.Cache"]], "__init__() (semantique.processor.core.cache method)": [[230, "semantique.processor.core.Cache.__init__"]], "build() (semantique.processor.core.cache method)": [[231, "semantique.processor.core.Cache.build"]], "data (semantique.processor.core.cache property)": [[232, "semantique.processor.core.Cache.data"]], "load() (semantique.processor.core.cache method)": [[233, "semantique.processor.core.Cache.load"]], "seq (semantique.processor.core.cache property)": [[234, "semantique.processor.core.Cache.seq"]], "update() (semantique.processor.core.cache method)": [[235, "semantique.processor.core.Cache.update"]], "queryprocessor (class in semantique.processor.core)": [[236, "semantique.processor.core.QueryProcessor"]], "__init__() (semantique.processor.core.queryprocessor method)": [[236, "semantique.processor.core.QueryProcessor.__init__"]], "add_custom_operator() (semantique.processor.core.queryprocessor method)": [[237, "semantique.processor.core.QueryProcessor.add_custom_operator"]], "add_custom_reducer() (semantique.processor.core.queryprocessor method)": [[238, "semantique.processor.core.QueryProcessor.add_custom_reducer"]], "add_custom_verb() (semantique.processor.core.queryprocessor method)": [[239, "semantique.processor.core.QueryProcessor.add_custom_verb"]], "cache (semantique.processor.core.queryprocessor property)": [[240, "semantique.processor.core.QueryProcessor.cache"]], "call_handler() (semantique.processor.core.queryprocessor method)": [[241, "semantique.processor.core.QueryProcessor.call_handler"]], "call_verb() (semantique.processor.core.queryprocessor method)": [[242, "semantique.processor.core.QueryProcessor.call_verb"]], "crs (semantique.processor.core.queryprocessor property)": [[243, "semantique.processor.core.QueryProcessor.crs"]], "custom_operators (semantique.processor.core.queryprocessor property)": [[244, "semantique.processor.core.QueryProcessor.custom_operators"]], "custom_reducers (semantique.processor.core.queryprocessor property)": [[245, "semantique.processor.core.QueryProcessor.custom_reducers"]], "custom_verbs (semantique.processor.core.queryprocessor property)": [[246, "semantique.processor.core.QueryProcessor.custom_verbs"]], "datacube (semantique.processor.core.queryprocessor property)": [[247, "semantique.processor.core.QueryProcessor.datacube"]], "execute() (semantique.processor.core.queryprocessor method)": [[248, "semantique.processor.core.QueryProcessor.execute"]], "extent (semantique.processor.core.queryprocessor property)": [[249, "semantique.processor.core.QueryProcessor.extent"]], "get_operator() (semantique.processor.core.queryprocessor method)": [[250, "semantique.processor.core.QueryProcessor.get_operator"]], "get_reducer() (semantique.processor.core.queryprocessor method)": [[251, "semantique.processor.core.QueryProcessor.get_reducer"]], "handle_apply_custom() (semantique.processor.core.queryprocessor method)": [[252, "semantique.processor.core.QueryProcessor.handle_apply_custom"]], "handle_assign() (semantique.processor.core.queryprocessor method)": [[253, "semantique.processor.core.QueryProcessor.handle_assign"]], "handle_collection() (semantique.processor.core.queryprocessor method)": [[254, "semantique.processor.core.QueryProcessor.handle_collection"]], "handle_compose() (semantique.processor.core.queryprocessor method)": [[255, "semantique.processor.core.QueryProcessor.handle_compose"]], "handle_concatenate() (semantique.processor.core.queryprocessor method)": [[256, "semantique.processor.core.QueryProcessor.handle_concatenate"]], "handle_concept() (semantique.processor.core.queryprocessor method)": [[257, "semantique.processor.core.QueryProcessor.handle_concept"]], "handle_delineate() (semantique.processor.core.queryprocessor method)": [[258, "semantique.processor.core.QueryProcessor.handle_delineate"]], "handle_evaluate() (semantique.processor.core.queryprocessor method)": [[259, "semantique.processor.core.QueryProcessor.handle_evaluate"]], "handle_extract() (semantique.processor.core.queryprocessor method)": [[260, "semantique.processor.core.QueryProcessor.handle_extract"]], "handle_fill() (semantique.processor.core.queryprocessor method)": [[261, "semantique.processor.core.QueryProcessor.handle_fill"]], "handle_filter() (semantique.processor.core.queryprocessor method)": [[262, "semantique.processor.core.QueryProcessor.handle_filter"]], "handle_geometry() (semantique.processor.core.queryprocessor method)": [[263, "semantique.processor.core.QueryProcessor.handle_geometry"]], "handle_groupby() (semantique.processor.core.queryprocessor method)": [[264, "semantique.processor.core.QueryProcessor.handle_groupby"]], "handle_interval() (semantique.processor.core.queryprocessor method)": [[265, "semantique.processor.core.QueryProcessor.handle_interval"]], "handle_label() (semantique.processor.core.queryprocessor method)": [[266, "semantique.processor.core.QueryProcessor.handle_label"]], "handle_layer() (semantique.processor.core.queryprocessor method)": [[267, "semantique.processor.core.QueryProcessor.handle_layer"]], "handle_merge() (semantique.processor.core.queryprocessor method)": [[268, "semantique.processor.core.QueryProcessor.handle_merge"]], "handle_name() (semantique.processor.core.queryprocessor method)": [[269, "semantique.processor.core.QueryProcessor.handle_name"]], "handle_processing_chain() (semantique.processor.core.queryprocessor method)": [[270, "semantique.processor.core.QueryProcessor.handle_processing_chain"]], "handle_reduce() (semantique.processor.core.queryprocessor method)": [[271, "semantique.processor.core.QueryProcessor.handle_reduce"]], "handle_result() (semantique.processor.core.queryprocessor method)": [[272, "semantique.processor.core.QueryProcessor.handle_result"]], "handle_self() (semantique.processor.core.queryprocessor method)": [[273, "semantique.processor.core.QueryProcessor.handle_self"]], "handle_set() (semantique.processor.core.queryprocessor method)": [[274, "semantique.processor.core.QueryProcessor.handle_set"]], "handle_shift() (semantique.processor.core.queryprocessor method)": [[275, "semantique.processor.core.QueryProcessor.handle_shift"]], "handle_smooth() (semantique.processor.core.queryprocessor method)": [[276, "semantique.processor.core.QueryProcessor.handle_smooth"]], "handle_time_instant() (semantique.processor.core.queryprocessor method)": [[277, "semantique.processor.core.QueryProcessor.handle_time_instant"]], "handle_time_interval() (semantique.processor.core.queryprocessor method)": [[278, "semantique.processor.core.QueryProcessor.handle_time_interval"]], "handle_trim() (semantique.processor.core.queryprocessor method)": [[279, "semantique.processor.core.QueryProcessor.handle_trim"]], "handle_verb() (semantique.processor.core.queryprocessor method)": [[280, "semantique.processor.core.QueryProcessor.handle_verb"]], "mapping (semantique.processor.core.queryprocessor property)": [[281, "semantique.processor.core.QueryProcessor.mapping"]], "optimize() (semantique.processor.core.queryprocessor method)": [[282, "semantique.processor.core.QueryProcessor.optimize"]], "parse() (semantique.processor.core.queryprocessor class method)": [[283, "semantique.processor.core.QueryProcessor.parse"]], "preview (semantique.processor.core.queryprocessor property)": [[284, "semantique.processor.core.QueryProcessor.preview"]], "recipe (semantique.processor.core.queryprocessor property)": [[285, "semantique.processor.core.QueryProcessor.recipe"]], "response (semantique.processor.core.queryprocessor property)": [[286, "semantique.processor.core.QueryProcessor.response"]], "spatial_resolution (semantique.processor.core.queryprocessor property)": [[287, "semantique.processor.core.QueryProcessor.spatial_resolution"]], "track_types (semantique.processor.core.queryprocessor property)": [[288, "semantique.processor.core.QueryProcessor.track_types"]], "tz (semantique.processor.core.queryprocessor property)": [[289, "semantique.processor.core.QueryProcessor.tz"]], "absolute_() (in module semantique.processor.operators)": [[290, "semantique.processor.operators.absolute_"]], "add_() (in module semantique.processor.operators)": [[291, "semantique.processor.operators.add_"]], "after_() (in module semantique.processor.operators)": [[292, "semantique.processor.operators.after_"]], "and_() (in module semantique.processor.operators)": [[293, "semantique.processor.operators.and_"]], "before_() (in module semantique.processor.operators)": [[294, "semantique.processor.operators.before_"]], "ceiling_() (in module semantique.processor.operators)": [[295, "semantique.processor.operators.ceiling_"]], "cosecant_() (in module semantique.processor.operators)": [[296, "semantique.processor.operators.cosecant_"]], "cosine_() (in module semantique.processor.operators)": [[297, "semantique.processor.operators.cosine_"]], "cotangent_() (in module semantique.processor.operators)": [[298, "semantique.processor.operators.cotangent_"]], "cube_root_() (in module semantique.processor.operators)": [[299, "semantique.processor.operators.cube_root_"]], "divide_() (in module semantique.processor.operators)": [[300, "semantique.processor.operators.divide_"]], "during_() (in module semantique.processor.operators)": [[301, "semantique.processor.operators.during_"]], "equal_() (in module semantique.processor.operators)": [[302, "semantique.processor.operators.equal_"]], "exclusive_or_() (in module semantique.processor.operators)": [[303, "semantique.processor.operators.exclusive_or_"]], "exponential_() (in module semantique.processor.operators)": [[304, "semantique.processor.operators.exponential_"]], "floor_() (in module semantique.processor.operators)": [[305, "semantique.processor.operators.floor_"]], "greater_() (in module semantique.processor.operators)": [[306, "semantique.processor.operators.greater_"]], "greater_equal_() (in module semantique.processor.operators)": [[307, "semantique.processor.operators.greater_equal_"]], "in_() (in module semantique.processor.operators)": [[308, "semantique.processor.operators.in_"]], "intersects_() (in module semantique.processor.operators)": [[309, "semantique.processor.operators.intersects_"]], "is_missing_() (in module semantique.processor.operators)": [[310, "semantique.processor.operators.is_missing_"]], "less_() (in module semantique.processor.operators)": [[311, "semantique.processor.operators.less_"]], "less_equal_() (in module semantique.processor.operators)": [[312, "semantique.processor.operators.less_equal_"]], "multiply_() (in module semantique.processor.operators)": [[313, "semantique.processor.operators.multiply_"]], "natural_logarithm_() (in module semantique.processor.operators)": [[314, "semantique.processor.operators.natural_logarithm_"]], "normalized_difference_() (in module semantique.processor.operators)": [[315, "semantique.processor.operators.normalized_difference_"]], "not_() (in module semantique.processor.operators)": [[316, "semantique.processor.operators.not_"]], "not_equal_() (in module semantique.processor.operators)": [[317, "semantique.processor.operators.not_equal_"]], "not_in_() (in module semantique.processor.operators)": [[318, "semantique.processor.operators.not_in_"]], "not_missing_() (in module semantique.processor.operators)": [[319, "semantique.processor.operators.not_missing_"]], "or_() (in module semantique.processor.operators)": [[320, "semantique.processor.operators.or_"]], "power_() (in module semantique.processor.operators)": [[321, "semantique.processor.operators.power_"]], "secant_() (in module semantique.processor.operators)": [[322, "semantique.processor.operators.secant_"]], "sine_() (in module semantique.processor.operators)": [[323, "semantique.processor.operators.sine_"]], "square_root_() (in module semantique.processor.operators)": [[324, "semantique.processor.operators.square_root_"]], "subtract_() (in module semantique.processor.operators)": [[325, "semantique.processor.operators.subtract_"]], "tangent_() (in module semantique.processor.operators)": [[326, "semantique.processor.operators.tangent_"]], "to_degrees_() (in module semantique.processor.operators)": [[327, "semantique.processor.operators.to_degrees_"]], "to_radians_() (in module semantique.processor.operators)": [[328, "semantique.processor.operators.to_radians_"]], "all_() (in module semantique.processor.reducers)": [[329, "semantique.processor.reducers.all_"]], "any_() (in module semantique.processor.reducers)": [[330, "semantique.processor.reducers.any_"]], "count_() (in module semantique.processor.reducers)": [[331, "semantique.processor.reducers.count_"]], "first_() (in module semantique.processor.reducers)": [[332, "semantique.processor.reducers.first_"]], "last_() (in module semantique.processor.reducers)": [[333, "semantique.processor.reducers.last_"]], "max_() (in module semantique.processor.reducers)": [[334, "semantique.processor.reducers.max_"]], "mean_() (in module semantique.processor.reducers)": [[335, "semantique.processor.reducers.mean_"]], "median_() (in module semantique.processor.reducers)": [[336, "semantique.processor.reducers.median_"]], "min_() (in module semantique.processor.reducers)": [[337, "semantique.processor.reducers.min_"]], "mode_() (in module semantique.processor.reducers)": [[338, "semantique.processor.reducers.mode_"]], "n_() (in module semantique.processor.reducers)": [[339, "semantique.processor.reducers.n_"]], "none_() (in module semantique.processor.reducers)": [[340, "semantique.processor.reducers.none_"]], "percentage_() (in module semantique.processor.reducers)": [[341, "semantique.processor.reducers.percentage_"]], "product_() (in module semantique.processor.reducers)": [[342, "semantique.processor.reducers.product_"]], "range_() (in module semantique.processor.reducers)": [[343, "semantique.processor.reducers.range_"]], "standard_deviation_() (in module semantique.processor.reducers)": [[344, "semantique.processor.reducers.standard_deviation_"]], "sum_() (in module semantique.processor.reducers)": [[345, "semantique.processor.reducers.sum_"]], "variance_() (in module semantique.processor.reducers)": [[346, "semantique.processor.reducers.variance_"]], "dtype_mapping (in module semantique.processor.types)": [[347, "semantique.processor.types.DTYPE_MAPPING"]], "type_promotion_manuals (in module semantique.processor.types)": [[348, "semantique.processor.types.TYPE_PROMOTION_MANUALS"]], "typepromoter (class in semantique.processor.types)": [[349, "semantique.processor.types.TypePromoter"]], "__init__() (semantique.processor.types.typepromoter method)": [[349, "semantique.processor.types.TypePromoter.__init__"]], "check() (semantique.processor.types.typepromoter method)": [[350, "semantique.processor.types.TypePromoter.check"]], "input_labels (semantique.processor.types.typepromoter property)": [[351, "semantique.processor.types.TypePromoter.input_labels"]], "input_types (semantique.processor.types.typepromoter property)": [[352, "semantique.processor.types.TypePromoter.input_types"]], "manual (semantique.processor.types.typepromoter property)": [[353, "semantique.processor.types.TypePromoter.manual"]], "output_labels (semantique.processor.types.typepromoter property)": [[354, "semantique.processor.types.TypePromoter.output_labels"]], "output_type (semantique.processor.types.typepromoter property)": [[355, "semantique.processor.types.TypePromoter.output_type"]], "promote() (semantique.processor.types.typepromoter method)": [[356, "semantique.processor.types.TypePromoter.promote"]], "get_value_labels() (in module semantique.processor.types)": [[357, "semantique.processor.types.get_value_labels"]], "get_value_type() (in module semantique.processor.types)": [[358, "semantique.processor.types.get_value_type"]], "allnull() (in module semantique.processor.utils)": [[359, "semantique.processor.utils.allnull"]], "convert_datetime64() (in module semantique.processor.utils)": [[360, "semantique.processor.utils.convert_datetime64"]], "datetime64_as_unix() (in module semantique.processor.utils)": [[361, "semantique.processor.utils.datetime64_as_unix"]], "get_null() (in module semantique.processor.utils)": [[362, "semantique.processor.utils.get_null"]], "inf_as_null() (in module semantique.processor.utils)": [[363, "semantique.processor.utils.inf_as_null"]], "null_as_zero() (in module semantique.processor.utils)": [[364, "semantique.processor.utils.null_as_zero"]], "parse_datetime_component() (in module semantique.processor.utils)": [[365, "semantique.processor.utils.parse_datetime_component"]], "parse_extent() (in module semantique.processor.utils)": [[366, "semantique.processor.utils.parse_extent"]], "interval (class in semantique.processor.values)": [[367, "semantique.processor.values.Interval"]], "__init__() (semantique.processor.values.interval method)": [[367, "semantique.processor.values.Interval.__init__"]], "lower (semantique.processor.values.interval property)": [[368, "semantique.processor.values.Interval.lower"]], "sq (semantique.processor.values.interval property)": [[369, "semantique.processor.values.Interval.sq"]], "upper (semantique.processor.values.interval property)": [[370, "semantique.processor.values.Interval.upper"]], "value_type (semantique.processor.values.interval property)": [[371, "semantique.processor.values.Interval.value_type"]], "all (in module semantique.reducers)": [[372, "semantique.reducers.ALL"]], "any (in module semantique.reducers)": [[373, "semantique.reducers.ANY"]], "count (in module semantique.reducers)": [[374, "semantique.reducers.COUNT"]], "first (in module semantique.reducers)": [[375, "semantique.reducers.FIRST"]], "last (in module semantique.reducers)": [[376, "semantique.reducers.LAST"]], "max (in module semantique.reducers)": [[377, "semantique.reducers.MAX"]], "mean (in module semantique.reducers)": [[378, "semantique.reducers.MEAN"]], "median (in module semantique.reducers)": [[379, "semantique.reducers.MEDIAN"]], "min (in module semantique.reducers)": [[380, "semantique.reducers.MIN"]], "mode (in module semantique.reducers)": [[381, "semantique.reducers.MODE"]], "n (in module semantique.reducers)": [[382, "semantique.reducers.N"]], "none (in module semantique.reducers)": [[383, "semantique.reducers.NONE"]], "percentage (in module semantique.reducers)": [[384, "semantique.reducers.PERCENTAGE"]], "product (in module semantique.reducers)": [[385, "semantique.reducers.PRODUCT"]], "range (in module semantique.reducers)": [[386, "semantique.reducers.RANGE"]], "standard_deviation (in module semantique.reducers)": [[387, "semantique.reducers.STANDARD_DEVIATION"]], "sum (in module semantique.reducers)": [[388, "semantique.reducers.SUM"]], "variance (in module semantique.reducers)": [[389, "semantique.reducers.VARIANCE"]], "reflectance() (in module semantique)": [[390, "semantique.reflectance"]], "result() (in module semantique)": [[391, "semantique.result"]], "self() (in module semantique)": [[392, "semantique.self"]], "set() (in module semantique)": [[393, "semantique.set"]], "time_instant() (in module semantique)": [[394, "semantique.time_instant"]], "time_interval() (in module semantique)": [[395, "semantique.time_interval"]], "topography() (in module semantique)": [[396, "semantique.topography"]]}})